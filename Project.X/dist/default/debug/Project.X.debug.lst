

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Dec 27 23:21:23 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4520 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   108                           PORTA equ 0F80h ;# 
   109  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   110                           PORTB equ 0F81h ;# 
   111  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   112                           PORTC equ 0F82h ;# 
   113  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   114                           PORTD equ 0F83h ;# 
   115  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   116                           PORTE equ 0F84h ;# 
   117  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   118                           LATA equ 0F89h ;# 
   119  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   120                           LATB equ 0F8Ah ;# 
   121  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   122                           LATC equ 0F8Bh ;# 
   123  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   124                           LATD equ 0F8Ch ;# 
   125  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   126                           LATE equ 0F8Dh ;# 
   127  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   128                           TRISA equ 0F92h ;# 
   129  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   130                           DDRA equ 0F92h ;# 
   131  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   132                           TRISB equ 0F93h ;# 
   133  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   134                           DDRB equ 0F93h ;# 
   135  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   136                           TRISC equ 0F94h ;# 
   137  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   138                           DDRC equ 0F94h ;# 
   139  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   140                           TRISD equ 0F95h ;# 
   141  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   142                           DDRD equ 0F95h ;# 
   143  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   144                           TRISE equ 0F96h ;# 
   145  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   146                           DDRE equ 0F96h ;# 
   147  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   148                           OSCTUNE equ 0F9Bh ;# 
   149  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   150                           PIE1 equ 0F9Dh ;# 
   151  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   152                           PIR1 equ 0F9Eh ;# 
   153  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   154                           IPR1 equ 0F9Fh ;# 
   155  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   156                           PIE2 equ 0FA0h ;# 
   157  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   158                           PIR2 equ 0FA1h ;# 
   159  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   160                           IPR2 equ 0FA2h ;# 
   161  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   162                           EECON1 equ 0FA6h ;# 
   163  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   164                           EECON2 equ 0FA7h ;# 
   165  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   166                           EEDATA equ 0FA8h ;# 
   167  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   168                           EEADR equ 0FA9h ;# 
   169  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   170                           RCSTA equ 0FABh ;# 
   171  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   172                           RCSTA1 equ 0FABh ;# 
   173  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   174                           TXSTA equ 0FACh ;# 
   175  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   176                           TXSTA1 equ 0FACh ;# 
   177  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   178                           TXREG equ 0FADh ;# 
   179  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   180                           TXREG1 equ 0FADh ;# 
   181  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   182                           RCREG equ 0FAEh ;# 
   183  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   184                           RCREG1 equ 0FAEh ;# 
   185  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   186                           SPBRG equ 0FAFh ;# 
   187  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   188                           SPBRG1 equ 0FAFh ;# 
   189  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   190                           SPBRGH equ 0FB0h ;# 
   191  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   192                           T3CON equ 0FB1h ;# 
   193  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   194                           TMR3 equ 0FB2h ;# 
   195  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   196                           TMR3L equ 0FB2h ;# 
   197  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   198                           TMR3H equ 0FB3h ;# 
   199  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   200                           CMCON equ 0FB4h ;# 
   201  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   202                           CVRCON equ 0FB5h ;# 
   203  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   204                           ECCP1AS equ 0FB6h ;# 
   205  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   206                           ECCPAS equ 0FB6h ;# 
   207  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   208                           PWM1CON equ 0FB7h ;# 
   209  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   210                           ECCP1DEL equ 0FB7h ;# 
   211  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   212                           BAUDCON equ 0FB8h ;# 
   213  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   214                           BAUDCTL equ 0FB8h ;# 
   215  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   216                           CCP2CON equ 0FBAh ;# 
   217  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   218                           CCPR2 equ 0FBBh ;# 
   219  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   220                           CCPR2L equ 0FBBh ;# 
   221  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   222                           CCPR2H equ 0FBCh ;# 
   223  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   224                           CCP1CON equ 0FBDh ;# 
   225  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   226                           CCPR1 equ 0FBEh ;# 
   227  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   228                           CCPR1L equ 0FBEh ;# 
   229  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   230                           CCPR1H equ 0FBFh ;# 
   231  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   232                           ADCON2 equ 0FC0h ;# 
   233  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   234                           ADCON1 equ 0FC1h ;# 
   235  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   236                           ADCON0 equ 0FC2h ;# 
   237  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   238                           ADRES equ 0FC3h ;# 
   239  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   240                           ADRESL equ 0FC3h ;# 
   241  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   242                           ADRESH equ 0FC4h ;# 
   243  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   244                           SSPCON2 equ 0FC5h ;# 
   245  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   246                           SSPCON1 equ 0FC6h ;# 
   247  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   248                           SSPSTAT equ 0FC7h ;# 
   249  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   250                           SSPADD equ 0FC8h ;# 
   251  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   252                           SSPBUF equ 0FC9h ;# 
   253  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   254                           T2CON equ 0FCAh ;# 
   255  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   256                           PR2 equ 0FCBh ;# 
   257  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   258                           MEMCON equ 0FCBh ;# 
   259  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   260                           TMR2 equ 0FCCh ;# 
   261  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   262                           T1CON equ 0FCDh ;# 
   263  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   264                           TMR1 equ 0FCEh ;# 
   265  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   266                           TMR1L equ 0FCEh ;# 
   267  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   268                           TMR1H equ 0FCFh ;# 
   269  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   270                           RCON equ 0FD0h ;# 
   271  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   272                           WDTCON equ 0FD1h ;# 
   273  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   274                           HLVDCON equ 0FD2h ;# 
   275  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   276                           LVDCON equ 0FD2h ;# 
   277  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   278                           OSCCON equ 0FD3h ;# 
   279  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   280                           T0CON equ 0FD5h ;# 
   281  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   282                           TMR0 equ 0FD6h ;# 
   283  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   284                           TMR0L equ 0FD6h ;# 
   285  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   286                           TMR0H equ 0FD7h ;# 
   287  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   288                           STATUS equ 0FD8h ;# 
   289  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   290                           FSR2 equ 0FD9h ;# 
   291  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   292                           FSR2L equ 0FD9h ;# 
   293  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   294                           FSR2H equ 0FDAh ;# 
   295  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   296                           PLUSW2 equ 0FDBh ;# 
   297  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   298                           PREINC2 equ 0FDCh ;# 
   299  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   300                           POSTDEC2 equ 0FDDh ;# 
   301  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   302                           POSTINC2 equ 0FDEh ;# 
   303  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   304                           INDF2 equ 0FDFh ;# 
   305  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   306                           BSR equ 0FE0h ;# 
   307  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   308                           FSR1 equ 0FE1h ;# 
   309  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   310                           FSR1L equ 0FE1h ;# 
   311  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   312                           FSR1H equ 0FE2h ;# 
   313  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   314                           PLUSW1 equ 0FE3h ;# 
   315  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   316                           PREINC1 equ 0FE4h ;# 
   317  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   318                           POSTDEC1 equ 0FE5h ;# 
   319  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   320                           POSTINC1 equ 0FE6h ;# 
   321  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   322                           INDF1 equ 0FE7h ;# 
   323  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   324                           WREG equ 0FE8h ;# 
   325  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   326                           FSR0 equ 0FE9h ;# 
   327  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   328                           FSR0L equ 0FE9h ;# 
   329  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   330                           FSR0H equ 0FEAh ;# 
   331  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   332                           PLUSW0 equ 0FEBh ;# 
   333  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   334                           PREINC0 equ 0FECh ;# 
   335  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   336                           POSTDEC0 equ 0FEDh ;# 
   337  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   338                           POSTINC0 equ 0FEEh ;# 
   339  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   340                           INDF0 equ 0FEFh ;# 
   341  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   342                           INTCON3 equ 0FF0h ;# 
   343  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   344                           INTCON2 equ 0FF1h ;# 
   345  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   346                           INTCON equ 0FF2h ;# 
   347  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   348                           PROD equ 0FF3h ;# 
   349  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   350                           PRODL equ 0FF3h ;# 
   351  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   352                           PRODH equ 0FF4h ;# 
   353  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   354                           TABLAT equ 0FF5h ;# 
   355  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   356                           TBLPTR equ 0FF6h ;# 
   357  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   358                           TBLPTRL equ 0FF6h ;# 
   359  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   360                           TBLPTRH equ 0FF7h ;# 
   361  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   362                           TBLPTRU equ 0FF8h ;# 
   363  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   364                           PCLAT equ 0FF9h ;# 
   365  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   366                           PC equ 0FF9h ;# 
   367  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   368                           PCL equ 0FF9h ;# 
   369  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   370                           PCLATH equ 0FFAh ;# 
   371  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   372                           PCLATU equ 0FFBh ;# 
   373  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   374                           STKPTR equ 0FFCh ;# 
   375  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   376                           TOS equ 0FFDh ;# 
   377  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   378                           TOSL equ 0FFDh ;# 
   379  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   380                           TOSH equ 0FFEh ;# 
   381  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   382                           TOSU equ 0FFFh ;# 
   383  0000                     	FNCALL	_main,_buzz
   384                           	FNCALL	_buzz,_Delay
   385                           	FNCALL	_buzz,_init_buzzer
   386                           	FNROOT	_main
   387                           	FNCALL	intlevel2,_Hi_ISR
   388                           	global	intlevel2
   389                           	FNROOT	intlevel2
   390                           	global	_half_cyc
   391                           	global	_TRISCbits
   392                           _TRISCbits	set	0xF94
   393  0000                     	global	_TMR1
   394                           _TMR1	set	0xFCE
   395  0000                     	global	_CCPR2
   396                           _CCPR2	set	0xFBB
   397  0000                     	global	_RCONbits
   398                           _RCONbits	set	0xFD0
   399  0000                     	global	_PIE2bits
   400                           _PIE2bits	set	0xFA0
   401  0000                     	global	_PIR2bits
   402                           _PIR2bits	set	0xFA1
   403  0000                     	global	_IPR2bits
   404                           _IPR2bits	set	0xFA2
   405  0000                     	global	_CCP2CON
   406                           _CCP2CON	set	0xFBA
   407  0000                     	global	_T1CON
   408                           _T1CON	set	0xFCD
   409  0000                     	global	_T3CON
   410                           _T3CON	set	0xFB1
   411  0000                     	global	_IRCF0
   412                           _IRCF0	set	0x7E9C
   413  0000                     	global	_IRCF1
   414                           _IRCF1	set	0x7E9D
   415  0000                     	global	_IRCF2
   416                           _IRCF2	set	0x7E9E
   417  0000                     	global	_TMR0
   418                           _TMR0	set	0xFD6
   419  0000                     	global	_T0CON
   420                           _T0CON	set	0xFD5
   421  0000                     	global	_INTCON
   422                           _INTCON	set	0xFF2
   423  0000                     	global	_INTCONbits
   424                           _INTCONbits	set	0xFF2
   425  0000                     ; #config settings
   426                           global __CFG_OSC$INTIO67
   427                           __CFG_OSC$INTIO67 equ 0x0
   428  0000                     global __CFG_FCMEN$OFF
   429                           __CFG_FCMEN$OFF equ 0x0
   430  0000                     global __CFG_IESO$ON
   431                           __CFG_IESO$ON equ 0x0
   432  0000                     global __CFG_PWRT$OFF
   433                           __CFG_PWRT$OFF equ 0x0
   434  0000                     global __CFG_BOREN$SBORDIS
   435                           __CFG_BOREN$SBORDIS equ 0x0
   436  0000                     global __CFG_BORV$3
   437                           __CFG_BORV$3 equ 0x0
   438  0000                     global __CFG_WDT$OFF
   439                           __CFG_WDT$OFF equ 0x0
   440  0000                     global __CFG_WDTPS$1
   441                           __CFG_WDTPS$1 equ 0x0
   442  0000                     global __CFG_CCP2MX$PORTC
   443                           __CFG_CCP2MX$PORTC equ 0x0
   444  0000                     global __CFG_PBADEN$ON
   445                           __CFG_PBADEN$ON equ 0x0
   446  0000                     global __CFG_LPT1OSC$OFF
   447                           __CFG_LPT1OSC$OFF equ 0x0
   448  0000                     global __CFG_MCLRE$ON
   449                           __CFG_MCLRE$ON equ 0x0
   450  0000                     global __CFG_STVREN$ON
   451                           __CFG_STVREN$ON equ 0x0
   452  0000                     global __CFG_LVP$OFF
   453                           __CFG_LVP$OFF equ 0x0
   454  0000                     global __CFG_XINST$OFF
   455                           __CFG_XINST$OFF equ 0x0
   456  0000                     global __CFG_CP0$OFF
   457                           __CFG_CP0$OFF equ 0x0
   458  0000                     global __CFG_CP1$OFF
   459                           __CFG_CP1$OFF equ 0x0
   460  0000                     global __CFG_CP2$OFF
   461                           __CFG_CP2$OFF equ 0x0
   462  0000                     global __CFG_CP3$OFF
   463                           __CFG_CP3$OFF equ 0x0
   464  0000                     global __CFG_CPB$OFF
   465                           __CFG_CPB$OFF equ 0x0
   466  0000                     global __CFG_CPD$OFF
   467                           __CFG_CPD$OFF equ 0x0
   468  0000                     global __CFG_WRT0$OFF
   469                           __CFG_WRT0$OFF equ 0x0
   470  0000                     global __CFG_WRT1$OFF
   471                           __CFG_WRT1$OFF equ 0x0
   472  0000                     global __CFG_WRT2$OFF
   473                           __CFG_WRT2$OFF equ 0x0
   474  0000                     global __CFG_WRT3$OFF
   475                           __CFG_WRT3$OFF equ 0x0
   476  0000                     global __CFG_WRTC$OFF
   477                           __CFG_WRTC$OFF equ 0x0
   478  0000                     global __CFG_WRTB$OFF
   479                           __CFG_WRTB$OFF equ 0x0
   480  0000                     global __CFG_WRTD$OFF
   481                           __CFG_WRTD$OFF equ 0x0
   482  0000                     global __CFG_EBTR0$OFF
   483                           __CFG_EBTR0$OFF equ 0x0
   484  0000                     global __CFG_EBTR1$OFF
   485                           __CFG_EBTR1$OFF equ 0x0
   486  0000                     global __CFG_EBTR2$OFF
   487                           __CFG_EBTR2$OFF equ 0x0
   488  0000                     global __CFG_EBTR3$OFF
   489                           __CFG_EBTR3$OFF equ 0x0
   490  0000                     global __CFG_EBTRB$OFF
   491                           __CFG_EBTRB$OFF equ 0x0
   492  0000                     	file	"C:\Users\user\AppData\Local\Temp\sca8."
   493                           	line	#
   494                           psect	cinit,class=CODE,delta=1,reloc=2
   495                           global __pcinit
   496                           __pcinit:
   497  0007BE                     global start_initialization
   498                           start_initialization:
   499  0007BE                     
   500                           global __initialization
   501                           __initialization:
   502  0007BE                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   503                           global __pbssCOMRAM
   504                           __pbssCOMRAM:
   505  000009                     	global	_half_cyc
   506                           _half_cyc:
   507  000009                            ds      2
   508  000009                     	file	"C:\Users\user\AppData\Local\Temp\sca8."
   509                           	line	#
   510                           psect	cinit
   511                           ; Clear objects allocated to COMRAM (2 bytes)
   512                           	global __pbssCOMRAM
   513                           clrf	(__pbssCOMRAM+1)&0xffh,c
   514  0007BE  6A0A               clrf	(__pbssCOMRAM+0)&0xffh,c
   515  0007C0  6A09               psect cinit,class=CODE,delta=1
   516                           global end_of_initialization,__end_of__initialization
   517                           
   518                           ;End of C runtime variable initialization code
   519                           
   520                           end_of_initialization:
   521  0007C2                     __end_of__initialization:
   522  0007C2                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   523  0007C2  900B               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   524  0007C4  920B               movlb 0
   525  0007C6  0100               goto _main	;jump to C main() function
   526  0007C8  EF3F  F003         psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   527                           global __pcstackCOMRAM
   528                           __pcstackCOMRAM:
   529  000001                     ?_init_buzzer:	; 1 bytes @ 0x0
   530  000001                     ??_init_buzzer:	; 1 bytes @ 0x0
   531  000001                     ?_Delay:	; 1 bytes @ 0x0
   532  000001                     ?_Hi_ISR:	; 1 bytes @ 0x0
   533  000001                     ??_Hi_ISR:	; 1 bytes @ 0x0
   534  000001                     ?_main:	; 1 bytes @ 0x0
   535  000001                     	global	Delay@xc
   536                           Delay@xc:	; 2 bytes @ 0x0
   537  000001                     	ds   2
   538  000001                     ??_Delay:	; 1 bytes @ 0x2
   539  000003                     ?_buzz:	; 1 bytes @ 0x2
   540  000003                     	global	buzz@red
   541                           buzz@red:	; 2 bytes @ 0x2
   542  000003                     	ds   2
   543  000003                     	global	buzz@green
   544                           buzz@green:	; 2 bytes @ 0x4
   545  000005                     	ds   2
   546  000005                     	global	buzz@blue
   547                           buzz@blue:	; 2 bytes @ 0x6
   548  000007                     	ds   2
   549  000007                     ??_buzz:	; 1 bytes @ 0x8
   550  000009                     ??_main:	; 1 bytes @ 0x8
   551  000009                     ;!
   552                           ;!Data Sizes:
   553                           ;!    Strings     0
   554                           ;!    Constant    0
   555                           ;!    Data        0
   556                           ;!    BSS         2
   557                           ;!    Persistent  0
   558                           ;!    Stack       0
   559                           ;!
   560                           ;!Auto Spaces:
   561                           ;!    Space          Size  Autos    Used
   562                           ;!    COMRAM          126      8      10
   563                           ;!    BANK0           128      0       0
   564                           ;!    BANK1           256      0       0
   565                           ;!    BANK2           256      0       0
   566                           ;!    BANK3           256      0       0
   567                           ;!    BANK4           256      0       0
   568                           ;!    BANK5           244      0       0
   569                           
   570                           ;!
   571                           ;!Pointer List with Targets:
   572                           ;!
   573                           ;!    None.
   574                           
   575                           
   576                           ;!
   577                           ;!Critical Paths under _main in COMRAM
   578                           ;!
   579                           ;!    _main->_buzz
   580                           ;!    _buzz->_Delay
   581                           ;!
   582                           ;!Critical Paths under _Hi_ISR in COMRAM
   583                           ;!
   584                           ;!    None.
   585                           ;!
   586                           ;!Critical Paths under _main in BANK0
   587                           ;!
   588                           ;!    None.
   589                           ;!
   590                           ;!Critical Paths under _Hi_ISR in BANK0
   591                           ;!
   592                           ;!    None.
   593                           ;!
   594                           ;!Critical Paths under _main in BANK1
   595                           ;!
   596                           ;!    None.
   597                           ;!
   598                           ;!Critical Paths under _Hi_ISR in BANK1
   599                           ;!
   600                           ;!    None.
   601                           ;!
   602                           ;!Critical Paths under _main in BANK2
   603                           ;!
   604                           ;!    None.
   605                           ;!
   606                           ;!Critical Paths under _Hi_ISR in BANK2
   607                           ;!
   608                           ;!    None.
   609                           ;!
   610                           ;!Critical Paths under _main in BANK3
   611                           ;!
   612                           ;!    None.
   613                           ;!
   614                           ;!Critical Paths under _Hi_ISR in BANK3
   615                           ;!
   616                           ;!    None.
   617                           ;!
   618                           ;!Critical Paths under _main in BANK4
   619                           ;!
   620                           ;!    None.
   621                           ;!
   622                           ;!Critical Paths under _Hi_ISR in BANK4
   623                           ;!
   624                           ;!    None.
   625                           ;!
   626                           ;!Critical Paths under _main in BANK5
   627                           ;!
   628                           ;!    None.
   629                           ;!
   630                           ;!Critical Paths under _Hi_ISR in BANK5
   631                           ;!
   632                           ;!    None.
   633                           
   634 ;;
   635 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   636 ;;
   637                           
   638                           ;!
   639                           ;!Call Graph Tables:
   640                           ;!
   641                           ;! ---------------------------------------------------------------------------------
   642                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   643                           ;! ---------------------------------------------------------------------------------
   644                           ;! (0) _main                                                 0     0      0    3176
   645                           ;!                               _buzz
   646                           ;! ---------------------------------------------------------------------------------
   647                           ;! (1) _buzz                                                 6     0      6    3176
   648                           ;!                                              2 COMRAM     6     0      6
   649                           ;!                              _Delay
   650                           ;!                        _init_buzzer
   651                           ;! ---------------------------------------------------------------------------------
   652                           ;! (2) _init_buzzer                                          0     0      0       0
   653                           ;! ---------------------------------------------------------------------------------
   654                           ;! (2) _Delay                                                2     0      2     296
   655                           ;!                                              0 COMRAM     2     0      2
   656                           ;! ---------------------------------------------------------------------------------
   657                           ;! Estimated maximum stack depth 2
   658                           ;! ---------------------------------------------------------------------------------
   659                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   660                           ;! ---------------------------------------------------------------------------------
   661                           ;! (3) _Hi_ISR                                               0     0      0       0
   662                           ;! ---------------------------------------------------------------------------------
   663                           ;! Estimated maximum stack depth 3
   664                           ;! ---------------------------------------------------------------------------------
   665                           ;!
   666                           ;! Call Graph Graphs:
   667                           ;!
   668                           ;! _main (ROOT)
   669                           ;!   _buzz
   670                           ;!     _Delay
   671                           ;!     _init_buzzer
   672                           ;!
   673                           ;! _Hi_ISR (ROOT)
   674                           ;!
   675                           
   676                           ;! Address spaces:
   677                           
   678                           ;!Name               Size   Autos  Total    Cost      Usage
   679                           ;!BIGRAM             5F3      0       0      16        0.0%
   680                           ;!EEDATA             100      0       0       0        0.0%
   681                           ;!BITBANK4           100      0       0      11        0.0%
   682                           ;!BANK4              100      0       0      12        0.0%
   683                           ;!BITBANK3           100      0       0       9        0.0%
   684                           ;!BANK3              100      0       0      10        0.0%
   685                           ;!BITBANK2           100      0       0       7        0.0%
   686                           ;!BANK2              100      0       0       8        0.0%
   687                           ;!BITBANK1           100      0       0       5        0.0%
   688                           ;!BANK1              100      0       0       6        0.0%
   689                           ;!BITBANK5            F4      0       0      15        0.0%
   690                           ;!BANK5               F4      0       0      13        0.0%
   691                           ;!BITBANK0            80      0       0       3        0.0%
   692                           ;!BANK0               80      0       0       4        0.0%
   693                           ;!BITCOMRAM           7E      0       0       0        0.0%
   694                           ;!COMRAM              7E      8       A       1        7.9%
   695                           ;!BITSFR_5             0      0       0     200        0.0%
   696                           ;!SFR_5                0      0       0     200        0.0%
   697                           ;!BITSFR_4             0      0       0     200        0.0%
   698                           ;!SFR_4                0      0       0     200        0.0%
   699                           ;!BITSFR_3             0      0       0     200        0.0%
   700                           ;!SFR_3                0      0       0     200        0.0%
   701                           ;!BITSFR_2             0      0       0     200        0.0%
   702                           ;!SFR_2                0      0       0     200        0.0%
   703                           ;!BITSFR_1             0      0       0     200        0.0%
   704                           ;!SFR_1                0      0       0     200        0.0%
   705                           ;!BITSFR               0      0       0     200        0.0%
   706                           ;!SFR                  0      0       0     200        0.0%
   707                           ;!STACK                0      0       0       2        0.0%
   708                           ;!NULL                 0      0       0       0        0.0%
   709                           ;!ABS                  0      0       A      14        0.0%
   710                           ;!DATA                 0      0       A      17        0.0%
   711                           ;!CODE                 0      0       0       0        0.0%
   712                           
   713                           	global	_main
   714                           
   715 ;; *************** function _main *****************
   716 ;; Defined at:
   717 ;;		line 59 in file "main.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;		None
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, status,2, status,0, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   731 ;;      Params:         0       0       0       0       0       0       0
   732 ;;      Locals:         0       0       0       0       0       0       0
   733 ;;      Temps:          0       0       0       0       0       0       0
   734 ;;      Totals:         0       0       0       0       0       0       0
   735 ;;Total ram usage:        0 bytes
   736 ;; Hardware stack levels required when called:    3
   737 ;; This function calls:
   738 ;;		_buzz
   739 ;; This function is called by:
   740 ;;		Startup code after reset
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           psect	text0,class=CODE,space=0,reloc=2,group=0
   744                           	file	"main.c"
   745                           	line	59
   746                           global __ptext0
   747                           __ptext0:
   748  00067E                     psect	text0
   749                           	file	"main.c"
   750                           	line	59
   751                           	global	__size_of_main
   752                           	__size_of_main	equ	__end_of_main-_main
   753  0000                     	
   754                           _main:
   755  00067E                     ;incstack = 0
   756                           	opt	stack 28
   757                           	line	60
   758                           	
   759                           l1128:
   760  00067E                     	bsf	((c:4048)),c,7	;volatile
   761  00067E  8ED0               	line	61
   762                           	bsf	c:(32414/8),(32414)&7	;volatile
   763  000680  8CD3               	line	62
   764                           	bsf	c:(32413/8),(32413)&7	;volatile
   765  000682  8AD3               	line	63
   766                           	bcf	c:(32412/8),(32412)&7	;volatile
   767  000684  98D3               	line	65
   768                           	
   769                           l1130:
   770  000686                     	movlw	high(0)
   771  000686  0E00               	movwf	((c:buzz@red+1)),c
   772  000688  6E04               	movlw	low(0)
   773  00068A  0E00               	movwf	((c:buzz@red)),c
   774  00068C  6E03               	movlw	high(0)
   775  00068E  0E00               	movwf	((c:buzz@green+1)),c
   776  000690  6E06               	movlw	low(0)
   777  000692  0E00               	movwf	((c:buzz@green)),c
   778  000694  6E05               	movlw	high(0)
   779  000696  0E00               	movwf	((c:buzz@blue+1)),c
   780  000698  6E08               	movlw	low(0)
   781  00069A  0E00               	movwf	((c:buzz@blue)),c
   782  00069C  6E07               	call	_buzz	;wreg free
   783  00069E  EC09  F000         	line	66
   784                           	movlw	high(080h)
   785  0006A2  0E00               	movwf	((c:buzz@red+1)),c
   786  0006A4  6E04               	movlw	low(080h)
   787  0006A6  0E80               	movwf	((c:buzz@red)),c
   788  0006A8  6E03               	movlw	high(0)
   789  0006AA  0E00               	movwf	((c:buzz@green+1)),c
   790  0006AC  6E06               	movlw	low(0)
   791  0006AE  0E00               	movwf	((c:buzz@green)),c
   792  0006B0  6E05               	movlw	high(0)
   793  0006B2  0E00               	movwf	((c:buzz@blue+1)),c
   794  0006B4  6E08               	movlw	low(0)
   795  0006B6  0E00               	movwf	((c:buzz@blue)),c
   796  0006B8  6E07               	call	_buzz	;wreg free
   797  0006BA  EC09  F000         	line	67
   798                           	movlw	high(0)
   799  0006BE  0E00               	movwf	((c:buzz@red+1)),c
   800  0006C0  6E04               	movlw	low(0)
   801  0006C2  0E00               	movwf	((c:buzz@red)),c
   802  0006C4  6E03               	movlw	high(080h)
   803  0006C6  0E00               	movwf	((c:buzz@green+1)),c
   804  0006C8  6E06               	movlw	low(080h)
   805  0006CA  0E80               	movwf	((c:buzz@green)),c
   806  0006CC  6E05               	movlw	high(0)
   807  0006CE  0E00               	movwf	((c:buzz@blue+1)),c
   808  0006D0  6E08               	movlw	low(0)
   809  0006D2  0E00               	movwf	((c:buzz@blue)),c
   810  0006D4  6E07               	call	_buzz	;wreg free
   811  0006D6  EC09  F000         	line	68
   812                           	movlw	high(0)
   813  0006DA  0E00               	movwf	((c:buzz@red+1)),c
   814  0006DC  6E04               	movlw	low(0)
   815  0006DE  0E00               	movwf	((c:buzz@red)),c
   816  0006E0  6E03               	movlw	high(0)
   817  0006E2  0E00               	movwf	((c:buzz@green+1)),c
   818  0006E4  6E06               	movlw	low(0)
   819  0006E6  0E00               	movwf	((c:buzz@green)),c
   820  0006E8  6E05               	movlw	high(080h)
   821  0006EA  0E00               	movwf	((c:buzz@blue+1)),c
   822  0006EC  6E08               	movlw	low(080h)
   823  0006EE  0E80               	movwf	((c:buzz@blue)),c
   824  0006F0  6E07               	call	_buzz	;wreg free
   825  0006F2  EC09  F000         	line	69
   826                           	movlw	high(080h)
   827  0006F6  0E00               	movwf	((c:buzz@red+1)),c
   828  0006F8  6E04               	movlw	low(080h)
   829  0006FA  0E80               	movwf	((c:buzz@red)),c
   830  0006FC  6E03               	movlw	high(080h)
   831  0006FE  0E00               	movwf	((c:buzz@green+1)),c
   832  000700  6E06               	movlw	low(080h)
   833  000702  0E80               	movwf	((c:buzz@green)),c
   834  000704  6E05               	movlw	high(0)
   835  000706  0E00               	movwf	((c:buzz@blue+1)),c
   836  000708  6E08               	movlw	low(0)
   837  00070A  0E00               	movwf	((c:buzz@blue)),c
   838  00070C  6E07               	call	_buzz	;wreg free
   839  00070E  EC09  F000         	line	70
   840                           	movlw	high(080h)
   841  000712  0E00               	movwf	((c:buzz@red+1)),c
   842  000714  6E04               	movlw	low(080h)
   843  000716  0E80               	movwf	((c:buzz@red)),c
   844  000718  6E03               	movlw	high(0)
   845  00071A  0E00               	movwf	((c:buzz@green+1)),c
   846  00071C  6E06               	movlw	low(0)
   847  00071E  0E00               	movwf	((c:buzz@green)),c
   848  000720  6E05               	movlw	high(080h)
   849  000722  0E00               	movwf	((c:buzz@blue+1)),c
   850  000724  6E08               	movlw	low(080h)
   851  000726  0E80               	movwf	((c:buzz@blue)),c
   852  000728  6E07               	call	_buzz	;wreg free
   853  00072A  EC09  F000         	line	71
   854                           	movlw	high(0)
   855  00072E  0E00               	movwf	((c:buzz@red+1)),c
   856  000730  6E04               	movlw	low(0)
   857  000732  0E00               	movwf	((c:buzz@red)),c
   858  000734  6E03               	movlw	high(080h)
   859  000736  0E00               	movwf	((c:buzz@green+1)),c
   860  000738  6E06               	movlw	low(080h)
   861  00073A  0E80               	movwf	((c:buzz@green)),c
   862  00073C  6E05               	movlw	high(080h)
   863  00073E  0E00               	movwf	((c:buzz@blue+1)),c
   864  000740  6E08               	movlw	low(080h)
   865  000742  0E80               	movwf	((c:buzz@blue)),c
   866  000744  6E07               	call	_buzz	;wreg free
   867  000746  EC09  F000         	line	72
   868                           	movlw	high(080h)
   869  00074A  0E00               	movwf	((c:buzz@red+1)),c
   870  00074C  6E04               	movlw	low(080h)
   871  00074E  0E80               	movwf	((c:buzz@red)),c
   872  000750  6E03               	movlw	high(080h)
   873  000752  0E00               	movwf	((c:buzz@green+1)),c
   874  000754  6E06               	movlw	low(080h)
   875  000756  0E80               	movwf	((c:buzz@green)),c
   876  000758  6E05               	movlw	high(080h)
   877  00075A  0E00               	movwf	((c:buzz@blue+1)),c
   878  00075C  6E08               	movlw	low(080h)
   879  00075E  0E80               	movwf	((c:buzz@blue)),c
   880  000760  6E07               	call	_buzz	;wreg free
   881  000762  EC09  F000         	line	73
   882                           	
   883                           l97:
   884  000766                     	
   885                           l98:
   886  000766                     	goto	l97
   887  000766  EFB3  F003         	
   888                           l99:
   889  00076A                     	line	75
   890                           	
   891                           l100:
   892  00076A                     	global	start
   893                           	goto	start
   894  00076A  EF07  F000         	opt stack 0
   895                           GLOBAL	__end_of_main
   896                           	__end_of_main:
   897  00076E                     	signat	_main,89
   898                           	global	_buzz
   899                           
   900 ;; *************** function _buzz *****************
   901 ;; Defined at:
   902 ;;		line 20 in file "./buzzer.h"
   903 ;; Parameters:    Size  Location     Type
   904 ;;  red             2    2[COMRAM] int 
   905 ;;  green           2    4[COMRAM] int 
   906 ;;  blue            2    6[COMRAM] int 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;		None
   909 ;; Return value:  Size  Location     Type
   910 ;;                  1    wreg      void 
   911 ;; Registers used:
   912 ;;		wreg, status,2, status,0, cstack
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   918 ;;      Params:         6       0       0       0       0       0       0
   919 ;;      Locals:         0       0       0       0       0       0       0
   920 ;;      Temps:          0       0       0       0       0       0       0
   921 ;;      Totals:         6       0       0       0       0       0       0
   922 ;;Total ram usage:        6 bytes
   923 ;; Hardware stack levels used:    1
   924 ;; Hardware stack levels required when called:    2
   925 ;; This function calls:
   926 ;;		_Delay
   927 ;;		_init_buzzer
   928 ;; This function is called by:
   929 ;;		_main
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           psect	text1,class=CODE,space=0,reloc=2,group=0
   933                           	file	"./buzzer.h"
   934                           	line	20
   935                           global __ptext1
   936                           __ptext1:
   937  000012                     psect	text1
   938                           	file	"./buzzer.h"
   939                           	line	20
   940                           	global	__size_of_buzz
   941                           	__size_of_buzz	equ	__end_of_buzz-_buzz
   942  0000                     	
   943                           _buzz:
   944  000012                     ;incstack = 0
   945                           	opt	stack 28
   946                           	line	21
   947                           	
   948                           l1008:
   949  000012                     ;./buzzer.h: 21:     init_buzzer();
   950                           	call	_init_buzzer	;wreg free
   951  000012  ECB7  F003         	line	23
   952                           	
   953                           l1010:
   954  000016                     ;./buzzer.h: 23:     if ((red >= 0 && red <=127) &&
   955                           	btfsc	((c:buzz@red+1)),c,7
   956  000016  BE04               	goto	u721
   957  000018  EF10  F000         	goto	u720
   958  00001C  EF12  F000         
   959                           u721:
   960  000020                     	goto	l1024
   961  000020  EF50  F000         u720:
   962  000024                     	
   963                           l1012:
   964  000024                     	btfsc	((c:buzz@red+1)),c,7
   965  000024  BE04               	goto	u730
   966  000026  EF20  F000         	movf	((c:buzz@red+1)),c,w
   967  00002A  5004               	bnz	u731
   968  00002C  E107               	movlw	128
   969  00002E  0E80               	subwf	 ((c:buzz@red)),c,w
   970  000030  5C03               	btfsc	status,0
   971  000032  B0D8               	goto	u731
   972  000034  EF1E  F000         	goto	u730
   973  000038  EF20  F000         
   974                           u731:
   975  00003C                     	goto	l1024
   976  00003C  EF50  F000         u730:
   977  000040                     	
   978                           l1014:
   979  000040                     	btfsc	((c:buzz@green+1)),c,7
   980  000040  BE06               	goto	u741
   981  000042  EF25  F000         	goto	u740
   982  000046  EF27  F000         
   983                           u741:
   984  00004A                     	goto	l1024
   985  00004A  EF50  F000         u740:
   986  00004E                     	
   987                           l1016:
   988  00004E                     	btfsc	((c:buzz@green+1)),c,7
   989  00004E  BE06               	goto	u750
   990  000050  EF35  F000         	movf	((c:buzz@green+1)),c,w
   991  000054  5006               	bnz	u751
   992  000056  E107               	movlw	128
   993  000058  0E80               	subwf	 ((c:buzz@green)),c,w
   994  00005A  5C05               	btfsc	status,0
   995  00005C  B0D8               	goto	u751
   996  00005E  EF33  F000         	goto	u750
   997  000062  EF35  F000         
   998                           u751:
   999  000066                     	goto	l1024
  1000  000066  EF50  F000         u750:
  1001  00006A                     	
  1002                           l1018:
  1003  00006A                     	btfsc	((c:buzz@blue+1)),c,7
  1004  00006A  BE08               	goto	u761
  1005  00006C  EF3A  F000         	goto	u760
  1006  000070  EF3C  F000         
  1007                           u761:
  1008  000074                     	goto	l1024
  1009  000074  EF50  F000         u760:
  1010  000078                     	
  1011                           l1020:
  1012  000078                     	btfsc	((c:buzz@blue+1)),c,7
  1013  000078  BE08               	goto	u770
  1014  00007A  EF4A  F000         	movf	((c:buzz@blue+1)),c,w
  1015  00007E  5008               	bnz	u771
  1016  000080  E107               	movlw	128
  1017  000082  0E80               	subwf	 ((c:buzz@blue)),c,w
  1018  000084  5C07               	btfsc	status,0
  1019  000086  B0D8               	goto	u771
  1020  000088  EF48  F000         	goto	u770
  1021  00008C  EF4A  F000         
  1022                           u771:
  1023  000090                     	goto	l1024
  1024  000090  EF50  F000         u770:
  1025  000094                     	line	26
  1026                           	
  1027                           l1022:
  1028  000094                     ;./buzzer.h: 25:         (blue >= 0 && blue <=127)){;./buzzer.h: 26:         half_cyc = 
                                 523;
  1029                           	movlw	high(020Bh)
  1030  000094  0E02               	movwf	((c:_half_cyc+1)),c
  1031  000096  6E0A               	movlw	low(020Bh)
  1032  000098  0E0B               	movwf	((c:_half_cyc)),c
  1033  00009A  6E09               	line	27
  1034                           ;./buzzer.h: 27:     }
  1035                           	goto	l1122
  1036  00009C  EF71  F002         	line	29
  1037                           ;./buzzer.h: 29:     else if ((red >= 128 && red <=255) &&
  1038                           	
  1039                           l43:
  1040  0000A0                     	
  1041                           l1024:
  1042  0000A0                     	btfsc	((c:buzz@red+1)),c,7
  1043  0000A0  BE04               	goto	u781
  1044  0000A2  EF5C  F000         	movf	((c:buzz@red+1)),c,w
  1045  0000A6  5004               	bnz	u780
  1046  0000A8  E109               	movlw	128
  1047  0000AA  0E80               	subwf	 ((c:buzz@red)),c,w
  1048  0000AC  5C03               	btfss	status,0
  1049  0000AE  A0D8               	goto	u781
  1050  0000B0  EF5C  F000         	goto	u780
  1051  0000B4  EF5E  F000         
  1052                           u781:
  1053  0000B8                     	goto	l1038
  1054  0000B8  EF99  F000         u780:
  1055  0000BC                     	
  1056                           l1026:
  1057  0000BC                     	btfsc	((c:buzz@red+1)),c,7
  1058  0000BC  BE04               	goto	u790
  1059  0000BE  EF69  F000         	decf	((c:buzz@red+1)),c,w
  1060  0000C2  0404               	btfsc	status,0
  1061  0000C4  B0D8               	goto	u791
  1062  0000C6  EF67  F000         	goto	u790
  1063  0000CA  EF69  F000         
  1064                           u791:
  1065  0000CE                     	goto	l1038
  1066  0000CE  EF99  F000         u790:
  1067  0000D2                     	
  1068                           l1028:
  1069  0000D2                     	btfsc	((c:buzz@green+1)),c,7
  1070  0000D2  BE06               	goto	u801
  1071  0000D4  EF6E  F000         	goto	u800
  1072  0000D8  EF70  F000         
  1073                           u801:
  1074  0000DC                     	goto	l1038
  1075  0000DC  EF99  F000         u800:
  1076  0000E0                     	
  1077                           l1030:
  1078  0000E0                     	btfsc	((c:buzz@green+1)),c,7
  1079  0000E0  BE06               	goto	u810
  1080  0000E2  EF7E  F000         	movf	((c:buzz@green+1)),c,w
  1081  0000E6  5006               	bnz	u811
  1082  0000E8  E107               	movlw	128
  1083  0000EA  0E80               	subwf	 ((c:buzz@green)),c,w
  1084  0000EC  5C05               	btfsc	status,0
  1085  0000EE  B0D8               	goto	u811
  1086  0000F0  EF7C  F000         	goto	u810
  1087  0000F4  EF7E  F000         
  1088                           u811:
  1089  0000F8                     	goto	l1038
  1090  0000F8  EF99  F000         u810:
  1091  0000FC                     	
  1092                           l1032:
  1093  0000FC                     	btfsc	((c:buzz@blue+1)),c,7
  1094  0000FC  BE08               	goto	u821
  1095  0000FE  EF83  F000         	goto	u820
  1096  000102  EF85  F000         
  1097                           u821:
  1098  000106                     	goto	l1038
  1099  000106  EF99  F000         u820:
  1100  00010A                     	
  1101                           l1034:
  1102  00010A                     	btfsc	((c:buzz@blue+1)),c,7
  1103  00010A  BE08               	goto	u830
  1104  00010C  EF93  F000         	movf	((c:buzz@blue+1)),c,w
  1105  000110  5008               	bnz	u831
  1106  000112  E107               	movlw	128
  1107  000114  0E80               	subwf	 ((c:buzz@blue)),c,w
  1108  000116  5C07               	btfsc	status,0
  1109  000118  B0D8               	goto	u831
  1110  00011A  EF91  F000         	goto	u830
  1111  00011E  EF93  F000         
  1112                           u831:
  1113  000122                     	goto	l1038
  1114  000122  EF99  F000         u830:
  1115  000126                     	line	32
  1116                           	
  1117                           l1036:
  1118  000126                     ;./buzzer.h: 31:             (blue >= 0 && blue <=127)){;./buzzer.h: 32:         half_cy
                                 c = 493;
  1119                           	movlw	high(01EDh)
  1120  000126  0E01               	movwf	((c:_half_cyc+1)),c
  1121  000128  6E0A               	movlw	low(01EDh)
  1122  00012A  0EED               	movwf	((c:_half_cyc)),c
  1123  00012C  6E09               	line	33
  1124                           ;./buzzer.h: 33:     }
  1125                           	goto	l1122
  1126  00012E  EF71  F002         	line	35
  1127                           ;./buzzer.h: 35:     else if ((red >= 0 && red <=127) &&
  1128                           	
  1129                           l45:
  1130  000132                     	
  1131                           l1038:
  1132  000132                     	btfsc	((c:buzz@red+1)),c,7
  1133  000132  BE04               	goto	u841
  1134  000134  EF9E  F000         	goto	u840
  1135  000138  EFA0  F000         
  1136                           u841:
  1137  00013C                     	goto	l1052
  1138  00013C  EFE2  F000         u840:
  1139  000140                     	
  1140                           l1040:
  1141  000140                     	btfsc	((c:buzz@red+1)),c,7
  1142  000140  BE04               	goto	u850
  1143  000142  EFAE  F000         	movf	((c:buzz@red+1)),c,w
  1144  000146  5004               	bnz	u851
  1145  000148  E107               	movlw	128
  1146  00014A  0E80               	subwf	 ((c:buzz@red)),c,w
  1147  00014C  5C03               	btfsc	status,0
  1148  00014E  B0D8               	goto	u851
  1149  000150  EFAC  F000         	goto	u850
  1150  000154  EFAE  F000         
  1151                           u851:
  1152  000158                     	goto	l1052
  1153  000158  EFE2  F000         u850:
  1154  00015C                     	
  1155                           l1042:
  1156  00015C                     	btfsc	((c:buzz@green+1)),c,7
  1157  00015C  BE06               	goto	u861
  1158  00015E  EFBA  F000         	movf	((c:buzz@green+1)),c,w
  1159  000162  5006               	bnz	u860
  1160  000164  E109               	movlw	128
  1161  000166  0E80               	subwf	 ((c:buzz@green)),c,w
  1162  000168  5C05               	btfss	status,0
  1163  00016A  A0D8               	goto	u861
  1164  00016C  EFBA  F000         	goto	u860
  1165  000170  EFBC  F000         
  1166                           u861:
  1167  000174                     	goto	l1052
  1168  000174  EFE2  F000         u860:
  1169  000178                     	
  1170                           l1044:
  1171  000178                     	btfsc	((c:buzz@green+1)),c,7
  1172  000178  BE06               	goto	u870
  1173  00017A  EFC7  F000         	decf	((c:buzz@green+1)),c,w
  1174  00017E  0406               	btfsc	status,0
  1175  000180  B0D8               	goto	u871
  1176  000182  EFC5  F000         	goto	u870
  1177  000186  EFC7  F000         
  1178                           u871:
  1179  00018A                     	goto	l1052
  1180  00018A  EFE2  F000         u870:
  1181  00018E                     	
  1182                           l1046:
  1183  00018E                     	btfsc	((c:buzz@blue+1)),c,7
  1184  00018E  BE08               	goto	u881
  1185  000190  EFCC  F000         	goto	u880
  1186  000194  EFCE  F000         
  1187                           u881:
  1188  000198                     	goto	l1052
  1189  000198  EFE2  F000         u880:
  1190  00019C                     	
  1191                           l1048:
  1192  00019C                     	btfsc	((c:buzz@blue+1)),c,7
  1193  00019C  BE08               	goto	u890
  1194  00019E  EFDC  F000         	movf	((c:buzz@blue+1)),c,w
  1195  0001A2  5008               	bnz	u891
  1196  0001A4  E107               	movlw	128
  1197  0001A6  0E80               	subwf	 ((c:buzz@blue)),c,w
  1198  0001A8  5C07               	btfsc	status,0
  1199  0001AA  B0D8               	goto	u891
  1200  0001AC  EFDA  F000         	goto	u890
  1201  0001B0  EFDC  F000         
  1202                           u891:
  1203  0001B4                     	goto	l1052
  1204  0001B4  EFE2  F000         u890:
  1205  0001B8                     	line	38
  1206                           	
  1207                           l1050:
  1208  0001B8                     ;./buzzer.h: 37:             (blue >= 0 && blue <=127)){;./buzzer.h: 38:         half_cy
                                 c = 440;
  1209                           	movlw	high(01B8h)
  1210  0001B8  0E01               	movwf	((c:_half_cyc+1)),c
  1211  0001BA  6E0A               	movlw	low(01B8h)
  1212  0001BC  0EB8               	movwf	((c:_half_cyc)),c
  1213  0001BE  6E09               	line	39
  1214                           ;./buzzer.h: 39:     }
  1215                           	goto	l1122
  1216  0001C0  EF71  F002         	line	41
  1217                           ;./buzzer.h: 41:     else if ((red >= 0 && red <=127) &&
  1218                           	
  1219                           l47:
  1220  0001C4                     	
  1221                           l1052:
  1222  0001C4                     	btfsc	((c:buzz@red+1)),c,7
  1223  0001C4  BE04               	goto	u901
  1224  0001C6  EFE7  F000         	goto	u900
  1225  0001CA  EFE9  F000         
  1226                           u901:
  1227  0001CE                     	goto	l1066
  1228  0001CE  EF2B  F001         u900:
  1229  0001D2                     	
  1230                           l1054:
  1231  0001D2                     	btfsc	((c:buzz@red+1)),c,7
  1232  0001D2  BE04               	goto	u910
  1233  0001D4  EFF7  F000         	movf	((c:buzz@red+1)),c,w
  1234  0001D8  5004               	bnz	u911
  1235  0001DA  E107               	movlw	128
  1236  0001DC  0E80               	subwf	 ((c:buzz@red)),c,w
  1237  0001DE  5C03               	btfsc	status,0
  1238  0001E0  B0D8               	goto	u911
  1239  0001E2  EFF5  F000         	goto	u910
  1240  0001E6  EFF7  F000         
  1241                           u911:
  1242  0001EA                     	goto	l1066
  1243  0001EA  EF2B  F001         u910:
  1244  0001EE                     	
  1245                           l1056:
  1246  0001EE                     	btfsc	((c:buzz@green+1)),c,7
  1247  0001EE  BE06               	goto	u921
  1248  0001F0  EFFC  F000         	goto	u920
  1249  0001F4  EFFE  F000         
  1250                           u921:
  1251  0001F8                     	goto	l1066
  1252  0001F8  EF2B  F001         u920:
  1253  0001FC                     	
  1254                           l1058:
  1255  0001FC                     	btfsc	((c:buzz@green+1)),c,7
  1256  0001FC  BE06               	goto	u930
  1257  0001FE  EF0C  F001         	movf	((c:buzz@green+1)),c,w
  1258  000202  5006               	bnz	u931
  1259  000204  E107               	movlw	128
  1260  000206  0E80               	subwf	 ((c:buzz@green)),c,w
  1261  000208  5C05               	btfsc	status,0
  1262  00020A  B0D8               	goto	u931
  1263  00020C  EF0A  F001         	goto	u930
  1264  000210  EF0C  F001         
  1265                           u931:
  1266  000214                     	goto	l1066
  1267  000214  EF2B  F001         u930:
  1268  000218                     	
  1269                           l1060:
  1270  000218                     	btfsc	((c:buzz@blue+1)),c,7
  1271  000218  BE08               	goto	u941
  1272  00021A  EF18  F001         	movf	((c:buzz@blue+1)),c,w
  1273  00021E  5008               	bnz	u940
  1274  000220  E109               	movlw	128
  1275  000222  0E80               	subwf	 ((c:buzz@blue)),c,w
  1276  000224  5C07               	btfss	status,0
  1277  000226  A0D8               	goto	u941
  1278  000228  EF18  F001         	goto	u940
  1279  00022C  EF1A  F001         
  1280                           u941:
  1281  000230                     	goto	l1066
  1282  000230  EF2B  F001         u940:
  1283  000234                     	
  1284                           l1062:
  1285  000234                     	btfsc	((c:buzz@blue+1)),c,7
  1286  000234  BE08               	goto	u950
  1287  000236  EF25  F001         	decf	((c:buzz@blue+1)),c,w
  1288  00023A  0408               	btfsc	status,0
  1289  00023C  B0D8               	goto	u951
  1290  00023E  EF23  F001         	goto	u950
  1291  000242  EF25  F001         
  1292                           u951:
  1293  000246                     	goto	l1066
  1294  000246  EF2B  F001         u950:
  1295  00024A                     	line	44
  1296                           	
  1297                           l1064:
  1298  00024A                     ;./buzzer.h: 43:             (blue >= 128 && blue <=255)){;./buzzer.h: 44:         half_
                                 cyc = 392;
  1299                           	movlw	high(0188h)
  1300  00024A  0E01               	movwf	((c:_half_cyc+1)),c
  1301  00024C  6E0A               	movlw	low(0188h)
  1302  00024E  0E88               	movwf	((c:_half_cyc)),c
  1303  000250  6E09               	line	45
  1304                           ;./buzzer.h: 45:     }
  1305                           	goto	l1122
  1306  000252  EF71  F002         	line	47
  1307                           ;./buzzer.h: 47:     else if ((red >= 128 && red <=255) &&
  1308                           	
  1309                           l49:
  1310  000256                     	
  1311                           l1066:
  1312  000256                     	btfsc	((c:buzz@red+1)),c,7
  1313  000256  BE04               	goto	u961
  1314  000258  EF37  F001         	movf	((c:buzz@red+1)),c,w
  1315  00025C  5004               	bnz	u960
  1316  00025E  E109               	movlw	128
  1317  000260  0E80               	subwf	 ((c:buzz@red)),c,w
  1318  000262  5C03               	btfss	status,0
  1319  000264  A0D8               	goto	u961
  1320  000266  EF37  F001         	goto	u960
  1321  00026A  EF39  F001         
  1322                           u961:
  1323  00026E                     	goto	l1080
  1324  00026E  EF78  F001         u960:
  1325  000272                     	
  1326                           l1068:
  1327  000272                     	btfsc	((c:buzz@red+1)),c,7
  1328  000272  BE04               	goto	u970
  1329  000274  EF44  F001         	decf	((c:buzz@red+1)),c,w
  1330  000278  0404               	btfsc	status,0
  1331  00027A  B0D8               	goto	u971
  1332  00027C  EF42  F001         	goto	u970
  1333  000280  EF44  F001         
  1334                           u971:
  1335  000284                     	goto	l1080
  1336  000284  EF78  F001         u970:
  1337  000288                     	
  1338                           l1070:
  1339  000288                     	btfsc	((c:buzz@green+1)),c,7
  1340  000288  BE06               	goto	u981
  1341  00028A  EF50  F001         	movf	((c:buzz@green+1)),c,w
  1342  00028E  5006               	bnz	u980
  1343  000290  E109               	movlw	128
  1344  000292  0E80               	subwf	 ((c:buzz@green)),c,w
  1345  000294  5C05               	btfss	status,0
  1346  000296  A0D8               	goto	u981
  1347  000298  EF50  F001         	goto	u980
  1348  00029C  EF52  F001         
  1349                           u981:
  1350  0002A0                     	goto	l1080
  1351  0002A0  EF78  F001         u980:
  1352  0002A4                     	
  1353                           l1072:
  1354  0002A4                     	btfsc	((c:buzz@green+1)),c,7
  1355  0002A4  BE06               	goto	u990
  1356  0002A6  EF5D  F001         	decf	((c:buzz@green+1)),c,w
  1357  0002AA  0406               	btfsc	status,0
  1358  0002AC  B0D8               	goto	u991
  1359  0002AE  EF5B  F001         	goto	u990
  1360  0002B2  EF5D  F001         
  1361                           u991:
  1362  0002B6                     	goto	l1080
  1363  0002B6  EF78  F001         u990:
  1364  0002BA                     	
  1365                           l1074:
  1366  0002BA                     	btfsc	((c:buzz@blue+1)),c,7
  1367  0002BA  BE08               	goto	u1001
  1368  0002BC  EF62  F001         	goto	u1000
  1369  0002C0  EF64  F001         
  1370                           u1001:
  1371  0002C4                     	goto	l1080
  1372  0002C4  EF78  F001         u1000:
  1373  0002C8                     	
  1374                           l1076:
  1375  0002C8                     	btfsc	((c:buzz@blue+1)),c,7
  1376  0002C8  BE08               	goto	u1010
  1377  0002CA  EF72  F001         	movf	((c:buzz@blue+1)),c,w
  1378  0002CE  5008               	bnz	u1011
  1379  0002D0  E107               	movlw	128
  1380  0002D2  0E80               	subwf	 ((c:buzz@blue)),c,w
  1381  0002D4  5C07               	btfsc	status,0
  1382  0002D6  B0D8               	goto	u1011
  1383  0002D8  EF70  F001         	goto	u1010
  1384  0002DC  EF72  F001         
  1385                           u1011:
  1386  0002E0                     	goto	l1080
  1387  0002E0  EF78  F001         u1010:
  1388  0002E4                     	line	50
  1389                           	
  1390                           l1078:
  1391  0002E4                     ;./buzzer.h: 49:             (blue >= 0 && blue <=127)){;./buzzer.h: 50:         half_cy
                                 c = 349;
  1392                           	movlw	high(015Dh)
  1393  0002E4  0E01               	movwf	((c:_half_cyc+1)),c
  1394  0002E6  6E0A               	movlw	low(015Dh)
  1395  0002E8  0E5D               	movwf	((c:_half_cyc)),c
  1396  0002EA  6E09               	line	51
  1397                           ;./buzzer.h: 51:     }
  1398                           	goto	l1122
  1399  0002EC  EF71  F002         	line	53
  1400                           ;./buzzer.h: 53:     else if ((red >= 128 && red <=255) &&
  1401                           	
  1402                           l51:
  1403  0002F0                     	
  1404                           l1080:
  1405  0002F0                     	btfsc	((c:buzz@red+1)),c,7
  1406  0002F0  BE04               	goto	u1021
  1407  0002F2  EF84  F001         	movf	((c:buzz@red+1)),c,w
  1408  0002F6  5004               	bnz	u1020
  1409  0002F8  E109               	movlw	128
  1410  0002FA  0E80               	subwf	 ((c:buzz@red)),c,w
  1411  0002FC  5C03               	btfss	status,0
  1412  0002FE  A0D8               	goto	u1021
  1413  000300  EF84  F001         	goto	u1020
  1414  000304  EF86  F001         
  1415                           u1021:
  1416  000308                     	goto	l1094
  1417  000308  EFC5  F001         u1020:
  1418  00030C                     	
  1419                           l1082:
  1420  00030C                     	btfsc	((c:buzz@red+1)),c,7
  1421  00030C  BE04               	goto	u1030
  1422  00030E  EF91  F001         	decf	((c:buzz@red+1)),c,w
  1423  000312  0404               	btfsc	status,0
  1424  000314  B0D8               	goto	u1031
  1425  000316  EF8F  F001         	goto	u1030
  1426  00031A  EF91  F001         
  1427                           u1031:
  1428  00031E                     	goto	l1094
  1429  00031E  EFC5  F001         u1030:
  1430  000322                     	
  1431                           l1084:
  1432  000322                     	btfsc	((c:buzz@green+1)),c,7
  1433  000322  BE06               	goto	u1041
  1434  000324  EF96  F001         	goto	u1040
  1435  000328  EF98  F001         
  1436                           u1041:
  1437  00032C                     	goto	l1094
  1438  00032C  EFC5  F001         u1040:
  1439  000330                     	
  1440                           l1086:
  1441  000330                     	btfsc	((c:buzz@green+1)),c,7
  1442  000330  BE06               	goto	u1050
  1443  000332  EFA6  F001         	movf	((c:buzz@green+1)),c,w
  1444  000336  5006               	bnz	u1051
  1445  000338  E107               	movlw	128
  1446  00033A  0E80               	subwf	 ((c:buzz@green)),c,w
  1447  00033C  5C05               	btfsc	status,0
  1448  00033E  B0D8               	goto	u1051
  1449  000340  EFA4  F001         	goto	u1050
  1450  000344  EFA6  F001         
  1451                           u1051:
  1452  000348                     	goto	l1094
  1453  000348  EFC5  F001         u1050:
  1454  00034C                     	
  1455                           l1088:
  1456  00034C                     	btfsc	((c:buzz@blue+1)),c,7
  1457  00034C  BE08               	goto	u1061
  1458  00034E  EFB2  F001         	movf	((c:buzz@blue+1)),c,w
  1459  000352  5008               	bnz	u1060
  1460  000354  E109               	movlw	128
  1461  000356  0E80               	subwf	 ((c:buzz@blue)),c,w
  1462  000358  5C07               	btfss	status,0
  1463  00035A  A0D8               	goto	u1061
  1464  00035C  EFB2  F001         	goto	u1060
  1465  000360  EFB4  F001         
  1466                           u1061:
  1467  000364                     	goto	l1094
  1468  000364  EFC5  F001         u1060:
  1469  000368                     	
  1470                           l1090:
  1471  000368                     	btfsc	((c:buzz@blue+1)),c,7
  1472  000368  BE08               	goto	u1070
  1473  00036A  EFBF  F001         	decf	((c:buzz@blue+1)),c,w
  1474  00036E  0408               	btfsc	status,0
  1475  000370  B0D8               	goto	u1071
  1476  000372  EFBD  F001         	goto	u1070
  1477  000376  EFBF  F001         
  1478                           u1071:
  1479  00037A                     	goto	l1094
  1480  00037A  EFC5  F001         u1070:
  1481  00037E                     	line	56
  1482                           	
  1483                           l1092:
  1484  00037E                     ;./buzzer.h: 55:             (blue >= 128 && blue <=255)){;./buzzer.h: 56:         half_
                                 cyc = 329;
  1485                           	movlw	high(0149h)
  1486  00037E  0E01               	movwf	((c:_half_cyc+1)),c
  1487  000380  6E0A               	movlw	low(0149h)
  1488  000382  0E49               	movwf	((c:_half_cyc)),c
  1489  000384  6E09               	line	57
  1490                           ;./buzzer.h: 57:     }
  1491                           	goto	l1122
  1492  000386  EF71  F002         	line	59
  1493                           ;./buzzer.h: 59:     else if ((red >= 0 && red <=127) &&
  1494                           	
  1495                           l53:
  1496  00038A                     	
  1497                           l1094:
  1498  00038A                     	btfsc	((c:buzz@red+1)),c,7
  1499  00038A  BE04               	goto	u1081
  1500  00038C  EFCA  F001         	goto	u1080
  1501  000390  EFCC  F001         
  1502                           u1081:
  1503  000394                     	goto	l1108
  1504  000394  EF12  F002         u1080:
  1505  000398                     	
  1506                           l1096:
  1507  000398                     	btfsc	((c:buzz@red+1)),c,7
  1508  000398  BE04               	goto	u1090
  1509  00039A  EFDA  F001         	movf	((c:buzz@red+1)),c,w
  1510  00039E  5004               	bnz	u1091
  1511  0003A0  E107               	movlw	128
  1512  0003A2  0E80               	subwf	 ((c:buzz@red)),c,w
  1513  0003A4  5C03               	btfsc	status,0
  1514  0003A6  B0D8               	goto	u1091
  1515  0003A8  EFD8  F001         	goto	u1090
  1516  0003AC  EFDA  F001         
  1517                           u1091:
  1518  0003B0                     	goto	l1108
  1519  0003B0  EF12  F002         u1090:
  1520  0003B4                     	
  1521                           l1098:
  1522  0003B4                     	btfsc	((c:buzz@green+1)),c,7
  1523  0003B4  BE06               	goto	u1101
  1524  0003B6  EFE6  F001         	movf	((c:buzz@green+1)),c,w
  1525  0003BA  5006               	bnz	u1100
  1526  0003BC  E109               	movlw	128
  1527  0003BE  0E80               	subwf	 ((c:buzz@green)),c,w
  1528  0003C0  5C05               	btfss	status,0
  1529  0003C2  A0D8               	goto	u1101
  1530  0003C4  EFE6  F001         	goto	u1100
  1531  0003C8  EFE8  F001         
  1532                           u1101:
  1533  0003CC                     	goto	l1108
  1534  0003CC  EF12  F002         u1100:
  1535  0003D0                     	
  1536                           l1100:
  1537  0003D0                     	btfsc	((c:buzz@green+1)),c,7
  1538  0003D0  BE06               	goto	u1110
  1539  0003D2  EFF3  F001         	decf	((c:buzz@green+1)),c,w
  1540  0003D6  0406               	btfsc	status,0
  1541  0003D8  B0D8               	goto	u1111
  1542  0003DA  EFF1  F001         	goto	u1110
  1543  0003DE  EFF3  F001         
  1544                           u1111:
  1545  0003E2                     	goto	l1108
  1546  0003E2  EF12  F002         u1110:
  1547  0003E6                     	
  1548                           l1102:
  1549  0003E6                     	btfsc	((c:buzz@blue+1)),c,7
  1550  0003E6  BE08               	goto	u1121
  1551  0003E8  EFFF  F001         	movf	((c:buzz@blue+1)),c,w
  1552  0003EC  5008               	bnz	u1120
  1553  0003EE  E109               	movlw	128
  1554  0003F0  0E80               	subwf	 ((c:buzz@blue)),c,w
  1555  0003F2  5C07               	btfss	status,0
  1556  0003F4  A0D8               	goto	u1121
  1557  0003F6  EFFF  F001         	goto	u1120
  1558  0003FA  EF01  F002         
  1559                           u1121:
  1560  0003FE                     	goto	l1108
  1561  0003FE  EF12  F002         u1120:
  1562  000402                     	
  1563                           l1104:
  1564  000402                     	btfsc	((c:buzz@blue+1)),c,7
  1565  000402  BE08               	goto	u1130
  1566  000404  EF0C  F002         	decf	((c:buzz@blue+1)),c,w
  1567  000408  0408               	btfsc	status,0
  1568  00040A  B0D8               	goto	u1131
  1569  00040C  EF0A  F002         	goto	u1130
  1570  000410  EF0C  F002         
  1571                           u1131:
  1572  000414                     	goto	l1108
  1573  000414  EF12  F002         u1130:
  1574  000418                     	line	62
  1575                           	
  1576                           l1106:
  1577  000418                     ;./buzzer.h: 61:             (blue >= 128 && blue <=255)){;./buzzer.h: 62:         half_
                                 cyc = 293;
  1578                           	movlw	high(0125h)
  1579  000418  0E01               	movwf	((c:_half_cyc+1)),c
  1580  00041A  6E0A               	movlw	low(0125h)
  1581  00041C  0E25               	movwf	((c:_half_cyc)),c
  1582  00041E  6E09               	line	63
  1583                           ;./buzzer.h: 63:     }
  1584                           	goto	l1122
  1585  000420  EF71  F002         	line	65
  1586                           ;./buzzer.h: 65:     else if ((red >= 128 && red <=255) &&
  1587                           	
  1588                           l55:
  1589  000424                     	
  1590                           l1108:
  1591  000424                     	btfsc	((c:buzz@red+1)),c,7
  1592  000424  BE04               	goto	u1141
  1593  000426  EF1E  F002         	movf	((c:buzz@red+1)),c,w
  1594  00042A  5004               	bnz	u1140
  1595  00042C  E109               	movlw	128
  1596  00042E  0E80               	subwf	 ((c:buzz@red)),c,w
  1597  000430  5C03               	btfss	status,0
  1598  000432  A0D8               	goto	u1141
  1599  000434  EF1E  F002         	goto	u1140
  1600  000438  EF20  F002         
  1601                           u1141:
  1602  00043C                     	goto	l1122
  1603  00043C  EF71  F002         u1140:
  1604  000440                     	
  1605                           l1110:
  1606  000440                     	btfsc	((c:buzz@red+1)),c,7
  1607  000440  BE04               	goto	u1150
  1608  000442  EF2B  F002         	decf	((c:buzz@red+1)),c,w
  1609  000446  0404               	btfsc	status,0
  1610  000448  B0D8               	goto	u1151
  1611  00044A  EF29  F002         	goto	u1150
  1612  00044E  EF2B  F002         
  1613                           u1151:
  1614  000452                     	goto	l1122
  1615  000452  EF71  F002         u1150:
  1616  000456                     	
  1617                           l1112:
  1618  000456                     	btfsc	((c:buzz@green+1)),c,7
  1619  000456  BE06               	goto	u1161
  1620  000458  EF37  F002         	movf	((c:buzz@green+1)),c,w
  1621  00045C  5006               	bnz	u1160
  1622  00045E  E109               	movlw	128
  1623  000460  0E80               	subwf	 ((c:buzz@green)),c,w
  1624  000462  5C05               	btfss	status,0
  1625  000464  A0D8               	goto	u1161
  1626  000466  EF37  F002         	goto	u1160
  1627  00046A  EF39  F002         
  1628                           u1161:
  1629  00046E                     	goto	l1122
  1630  00046E  EF71  F002         u1160:
  1631  000472                     	
  1632                           l1114:
  1633  000472                     	btfsc	((c:buzz@green+1)),c,7
  1634  000472  BE06               	goto	u1170
  1635  000474  EF44  F002         	decf	((c:buzz@green+1)),c,w
  1636  000478  0406               	btfsc	status,0
  1637  00047A  B0D8               	goto	u1171
  1638  00047C  EF42  F002         	goto	u1170
  1639  000480  EF44  F002         
  1640                           u1171:
  1641  000484                     	goto	l1122
  1642  000484  EF71  F002         u1170:
  1643  000488                     	
  1644                           l1116:
  1645  000488                     	btfsc	((c:buzz@blue+1)),c,7
  1646  000488  BE08               	goto	u1181
  1647  00048A  EF50  F002         	movf	((c:buzz@blue+1)),c,w
  1648  00048E  5008               	bnz	u1180
  1649  000490  E109               	movlw	128
  1650  000492  0E80               	subwf	 ((c:buzz@blue)),c,w
  1651  000494  5C07               	btfss	status,0
  1652  000496  A0D8               	goto	u1181
  1653  000498  EF50  F002         	goto	u1180
  1654  00049C  EF52  F002         
  1655                           u1181:
  1656  0004A0                     	goto	l1122
  1657  0004A0  EF71  F002         u1180:
  1658  0004A4                     	
  1659                           l1118:
  1660  0004A4                     	btfsc	((c:buzz@blue+1)),c,7
  1661  0004A4  BE08               	goto	u1190
  1662  0004A6  EF5D  F002         	decf	((c:buzz@blue+1)),c,w
  1663  0004AA  0408               	btfsc	status,0
  1664  0004AC  B0D8               	goto	u1191
  1665  0004AE  EF5B  F002         	goto	u1190
  1666  0004B2  EF5D  F002         
  1667                           u1191:
  1668  0004B6                     	goto	l1122
  1669  0004B6  EF71  F002         u1190:
  1670  0004BA                     	line	68
  1671                           	
  1672                           l1120:
  1673  0004BA                     ;./buzzer.h: 67:             (blue >= 128 && blue <=255)){;./buzzer.h: 68:         half_
                                 cyc = 264;
  1674                           	movlw	high(0108h)
  1675  0004BA  0E01               	movwf	((c:_half_cyc+1)),c
  1676  0004BC  6E0A               	movlw	low(0108h)
  1677  0004BE  0E08               	movwf	((c:_half_cyc)),c
  1678  0004C0  6E09               	goto	l1122
  1679  0004C2  EF71  F002         	line	69
  1680                           ;./buzzer.h: 69:     }
  1681                           	
  1682                           l57:
  1683  0004C6                     	goto	l1122
  1684  0004C6  EF71  F002         	
  1685                           l56:
  1686  0004CA                     	goto	l1122
  1687  0004CA  EF71  F002         	
  1688                           l54:
  1689  0004CE                     	goto	l1122
  1690  0004CE  EF71  F002         	
  1691                           l52:
  1692  0004D2                     	goto	l1122
  1693  0004D2  EF71  F002         	
  1694                           l50:
  1695  0004D6                     	goto	l1122
  1696  0004D6  EF71  F002         	
  1697                           l48:
  1698  0004DA                     	goto	l1122
  1699  0004DA  EF71  F002         	
  1700                           l46:
  1701  0004DE                     	goto	l1122
  1702  0004DE  EF71  F002         	
  1703                           l44:
  1704  0004E2                     	line	70
  1705                           	
  1706                           l1122:
  1707  0004E2                     ;./buzzer.h: 70:     CCPR2 = TMR1 + half_cyc;
  1708                           	movf	((c:4046)),c,w	;volatile
  1709  0004E2  50CE               	addwf	((c:_half_cyc)),c,w
  1710  0004E4  2409               	movwf	((c:4027)),c	;volatile
  1711  0004E6  6EBB               	movf	((c:4046+1)),c,w	;volatile
  1712  0004E8  50CF               	addwfc	((c:_half_cyc+1)),c,w
  1713  0004EA  200A               	movwf	1+((c:4027)),c	;volatile
  1714  0004EC  6EBC               	line	71
  1715                           	
  1716                           l1124:
  1717  0004EE                     ;./buzzer.h: 71:     Delay(5);
  1718                           	movlw	high(05h)
  1719  0004EE  0E00               	movwf	((c:Delay@xc+1)),c
  1720  0004F0  6E02               	movlw	low(05h)
  1721  0004F2  0E05               	movwf	((c:Delay@xc)),c
  1722  0004F4  6E01               	call	_Delay	;wreg free
  1723  0004F6  EC7F  F002         	line	73
  1724                           	
  1725                           l1126:
  1726  0004FA                     ;./buzzer.h: 73:     TRISCbits.TRISC1 = 1;
  1727                           	bsf	((c:3988)),c,1	;volatile
  1728  0004FA  8294               	line	74
  1729                           	
  1730                           l58:
  1731  0004FC                     	return	;funcret
  1732  0004FC  0012               	opt stack 0
  1733                           GLOBAL	__end_of_buzz
  1734                           	__end_of_buzz:
  1735  0004FE                     	signat	_buzz,12409
  1736                           	global	_init_buzzer
  1737                           
  1738 ;; *************** function _init_buzzer *****************
  1739 ;; Defined at:
  1740 ;;		line 92 in file "./buzzer.h"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;		None
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;		None
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      void 
  1747 ;; Registers used:
  1748 ;;		wreg, status,2, status,0
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1754 ;;      Params:         0       0       0       0       0       0       0
  1755 ;;      Locals:         0       0       0       0       0       0       0
  1756 ;;      Temps:          0       0       0       0       0       0       0
  1757 ;;      Totals:         0       0       0       0       0       0       0
  1758 ;;Total ram usage:        0 bytes
  1759 ;; Hardware stack levels used:    1
  1760 ;; Hardware stack levels required when called:    1
  1761 ;; This function calls:
  1762 ;;		Nothing
  1763 ;; This function is called by:
  1764 ;;		_buzz
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           psect	text2,class=CODE,space=0,reloc=2,group=0
  1768                           	line	92
  1769                           global __ptext2
  1770                           __ptext2:
  1771  00076E                     psect	text2
  1772                           	file	"./buzzer.h"
  1773                           	line	92
  1774                           	global	__size_of_init_buzzer
  1775                           	__size_of_init_buzzer	equ	__end_of_init_buzzer-_init_buzzer
  1776  0000                     	
  1777                           _init_buzzer:
  1778  00076E                     ;incstack = 0
  1779                           	opt	stack 28
  1780                           	line	93
  1781                           	
  1782                           l776:
  1783  00076E                     ;./buzzer.h: 93:     half_cyc = 0;
  1784                           	movlw	high(0)
  1785  00076E  0E00               	movwf	((c:_half_cyc+1)),c
  1786  000770  6E0A               	movlw	low(0)
  1787  000772  0E00               	movwf	((c:_half_cyc)),c
  1788  000774  6E09               	line	94
  1789                           ;./buzzer.h: 94:     CCPR2 = 0;
  1790                           	movlw	high(0)
  1791  000776  0E00               	movwf	((c:4027+1)),c	;volatile
  1792  000778  6EBC               	movlw	low(0)
  1793  00077A  0E00               	movwf	((c:4027)),c	;volatile
  1794  00077C  6EBB               	line	95
  1795                           	
  1796                           l778:
  1797  00077E                     ;./buzzer.h: 95:     TRISCbits.TRISC1 = 0;
  1798                           	bcf	((c:3988)),c,1	;volatile
  1799  00077E  9294               	line	96
  1800                           ;./buzzer.h: 96:     T3CON = 0x81;
  1801                           	movlw	low(081h)
  1802  000780  0E81               	movwf	((c:4017)),c	;volatile
  1803  000782  6EB1               	line	97
  1804                           ;./buzzer.h: 97:     T1CON = 0x81;
  1805                           	movlw	low(081h)
  1806  000784  0E81               	movwf	((c:4045)),c	;volatile
  1807  000786  6ECD               	line	98
  1808                           ;./buzzer.h: 98:     CCP2CON = 0x02;
  1809                           	movlw	low(02h)
  1810  000788  0E02               	movwf	((c:4026)),c	;volatile
  1811  00078A  6EBA               	line	99
  1812                           	
  1813                           l780:
  1814  00078C                     ;./buzzer.h: 99:     IPR2bits.CCP2IP = 1;
  1815                           	bsf	((c:4002)),c,0	;volatile
  1816  00078C  80A2               	line	100
  1817                           	
  1818                           l782:
  1819  00078E                     ;./buzzer.h: 100:     PIR2bits.CCP2IF = 0;
  1820                           	bcf	((c:4001)),c,0	;volatile
  1821  00078E  90A1               	line	101
  1822                           	
  1823                           l784:
  1824  000790                     ;./buzzer.h: 101:     PIE2bits.CCP2IE = 1;
  1825                           	bsf	((c:4000)),c,0	;volatile
  1826  000790  80A0               	line	102
  1827                           	
  1828                           l786:
  1829  000792                     ;./buzzer.h: 102:     INTCON |= 0xC0;
  1830                           	movlw	(0C0h)&0ffh
  1831  000792  0EC0               	iorwf	((c:4082)),c	;volatile
  1832  000794  12F2               	line	103
  1833                           	
  1834                           l86:
  1835  000796                     	return	;funcret
  1836  000796  0012               	opt stack 0
  1837                           GLOBAL	__end_of_init_buzzer
  1838                           	__end_of_init_buzzer:
  1839  000798                     	signat	_init_buzzer,89
  1840                           	global	_Delay
  1841                           
  1842 ;; *************** function _Delay *****************
  1843 ;; Defined at:
  1844 ;;		line 76 in file "./buzzer.h"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  xc              2    0[COMRAM] int 
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;		None
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      void 
  1851 ;; Registers used:
  1852 ;;		wreg, status,2, status,0
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1858 ;;      Params:         2       0       0       0       0       0       0
  1859 ;;      Locals:         0       0       0       0       0       0       0
  1860 ;;      Temps:          0       0       0       0       0       0       0
  1861 ;;      Totals:         2       0       0       0       0       0       0
  1862 ;;Total ram usage:        2 bytes
  1863 ;; Hardware stack levels used:    1
  1864 ;; Hardware stack levels required when called:    1
  1865 ;; This function calls:
  1866 ;;		Nothing
  1867 ;; This function is called by:
  1868 ;;		_buzz
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           psect	text3,class=CODE,space=0,reloc=2,group=0
  1872                           	line	76
  1873                           global __ptext3
  1874                           __ptext3:
  1875  0004FE                     psect	text3
  1876                           	file	"./buzzer.h"
  1877                           	line	76
  1878                           	global	__size_of_Delay
  1879                           	__size_of_Delay	equ	__end_of_Delay-_Delay
  1880  0000                     	
  1881                           _Delay:
  1882  0004FE                     ;incstack = 0
  1883                           	opt	stack 28
  1884                           	line	77
  1885                           	
  1886                           l964:
  1887  0004FE                     ;./buzzer.h: 77:     T0CON = 0x84;
  1888                           	movlw	low(084h)
  1889  0004FE  0E84               	movwf	((c:4053)),c	;volatile
  1890  000500  6ED5               	line	78
  1891                           	
  1892                           l966:
  1893  000502                     ;./buzzer.h: 78:     if (xc == 1) TMR0 = 0xFFFF - 1 * 3125;
  1894                           		decf	((c:Delay@xc)),c,w
  1895  000502  0401               iorwf	((c:Delay@xc+1)),c,w
  1896  000504  1002               	btfss	status,2
  1897  000506  A4D8               	goto	u611
  1898  000508  EF88  F002         	goto	u610
  1899  00050C  EF8A  F002         
  1900                           u611:
  1901  000510                     	goto	l970
  1902  000510  EF90  F002         u610:
  1903  000514                     	
  1904                           l968:
  1905  000514                     	movlw	high(0F3CAh)
  1906  000514  0EF3               	movwf	((c:4054+1)),c	;volatile
  1907  000516  6ED7               	movlw	low(0F3CAh)
  1908  000518  0ECA               	movwf	((c:4054)),c	;volatile
  1909  00051A  6ED6               	goto	l1006
  1910  00051C  EF32  F003         	line	79
  1911                           ;./buzzer.h: 79:     else if (xc == 2) TMR0 = 0xFFFF - 2 * 3125;
  1912                           	
  1913                           l61:
  1914  000520                     	
  1915                           l970:
  1916  000520                     		movlw	2
  1917  000520  0E02               	xorwf	((c:Delay@xc)),c,w
  1918  000522  1801               iorwf	((c:Delay@xc+1)),c,w
  1919  000524  1002               	btfss	status,2
  1920  000526  A4D8               	goto	u621
  1921  000528  EF98  F002         	goto	u620
  1922  00052C  EF9A  F002         
  1923                           u621:
  1924  000530                     	goto	l974
  1925  000530  EFA0  F002         u620:
  1926  000534                     	
  1927                           l972:
  1928  000534                     	movlw	high(0E795h)
  1929  000534  0EE7               	movwf	((c:4054+1)),c	;volatile
  1930  000536  6ED7               	movlw	low(0E795h)
  1931  000538  0E95               	movwf	((c:4054)),c	;volatile
  1932  00053A  6ED6               	goto	l1006
  1933  00053C  EF32  F003         	line	80
  1934                           ;./buzzer.h: 80:     else if (xc == 3) TMR0 = 0xFFFF - 3 * 3125;
  1935                           	
  1936                           l63:
  1937  000540                     	
  1938                           l974:
  1939  000540                     		movlw	3
  1940  000540  0E03               	xorwf	((c:Delay@xc)),c,w
  1941  000542  1801               iorwf	((c:Delay@xc+1)),c,w
  1942  000544  1002               	btfss	status,2
  1943  000546  A4D8               	goto	u631
  1944  000548  EFA8  F002         	goto	u630
  1945  00054C  EFAA  F002         
  1946                           u631:
  1947  000550                     	goto	l978
  1948  000550  EFB0  F002         u630:
  1949  000554                     	
  1950                           l976:
  1951  000554                     	movlw	high(0DB60h)
  1952  000554  0EDB               	movwf	((c:4054+1)),c	;volatile
  1953  000556  6ED7               	movlw	low(0DB60h)
  1954  000558  0E60               	movwf	((c:4054)),c	;volatile
  1955  00055A  6ED6               	goto	l1006
  1956  00055C  EF32  F003         	line	81
  1957                           ;./buzzer.h: 81:     else if (xc == 4) TMR0 = 0xFFFF - 4 * 3125;
  1958                           	
  1959                           l65:
  1960  000560                     	
  1961                           l978:
  1962  000560                     		movlw	4
  1963  000560  0E04               	xorwf	((c:Delay@xc)),c,w
  1964  000562  1801               iorwf	((c:Delay@xc+1)),c,w
  1965  000564  1002               	btfss	status,2
  1966  000566  A4D8               	goto	u641
  1967  000568  EFB8  F002         	goto	u640
  1968  00056C  EFBA  F002         
  1969                           u641:
  1970  000570                     	goto	l982
  1971  000570  EFC0  F002         u640:
  1972  000574                     	
  1973                           l980:
  1974  000574                     	movlw	high(0CF2Bh)
  1975  000574  0ECF               	movwf	((c:4054+1)),c	;volatile
  1976  000576  6ED7               	movlw	low(0CF2Bh)
  1977  000578  0E2B               	movwf	((c:4054)),c	;volatile
  1978  00057A  6ED6               	goto	l1006
  1979  00057C  EF32  F003         	line	82
  1980                           ;./buzzer.h: 82:     else if (xc == 5) TMR0 = 0xFFFF - 5 * 3125;
  1981                           	
  1982                           l67:
  1983  000580                     	
  1984                           l982:
  1985  000580                     		movlw	5
  1986  000580  0E05               	xorwf	((c:Delay@xc)),c,w
  1987  000582  1801               iorwf	((c:Delay@xc+1)),c,w
  1988  000584  1002               	btfss	status,2
  1989  000586  A4D8               	goto	u651
  1990  000588  EFC8  F002         	goto	u650
  1991  00058C  EFCA  F002         
  1992                           u651:
  1993  000590                     	goto	l986
  1994  000590  EFD0  F002         u650:
  1995  000594                     	
  1996                           l984:
  1997  000594                     	movlw	high(0C2F6h)
  1998  000594  0EC2               	movwf	((c:4054+1)),c	;volatile
  1999  000596  6ED7               	movlw	low(0C2F6h)
  2000  000598  0EF6               	movwf	((c:4054)),c	;volatile
  2001  00059A  6ED6               	goto	l1006
  2002  00059C  EF32  F003         	line	83
  2003                           ;./buzzer.h: 83:     else if (xc == 6) TMR0 = 0xFFFF - 6 * 3125;
  2004                           	
  2005                           l69:
  2006  0005A0                     	
  2007                           l986:
  2008  0005A0                     		movlw	6
  2009  0005A0  0E06               	xorwf	((c:Delay@xc)),c,w
  2010  0005A2  1801               iorwf	((c:Delay@xc+1)),c,w
  2011  0005A4  1002               	btfss	status,2
  2012  0005A6  A4D8               	goto	u661
  2013  0005A8  EFD8  F002         	goto	u660
  2014  0005AC  EFDA  F002         
  2015                           u661:
  2016  0005B0                     	goto	l990
  2017  0005B0  EFE0  F002         u660:
  2018  0005B4                     	
  2019                           l988:
  2020  0005B4                     	movlw	high(0B6C1h)
  2021  0005B4  0EB6               	movwf	((c:4054+1)),c	;volatile
  2022  0005B6  6ED7               	movlw	low(0B6C1h)
  2023  0005B8  0EC1               	movwf	((c:4054)),c	;volatile
  2024  0005BA  6ED6               	goto	l1006
  2025  0005BC  EF32  F003         	line	84
  2026                           ;./buzzer.h: 84:     else if (xc == 7) TMR0 = 0xFFFF - 7 * 3125;
  2027                           	
  2028                           l71:
  2029  0005C0                     	
  2030                           l990:
  2031  0005C0                     		movlw	7
  2032  0005C0  0E07               	xorwf	((c:Delay@xc)),c,w
  2033  0005C2  1801               iorwf	((c:Delay@xc+1)),c,w
  2034  0005C4  1002               	btfss	status,2
  2035  0005C6  A4D8               	goto	u671
  2036  0005C8  EFE8  F002         	goto	u670
  2037  0005CC  EFEA  F002         
  2038                           u671:
  2039  0005D0                     	goto	l994
  2040  0005D0  EFF0  F002         u670:
  2041  0005D4                     	
  2042                           l992:
  2043  0005D4                     	movlw	high(0AA8Ch)
  2044  0005D4  0EAA               	movwf	((c:4054+1)),c	;volatile
  2045  0005D6  6ED7               	movlw	low(0AA8Ch)
  2046  0005D8  0E8C               	movwf	((c:4054)),c	;volatile
  2047  0005DA  6ED6               	goto	l1006
  2048  0005DC  EF32  F003         	line	85
  2049                           ;./buzzer.h: 85:     else if (xc == 8) TMR0 = 0xFFFF - 8 * 3125;
  2050                           	
  2051                           l73:
  2052  0005E0                     	
  2053                           l994:
  2054  0005E0                     		movlw	8
  2055  0005E0  0E08               	xorwf	((c:Delay@xc)),c,w
  2056  0005E2  1801               iorwf	((c:Delay@xc+1)),c,w
  2057  0005E4  1002               	btfss	status,2
  2058  0005E6  A4D8               	goto	u681
  2059  0005E8  EFF8  F002         	goto	u680
  2060  0005EC  EFFA  F002         
  2061                           u681:
  2062  0005F0                     	goto	l998
  2063  0005F0  EF00  F003         u680:
  2064  0005F4                     	
  2065                           l996:
  2066  0005F4                     	movlw	high(09E57h)
  2067  0005F4  0E9E               	movwf	((c:4054+1)),c	;volatile
  2068  0005F6  6ED7               	movlw	low(09E57h)
  2069  0005F8  0E57               	movwf	((c:4054)),c	;volatile
  2070  0005FA  6ED6               	goto	l1006
  2071  0005FC  EF32  F003         	line	86
  2072                           ;./buzzer.h: 86:     else if (xc == 9) TMR0 = 0xFFFF - 9 * 3125;
  2073                           	
  2074                           l75:
  2075  000600                     	
  2076                           l998:
  2077  000600                     		movlw	9
  2078  000600  0E09               	xorwf	((c:Delay@xc)),c,w
  2079  000602  1801               iorwf	((c:Delay@xc+1)),c,w
  2080  000604  1002               	btfss	status,2
  2081  000606  A4D8               	goto	u691
  2082  000608  EF08  F003         	goto	u690
  2083  00060C  EF0A  F003         
  2084                           u691:
  2085  000610                     	goto	l1002
  2086  000610  EF10  F003         u690:
  2087  000614                     	
  2088                           l1000:
  2089  000614                     	movlw	high(09222h)
  2090  000614  0E92               	movwf	((c:4054+1)),c	;volatile
  2091  000616  6ED7               	movlw	low(09222h)
  2092  000618  0E22               	movwf	((c:4054)),c	;volatile
  2093  00061A  6ED6               	goto	l1006
  2094  00061C  EF32  F003         	line	87
  2095                           ;./buzzer.h: 87:     else if (xc == 10) TMR0 = 0xFFFF - 10 * 3125;
  2096                           	
  2097                           l77:
  2098  000620                     	
  2099                           l1002:
  2100  000620                     		movlw	10
  2101  000620  0E0A               	xorwf	((c:Delay@xc)),c,w
  2102  000622  1801               iorwf	((c:Delay@xc+1)),c,w
  2103  000624  1002               	btfss	status,2
  2104  000626  A4D8               	goto	u701
  2105  000628  EF18  F003         	goto	u700
  2106  00062C  EF1A  F003         
  2107                           u701:
  2108  000630                     	goto	l1006
  2109  000630  EF32  F003         u700:
  2110  000634                     	
  2111                           l1004:
  2112  000634                     	movlw	high(085EDh)
  2113  000634  0E85               	movwf	((c:4054+1)),c	;volatile
  2114  000636  6ED7               	movlw	low(085EDh)
  2115  000638  0EED               	movwf	((c:4054)),c	;volatile
  2116  00063A  6ED6               	goto	l1006
  2117  00063C  EF32  F003         	
  2118                           l79:
  2119  000640                     	goto	l1006
  2120  000640  EF32  F003         	
  2121                           l78:
  2122  000644                     	goto	l1006
  2123  000644  EF32  F003         	
  2124                           l76:
  2125  000648                     	goto	l1006
  2126  000648  EF32  F003         	
  2127                           l74:
  2128  00064C                     	goto	l1006
  2129  00064C  EF32  F003         	
  2130                           l72:
  2131  000650                     	goto	l1006
  2132  000650  EF32  F003         	
  2133                           l70:
  2134  000654                     	goto	l1006
  2135  000654  EF32  F003         	
  2136                           l68:
  2137  000658                     	goto	l1006
  2138  000658  EF32  F003         	
  2139                           l66:
  2140  00065C                     	goto	l1006
  2141  00065C  EF32  F003         	
  2142                           l64:
  2143  000660                     	goto	l1006
  2144  000660  EF32  F003         	
  2145                           l62:
  2146  000664                     	line	88
  2147                           	
  2148                           l1006:
  2149  000664                     ;./buzzer.h: 88:     INTCONbits.TMR0IF = 0;
  2150                           	bcf	((c:4082)),c,2	;volatile
  2151  000664  94F2               	line	89
  2152                           ;./buzzer.h: 89:     while (!INTCONbits.TMR0IF);
  2153                           	goto	l80
  2154  000666  EF35  F003         	
  2155                           l81:
  2156  00066A                     	
  2157                           l80:
  2158  00066A                     	btfss	((c:4082)),c,2	;volatile
  2159  00066A  A4F2               	goto	u711
  2160  00066C  EF3A  F003         	goto	u710
  2161  000670  EF3C  F003         u711:
  2162  000674                     	goto	l80
  2163  000674  EF35  F003         u710:
  2164  000678                     	goto	l83
  2165  000678  EF3E  F003         	
  2166                           l82:
  2167  00067C                     	line	90
  2168                           	
  2169                           l83:
  2170  00067C                     	return	;funcret
  2171  00067C  0012               	opt stack 0
  2172                           GLOBAL	__end_of_Delay
  2173                           	__end_of_Delay:
  2174  00067E                     	signat	_Delay,4217
  2175                           	global	_Hi_ISR
  2176                           
  2177 ;; *************** function _Hi_ISR *****************
  2178 ;; Defined at:
  2179 ;;		line 105 in file "./buzzer.h"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;		None
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;		None
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg, status,2, status,0
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2193 ;;      Params:         0       0       0       0       0       0       0
  2194 ;;      Locals:         0       0       0       0       0       0       0
  2195 ;;      Temps:          0       0       0       0       0       0       0
  2196 ;;      Totals:         0       0       0       0       0       0       0
  2197 ;;Total ram usage:        0 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		Interrupt level 2
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           psect	intcode,class=CODE,space=0,reloc=2
  2206                           global __pintcode
  2207                           __pintcode:
  2208  000008                     psect	intcode
  2209                           	file	"./buzzer.h"
  2210                           	line	105
  2211                           	global	__size_of_Hi_ISR
  2212                           	__size_of_Hi_ISR	equ	__end_of_Hi_ISR-_Hi_ISR
  2213  0000                     	
  2214                           _Hi_ISR:
  2215  000008                     ;incstack = 0
  2216                           	opt	stack 28
  2217                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  2218  000008  820B               	global	int_func
  2219                           	call	int_func,f	;refresh shadow registers
  2220  00000A  EDCC  F003         psect	intcode_body,class=CODE,space=0,reloc=2
  2221                           global __pintcode_body
  2222                           __pintcode_body:
  2223  000798                     int_func:
  2224  000798                     
  2225                           	pop	; remove dummy address from shadow register refresh
  2226  000798  0006               	line	107
  2227                           	
  2228                           i2l952:
  2229  00079A                     ;./buzzer.h: 107:     if(PIR2bits.CCP2IF == 1) {
  2230                           	btfss	((c:4001)),c,0	;volatile
  2231  00079A  A0A1               	goto	i2u60_41
  2232  00079C  EFD2  F003         	goto	i2u60_40
  2233  0007A0  EFD4  F003         i2u60_41:
  2234  0007A4                     	goto	i2l92
  2235  0007A4  EFDD  F003         i2u60_40:
  2236  0007A8                     	line	108
  2237                           	
  2238                           i2l954:
  2239  0007A8                     ;./buzzer.h: 108:         PIR2bits.CCP2IF = 0;
  2240                           	bcf	((c:4001)),c,0	;volatile
  2241  0007A8  90A1               	line	109
  2242                           	
  2243                           i2l956:
  2244  0007AA                     ;./buzzer.h: 109:         CCPR2 += half_cyc;
  2245                           	movf	((c:_half_cyc)),c,w	;volatile
  2246  0007AA  5009               	addwf	((c:4027)),c	;volatile
  2247  0007AC  26BB               	movf	((c:_half_cyc+1)),c,w	;volatile
  2248  0007AE  500A               	addwfc	((c:4027+1)),c	;volatile
  2249  0007B0  22BC               
  2250                           	goto	i2l92
  2251  0007B2  EFDD  F003         	line	110
  2252                           ;./buzzer.h: 110:     }
  2253                           	
  2254                           i2l91:
  2255  0007B6                     	goto	i2l92
  2256  0007B6  EFDD  F003         	line	111
  2257                           	
  2258                           i2l958:
  2259  0007BA                     	line	112
  2260                           ;./buzzer.h: 111:     return ;
  2261                           	
  2262                           i2l92:
  2263  0007BA                     	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  2264  0007BA  920B               	retfie f
  2265  0007BC  0011               	opt stack 0
  2266                           GLOBAL	__end_of_Hi_ISR
  2267                           	__end_of_Hi_ISR:
  2268  0007BE                     	signat	_Hi_ISR,89
  2269                           	GLOBAL	__activetblptr
  2270                           __activetblptr	EQU	0
  2271  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  2272                           	PSECT	rparam,class=COMRAM,space=1,noexec
  2273                           	GLOBAL	__Lrparam
  2274                           	FNCONF	rparam,??,?
  2275                           	GLOBAL	___rparam_used
  2276                           	___rparam_used EQU 1
  2277  0000                     	GLOBAL	___param_bank
  2278                           	___param_bank EQU 0
  2279  0000                     GLOBAL	__Lparam, __Hparam
  2280                           GLOBAL	__Lrparam, __Hrparam
  2281                           __Lparam	EQU	__Lrparam
  2282  0000                     __Hparam	EQU	__Hrparam
  2283  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  2284                           	global	btemp
  2285                           btemp:
  2286  00000B                     	ds	1
  2287  00000B                     	global	int$flags
  2288                           	int$flags	set btemp
  2289  0000                     	global	wtemp8
  2290                           	wtemp8 set btemp+1
  2291  0000                     	global	ttemp5
  2292                           	ttemp5 set btemp+1
  2293  0000                     	global	ttemp6
  2294                           	ttemp6 set btemp+4
  2295  0000                     	global	ttemp7
  2296                           	ttemp7 set btemp+8
  2297  0000                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      8      10
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_buzz
    _buzz->_Delay

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3176
                               _buzz
 ---------------------------------------------------------------------------------
 (1) _buzz                                                 6     0      6    3176
                                              2 COMRAM     6     0      6
                              _Delay
                        _init_buzzer
 ---------------------------------------------------------------------------------
 (2) _init_buzzer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Delay                                                2     0      2     296
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Hi_ISR                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _buzz
     _Delay
     _init_buzzer

 _Hi_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      8       A       1        7.9%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       A      14        0.0%
DATA                 0      0       A      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Dec 27 23:21:23 2018

                     l50 04D6                       l51 02F0                       l43 00A0  
                     l44 04E2                       l52 04D2                       l61 0520  
                     l53 038A                       l45 0132                       l62 0664  
                     l70 0654                       l46 04DE                       l54 04CE  
                     l71 05C0                       l63 0540                       l55 0424  
                     l47 01C4                       l80 066A                       l64 0660  
                     l72 0650                       l48 04DA                       l56 04CA  
                     l81 066A                       l73 05E0                       l65 0560  
                     l57 04C6                       l49 0256                       l82 067C  
                     l66 065C                       l74 064C                       l58 04FC  
                     l83 067C                       l75 0600                       l67 0580  
                     l68 0658                       l76 0648                       l77 0620  
                     l69 05A0                       l78 0644                       l86 0796  
                     l79 0640                       l97 0766                       l98 0766  
                     l99 076A              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l100 076A                      l780 078C                      l782 078E  
                    l784 0790                      l776 076E                      l970 0520  
                    l786 0792                      l778 077E                      l980 0574  
                    l972 0534                      l964 04FE                      l990 05C0  
                    l982 0580                      l974 0540                      l966 0502  
                    l992 05D4                      l984 0594                      l976 0554  
                    l968 0514                      l994 05E0                      l986 05A0  
                    l978 0560                      l996 05F4                      l988 05B4  
                    l998 0600             __CFG_CPB$OFF 000000                      u610 0514  
           __CFG_CPD$OFF 000000                      u611 0510                      u700 0634  
                    u620 0534                      u701 0630                      u621 0530  
                    u710 0678                      u630 0554                      u711 0674  
                    u631 0550                      u640 0574                      u800 00E0  
                    u720 0024                      u641 0570                      u801 00DC  
                    u721 0020                      u650 0594                      u810 00FC  
                    u730 0040                      u651 0590                      u811 00F8  
                    u731 003C                      u660 05B4                      u900 01D2  
                    u820 010A                      u740 004E                      u661 05B0  
                    u901 01CE                      u821 0106                      u741 004A  
                    u670 05D4                      u910 01EE                      u830 0126  
                    u750 006A                      u671 05D0                      u911 01EA  
                    u831 0122                      u751 0066                      u680 05F4  
                    u920 01FC                      u840 0140                      u760 0078  
                    u681 05F0                      u921 01F8                      u841 013C  
                    u761 0074                      u690 0614                      u930 0218  
                    u850 015C                      u770 0094                      u691 0610  
                    u931 0214                      u851 0158                      u771 0090  
                    u940 0234                      u860 0178                      u780 00BC  
                    u941 0230                      u861 0174                      u781 00B8  
                    u950 024A                      u870 018E                      u790 00D2  
                    u951 0246                      u871 018A                      u791 00CE  
                    u960 0272                      u880 019C                      u961 026E  
                    u881 0198                      u970 0288                      u890 01B8  
                    u971 0284                      u891 01B4                      u980 02A4  
                    u981 02A0                      u990 02BA                      u991 02B6  
           __CFG_IESO$ON 000000             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   l1000 0614                     l1002 0620                     l1010 0016  
                   l1004 0634                     l1100 03D0                     l1020 0078  
                   l1012 0024                     l1006 0664                     l1110 0440  
                   l1102 03E6                     l1030 00E0                     l1022 0094  
                   l1014 0040                     l1120 04BA                     l1112 0456  
                   l1104 0402                     l1040 0140                     l1032 00FC  
                   l1016 004E                     l1024 00A0                     l1008 0012  
                   l1114 0472                     l1106 0418                     l1050 01B8  
                   l1042 015C                     l1034 010A                     l1026 00BC  
                   l1122 04E2                     l1018 006A                     l1130 0686  
                   l1124 04EE                     l1116 0488                     l1108 0424  
                   l1060 0218                     l1044 0178                     l1052 01C4  
                   l1036 0126                     l1028 00D2                     l1126 04FA  
                   l1118 04A4                     l1070 0288                     l1062 0234  
                   l1054 01D2                     l1046 018E                     l1038 0132  
                   l1072 02A4                     l1080 02F0                     l1064 024A  
                   l1056 01EE                     l1048 019C                     l1128 067E  
                   l1090 0368                     l1082 030C                     l1074 02BA  
                   l1058 01FC                     l1066 0256                     l1092 037E  
                   l1084 0322                     l1076 02C8                     l1068 0272  
                   l1086 0330                     l1094 038A                     l1078 02E4  
                   l1096 0398                     l1088 034C                     l1098 03B4  
                   u1000 02C8                     u1001 02C4                     u1010 02E4  
                   u1011 02E0                     u1100 03D0                     u1020 030C  
                   u1101 03CC                     u1021 0308                     u1110 03E6  
                   u1030 0322                     u1111 03E2                     u1031 031E  
                   u1120 0402                     u1040 0330                     u1121 03FE  
                   u1041 032C                     u1130 0418                     u1050 034C  
                   u1131 0414                     u1051 0348                     u1140 0440  
                   u1060 0368                     u1141 043C                     u1061 0364  
                   u1150 0456                     u1070 037E                     u1151 0452  
                   u1071 037A                     u1160 0472                     u1080 0398  
                   u1161 046E                     u1081 0394                     u1170 0488  
                   u1090 03B4                     u1171 0484                     u1091 03B0  
                   u1180 04A4                     u1181 04A0                     u1190 04BA  
                   u1191 04B6                     i2l91 07B6                     i2l92 07BA  
                   _TMR0 000FD6                     _TMR1 000FCE             __CFG_WDTPS$1 000000  
                   _main 067E                     _buzz 0012                     btemp 000B  
                   start 000E            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ?_main 0001                    ?_buzz 0003                    _CCPR2 000FBB  
                  _T0CON 000FD5                    _T1CON 000FCD                    _T3CON 000FB1  
                  _IRCF0 007E9C                    _IRCF1 007E9D                    _IRCF2 007E9E  
                  i2l952 079A                    i2l954 07A8                    i2l956 07AA  
                  i2l958 07BA             ?_init_buzzer 0001                    _Delay 04FE  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    ttemp5 000C  
                  ttemp6 000F                    ttemp7 0013                    status 000FD8  
                  wtemp8 000C           __CFG_PBADEN$ON 000000          __initialization 07BE  
           __end_of_main 076E             __end_of_buzz 04FE                   ??_main 0009  
                 ??_buzz 0009            __activetblptr 000000                   ?_Delay 0001  
                 _INTCON 000FF2                   _Hi_ISR 0008           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000               __accesstop 0080  __end_of__initialization 07C2  
          ___rparam_used 000001            __end_of_Delay 067E           __pcstackCOMRAM 0001  
                ??_Delay 0003     __size_of_init_buzzer 002A                  ?_Hi_ISR 0001  
                _CCP2CON 000FBA                  Delay@xc 0001                  i2u60_40 07A8  
                i2u60_41 07A4          __size_of_Hi_ISR 07B6                  __Hparam 0000  
                __Lparam 0000                  __pcinit 07BE                  __ramtop 0600  
                __ptext0 067E                  __ptext1 0012                  __ptext2 076E  
                __ptext3 04FE           __pintcode_body 0798     end_of_initialization 07C2  
                buzz@red 0003                  int_func 0798                _TRISCbits 000F94  
         __end_of_Hi_ISR 07BE      start_initialization 07BE         __CFG_OSC$INTIO67 000000  
               ??_Hi_ISR 0001         __CFG_LPT1OSC$OFF 000000            ??_init_buzzer 0001  
            __pbssCOMRAM 0009        __CFG_CCP2MX$PORTC 000000                __pintcode 0008  
         __size_of_Delay 0180      __end_of_init_buzzer 0798                 _IPR2bits 000FA2  
               _PIE2bits 000FA0                 _PIR2bits 000FA1                 _RCONbits 000FD0  
               __Hrparam 0000                 __Lrparam 0000                buzz@green 0005  
     __CFG_BOREN$SBORDIS 000000              _init_buzzer 076E                 _half_cyc 0009  
          __size_of_main 00F0            __size_of_buzz 04EC                 int$flags 000B  
             _INTCONbits 000FF2                 buzz@blue 0007                 intlevel2 0000  
