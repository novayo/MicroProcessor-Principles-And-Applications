

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Dec 27 23:21:15 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4520 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   108                           PORTA equ 0F80h ;# 
   109  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   110                           PORTB equ 0F81h ;# 
   111  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   112                           PORTC equ 0F82h ;# 
   113  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   114                           PORTD equ 0F83h ;# 
   115  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   116                           PORTE equ 0F84h ;# 
   117  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   118                           LATA equ 0F89h ;# 
   119  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   120                           LATB equ 0F8Ah ;# 
   121  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   122                           LATC equ 0F8Bh ;# 
   123  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   124                           LATD equ 0F8Ch ;# 
   125  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   126                           LATE equ 0F8Dh ;# 
   127  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   128                           TRISA equ 0F92h ;# 
   129  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   130                           DDRA equ 0F92h ;# 
   131  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   132                           TRISB equ 0F93h ;# 
   133  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   134                           DDRB equ 0F93h ;# 
   135  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   136                           TRISC equ 0F94h ;# 
   137  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   138                           DDRC equ 0F94h ;# 
   139  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   140                           TRISD equ 0F95h ;# 
   141  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   142                           DDRD equ 0F95h ;# 
   143  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   144                           TRISE equ 0F96h ;# 
   145  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   146                           DDRE equ 0F96h ;# 
   147  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   148                           OSCTUNE equ 0F9Bh ;# 
   149  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   150                           PIE1 equ 0F9Dh ;# 
   151  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   152                           PIR1 equ 0F9Eh ;# 
   153  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   154                           IPR1 equ 0F9Fh ;# 
   155  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   156                           PIE2 equ 0FA0h ;# 
   157  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   158                           PIR2 equ 0FA1h ;# 
   159  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   160                           IPR2 equ 0FA2h ;# 
   161  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   162                           EECON1 equ 0FA6h ;# 
   163  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   164                           EECON2 equ 0FA7h ;# 
   165  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   166                           EEDATA equ 0FA8h ;# 
   167  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   168                           EEADR equ 0FA9h ;# 
   169  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   170                           RCSTA equ 0FABh ;# 
   171  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   172                           RCSTA1 equ 0FABh ;# 
   173  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   174                           TXSTA equ 0FACh ;# 
   175  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   176                           TXSTA1 equ 0FACh ;# 
   177  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   178                           TXREG equ 0FADh ;# 
   179  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   180                           TXREG1 equ 0FADh ;# 
   181  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   182                           RCREG equ 0FAEh ;# 
   183  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   184                           RCREG1 equ 0FAEh ;# 
   185  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   186                           SPBRG equ 0FAFh ;# 
   187  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   188                           SPBRG1 equ 0FAFh ;# 
   189  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   190                           SPBRGH equ 0FB0h ;# 
   191  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   192                           T3CON equ 0FB1h ;# 
   193  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   194                           TMR3 equ 0FB2h ;# 
   195  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   196                           TMR3L equ 0FB2h ;# 
   197  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   198                           TMR3H equ 0FB3h ;# 
   199  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   200                           CMCON equ 0FB4h ;# 
   201  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   202                           CVRCON equ 0FB5h ;# 
   203  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   204                           ECCP1AS equ 0FB6h ;# 
   205  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   206                           ECCPAS equ 0FB6h ;# 
   207  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   208                           PWM1CON equ 0FB7h ;# 
   209  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   210                           ECCP1DEL equ 0FB7h ;# 
   211  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   212                           BAUDCON equ 0FB8h ;# 
   213  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   214                           BAUDCTL equ 0FB8h ;# 
   215  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   216                           CCP2CON equ 0FBAh ;# 
   217  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   218                           CCPR2 equ 0FBBh ;# 
   219  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   220                           CCPR2L equ 0FBBh ;# 
   221  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   222                           CCPR2H equ 0FBCh ;# 
   223  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   224                           CCP1CON equ 0FBDh ;# 
   225  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   226                           CCPR1 equ 0FBEh ;# 
   227  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   228                           CCPR1L equ 0FBEh ;# 
   229  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   230                           CCPR1H equ 0FBFh ;# 
   231  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   232                           ADCON2 equ 0FC0h ;# 
   233  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   234                           ADCON1 equ 0FC1h ;# 
   235  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   236                           ADCON0 equ 0FC2h ;# 
   237  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   238                           ADRES equ 0FC3h ;# 
   239  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   240                           ADRESL equ 0FC3h ;# 
   241  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   242                           ADRESH equ 0FC4h ;# 
   243  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   244                           SSPCON2 equ 0FC5h ;# 
   245  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   246                           SSPCON1 equ 0FC6h ;# 
   247  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   248                           SSPSTAT equ 0FC7h ;# 
   249  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   250                           SSPADD equ 0FC8h ;# 
   251  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   252                           SSPBUF equ 0FC9h ;# 
   253  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   254                           T2CON equ 0FCAh ;# 
   255  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   256                           PR2 equ 0FCBh ;# 
   257  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   258                           MEMCON equ 0FCBh ;# 
   259  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   260                           TMR2 equ 0FCCh ;# 
   261  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   262                           T1CON equ 0FCDh ;# 
   263  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   264                           TMR1 equ 0FCEh ;# 
   265  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   266                           TMR1L equ 0FCEh ;# 
   267  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   268                           TMR1H equ 0FCFh ;# 
   269  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   270                           RCON equ 0FD0h ;# 
   271  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   272                           WDTCON equ 0FD1h ;# 
   273  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   274                           HLVDCON equ 0FD2h ;# 
   275  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   276                           LVDCON equ 0FD2h ;# 
   277  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   278                           OSCCON equ 0FD3h ;# 
   279  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   280                           T0CON equ 0FD5h ;# 
   281  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   282                           TMR0 equ 0FD6h ;# 
   283  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   284                           TMR0L equ 0FD6h ;# 
   285  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   286                           TMR0H equ 0FD7h ;# 
   287  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   288                           STATUS equ 0FD8h ;# 
   289  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   290                           FSR2 equ 0FD9h ;# 
   291  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   292                           FSR2L equ 0FD9h ;# 
   293  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   294                           FSR2H equ 0FDAh ;# 
   295  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   296                           PLUSW2 equ 0FDBh ;# 
   297  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   298                           PREINC2 equ 0FDCh ;# 
   299  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   300                           POSTDEC2 equ 0FDDh ;# 
   301  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   302                           POSTINC2 equ 0FDEh ;# 
   303  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   304                           INDF2 equ 0FDFh ;# 
   305  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   306                           BSR equ 0FE0h ;# 
   307  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   308                           FSR1 equ 0FE1h ;# 
   309  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   310                           FSR1L equ 0FE1h ;# 
   311  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   312                           FSR1H equ 0FE2h ;# 
   313  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   314                           PLUSW1 equ 0FE3h ;# 
   315  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   316                           PREINC1 equ 0FE4h ;# 
   317  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   318                           POSTDEC1 equ 0FE5h ;# 
   319  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   320                           POSTINC1 equ 0FE6h ;# 
   321  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   322                           INDF1 equ 0FE7h ;# 
   323  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   324                           WREG equ 0FE8h ;# 
   325  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   326                           FSR0 equ 0FE9h ;# 
   327  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   328                           FSR0L equ 0FE9h ;# 
   329  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   330                           FSR0H equ 0FEAh ;# 
   331  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   332                           PLUSW0 equ 0FEBh ;# 
   333  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   334                           PREINC0 equ 0FECh ;# 
   335  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   336                           POSTDEC0 equ 0FEDh ;# 
   337  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   338                           POSTINC0 equ 0FEEh ;# 
   339  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   340                           INDF0 equ 0FEFh ;# 
   341  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   342                           INTCON3 equ 0FF0h ;# 
   343  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   344                           INTCON2 equ 0FF1h ;# 
   345  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   346                           INTCON equ 0FF2h ;# 
   347  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   348                           PROD equ 0FF3h ;# 
   349  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   350                           PRODL equ 0FF3h ;# 
   351  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   352                           PRODH equ 0FF4h ;# 
   353  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   354                           TABLAT equ 0FF5h ;# 
   355  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   356                           TBLPTR equ 0FF6h ;# 
   357  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   358                           TBLPTRL equ 0FF6h ;# 
   359  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   360                           TBLPTRH equ 0FF7h ;# 
   361  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   362                           TBLPTRU equ 0FF8h ;# 
   363  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   364                           PCLAT equ 0FF9h ;# 
   365  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   366                           PC equ 0FF9h ;# 
   367  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   368                           PCL equ 0FF9h ;# 
   369  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   370                           PCLATH equ 0FFAh ;# 
   371  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   372                           PCLATU equ 0FFBh ;# 
   373  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   374                           STKPTR equ 0FFCh ;# 
   375  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   376                           TOS equ 0FFDh ;# 
   377  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   378                           TOSL equ 0FFDh ;# 
   379  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   380                           TOSH equ 0FFEh ;# 
   381  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   382                           TOSU equ 0FFFh ;# 
   383  0000                     	FNCALL	_main,_buzz
   384                           	FNCALL	_buzz,_Delay
   385                           	FNCALL	_buzz,_init_buzzer
   386                           	FNROOT	_main
   387                           	FNCALL	intlevel2,_Hi_ISR
   388                           	global	intlevel2
   389                           	FNROOT	intlevel2
   390                           	global	_half_cyc
   391                           	global	_TMR0
   392                           _TMR0	set	0xFD6
   393  0000                     	global	_TMR1
   394                           _TMR1	set	0xFCE
   395  0000                     	global	_CCPR2
   396                           _CCPR2	set	0xFBB
   397  0000                     	global	_RCONbits
   398                           _RCONbits	set	0xFD0
   399  0000                     	global	_INTCON
   400                           _INTCON	set	0xFF2
   401  0000                     	global	_PIE2bits
   402                           _PIE2bits	set	0xFA0
   403  0000                     	global	_PIR2bits
   404                           _PIR2bits	set	0xFA1
   405  0000                     	global	_IPR2bits
   406                           _IPR2bits	set	0xFA2
   407  0000                     	global	_CCP2CON
   408                           _CCP2CON	set	0xFBA
   409  0000                     	global	_T1CON
   410                           _T1CON	set	0xFCD
   411  0000                     	global	_T3CON
   412                           _T3CON	set	0xFB1
   413  0000                     	global	_INTCONbits
   414                           _INTCONbits	set	0xFF2
   415  0000                     	global	_T0CON
   416                           _T0CON	set	0xFD5
   417  0000                     	global	_TRISCbits
   418                           _TRISCbits	set	0xF94
   419  0000                     	global	_IRCF0
   420                           _IRCF0	set	0x7E9C
   421  0000                     	global	_IRCF1
   422                           _IRCF1	set	0x7E9D
   423  0000                     	global	_IRCF2
   424                           _IRCF2	set	0x7E9E
   425  0000                     ; #config settings
   426                           global __CFG_OSC$INTIO67
   427                           __CFG_OSC$INTIO67 equ 0x0
   428  0000                     global __CFG_FCMEN$OFF
   429                           __CFG_FCMEN$OFF equ 0x0
   430  0000                     global __CFG_IESO$ON
   431                           __CFG_IESO$ON equ 0x0
   432  0000                     global __CFG_PWRT$OFF
   433                           __CFG_PWRT$OFF equ 0x0
   434  0000                     global __CFG_BOREN$SBORDIS
   435                           __CFG_BOREN$SBORDIS equ 0x0
   436  0000                     global __CFG_BORV$3
   437                           __CFG_BORV$3 equ 0x0
   438  0000                     global __CFG_WDT$OFF
   439                           __CFG_WDT$OFF equ 0x0
   440  0000                     global __CFG_WDTPS$1
   441                           __CFG_WDTPS$1 equ 0x0
   442  0000                     global __CFG_CCP2MX$PORTC
   443                           __CFG_CCP2MX$PORTC equ 0x0
   444  0000                     global __CFG_PBADEN$ON
   445                           __CFG_PBADEN$ON equ 0x0
   446  0000                     global __CFG_LPT1OSC$OFF
   447                           __CFG_LPT1OSC$OFF equ 0x0
   448  0000                     global __CFG_MCLRE$ON
   449                           __CFG_MCLRE$ON equ 0x0
   450  0000                     global __CFG_STVREN$ON
   451                           __CFG_STVREN$ON equ 0x0
   452  0000                     global __CFG_LVP$OFF
   453                           __CFG_LVP$OFF equ 0x0
   454  0000                     global __CFG_XINST$OFF
   455                           __CFG_XINST$OFF equ 0x0
   456  0000                     global __CFG_CP0$OFF
   457                           __CFG_CP0$OFF equ 0x0
   458  0000                     global __CFG_CP1$OFF
   459                           __CFG_CP1$OFF equ 0x0
   460  0000                     global __CFG_CP2$OFF
   461                           __CFG_CP2$OFF equ 0x0
   462  0000                     global __CFG_CP3$OFF
   463                           __CFG_CP3$OFF equ 0x0
   464  0000                     global __CFG_CPB$OFF
   465                           __CFG_CPB$OFF equ 0x0
   466  0000                     global __CFG_CPD$OFF
   467                           __CFG_CPD$OFF equ 0x0
   468  0000                     global __CFG_WRT0$OFF
   469                           __CFG_WRT0$OFF equ 0x0
   470  0000                     global __CFG_WRT1$OFF
   471                           __CFG_WRT1$OFF equ 0x0
   472  0000                     global __CFG_WRT2$OFF
   473                           __CFG_WRT2$OFF equ 0x0
   474  0000                     global __CFG_WRT3$OFF
   475                           __CFG_WRT3$OFF equ 0x0
   476  0000                     global __CFG_WRTC$OFF
   477                           __CFG_WRTC$OFF equ 0x0
   478  0000                     global __CFG_WRTB$OFF
   479                           __CFG_WRTB$OFF equ 0x0
   480  0000                     global __CFG_WRTD$OFF
   481                           __CFG_WRTD$OFF equ 0x0
   482  0000                     global __CFG_EBTR0$OFF
   483                           __CFG_EBTR0$OFF equ 0x0
   484  0000                     global __CFG_EBTR1$OFF
   485                           __CFG_EBTR1$OFF equ 0x0
   486  0000                     global __CFG_EBTR2$OFF
   487                           __CFG_EBTR2$OFF equ 0x0
   488  0000                     global __CFG_EBTR3$OFF
   489                           __CFG_EBTR3$OFF equ 0x0
   490  0000                     global __CFG_EBTRB$OFF
   491                           __CFG_EBTRB$OFF equ 0x0
   492  0000                     	file	"C:\Users\user\AppData\Local\Temp\sels."
   493                           	line	#
   494                           psect	cinit,class=CODE,delta=1,reloc=2
   495                           global __pcinit
   496                           __pcinit:
   497  0007BE                     global start_initialization
   498                           start_initialization:
   499  0007BE                     
   500                           global __initialization
   501                           __initialization:
   502  0007BE                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   503                           global __pbssCOMRAM
   504                           __pbssCOMRAM:
   505  000009                     	global	_half_cyc
   506                           _half_cyc:
   507  000009                            ds      2
   508  000009                     	file	"C:\Users\user\AppData\Local\Temp\sels."
   509                           	line	#
   510                           psect	cinit
   511                           ; Clear objects allocated to COMRAM (2 bytes)
   512                           	global __pbssCOMRAM
   513                           clrf	(__pbssCOMRAM+1)&0xffh,c
   514  0007BE  6A0A               clrf	(__pbssCOMRAM+0)&0xffh,c
   515  0007C0  6A09               psect cinit,class=CODE,delta=1
   516                           global end_of_initialization,__end_of__initialization
   517                           
   518                           ;End of C runtime variable initialization code
   519                           
   520                           end_of_initialization:
   521  0007C2                     __end_of__initialization:
   522  0007C2                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   523  0007C2  900B               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   524  0007C4  920B               movlb 0
   525  0007C6  0100               goto _main	;jump to C main() function
   526  0007C8  EF3F  F003         psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   527                           global __pcstackCOMRAM
   528                           __pcstackCOMRAM:
   529  000001                     ?_init_buzzer:	; 1 bytes @ 0x0
   530  000001                     ??_init_buzzer:	; 1 bytes @ 0x0
   531  000001                     ?_Delay:	; 1 bytes @ 0x0
   532  000001                     ?_Hi_ISR:	; 1 bytes @ 0x0
   533  000001                     ??_Hi_ISR:	; 1 bytes @ 0x0
   534  000001                     ?_main:	; 1 bytes @ 0x0
   535  000001                     	global	Delay@xc
   536                           Delay@xc:	; 2 bytes @ 0x0
   537  000001                     	ds   2
   538  000001                     ??_Delay:	; 1 bytes @ 0x2
   539  000003                     ?_buzz:	; 1 bytes @ 0x2
   540  000003                     	global	buzz@red
   541                           buzz@red:	; 2 bytes @ 0x2
   542  000003                     	ds   2
   543  000003                     	global	buzz@green
   544                           buzz@green:	; 2 bytes @ 0x4
   545  000005                     	ds   2
   546  000005                     	global	buzz@blue
   547                           buzz@blue:	; 2 bytes @ 0x6
   548  000007                     	ds   2
   549  000007                     ??_buzz:	; 1 bytes @ 0x8
   550  000009                     ??_main:	; 1 bytes @ 0x8
   551  000009                     ;!
   552                           ;!Data Sizes:
   553                           ;!    Strings     0
   554                           ;!    Constant    0
   555                           ;!    Data        0
   556                           ;!    BSS         2
   557                           ;!    Persistent  0
   558                           ;!    Stack       0
   559                           ;!
   560                           ;!Auto Spaces:
   561                           ;!    Space          Size  Autos    Used
   562                           ;!    COMRAM          126      8      10
   563                           ;!    BANK0           128      0       0
   564                           ;!    BANK1           256      0       0
   565                           ;!    BANK2           256      0       0
   566                           ;!    BANK3           256      0       0
   567                           ;!    BANK4           256      0       0
   568                           ;!    BANK5           256      0       0
   569                           
   570                           ;!
   571                           ;!Pointer List with Targets:
   572                           ;!
   573                           ;!    None.
   574                           
   575                           
   576                           ;!
   577                           ;!Critical Paths under _main in COMRAM
   578                           ;!
   579                           ;!    _main->_buzz
   580                           ;!    _buzz->_Delay
   581                           ;!
   582                           ;!Critical Paths under _Hi_ISR in COMRAM
   583                           ;!
   584                           ;!    None.
   585                           ;!
   586                           ;!Critical Paths under _main in BANK0
   587                           ;!
   588                           ;!    None.
   589                           ;!
   590                           ;!Critical Paths under _Hi_ISR in BANK0
   591                           ;!
   592                           ;!    None.
   593                           ;!
   594                           ;!Critical Paths under _main in BANK1
   595                           ;!
   596                           ;!    None.
   597                           ;!
   598                           ;!Critical Paths under _Hi_ISR in BANK1
   599                           ;!
   600                           ;!    None.
   601                           ;!
   602                           ;!Critical Paths under _main in BANK2
   603                           ;!
   604                           ;!    None.
   605                           ;!
   606                           ;!Critical Paths under _Hi_ISR in BANK2
   607                           ;!
   608                           ;!    None.
   609                           ;!
   610                           ;!Critical Paths under _main in BANK3
   611                           ;!
   612                           ;!    None.
   613                           ;!
   614                           ;!Critical Paths under _Hi_ISR in BANK3
   615                           ;!
   616                           ;!    None.
   617                           ;!
   618                           ;!Critical Paths under _main in BANK4
   619                           ;!
   620                           ;!    None.
   621                           ;!
   622                           ;!Critical Paths under _Hi_ISR in BANK4
   623                           ;!
   624                           ;!    None.
   625                           ;!
   626                           ;!Critical Paths under _main in BANK5
   627                           ;!
   628                           ;!    None.
   629                           ;!
   630                           ;!Critical Paths under _Hi_ISR in BANK5
   631                           ;!
   632                           ;!    None.
   633                           
   634 ;;
   635 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   636 ;;
   637                           
   638                           ;!
   639                           ;!Call Graph Tables:
   640                           ;!
   641                           ;! ---------------------------------------------------------------------------------
   642                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   643                           ;! ---------------------------------------------------------------------------------
   644                           ;! (0) _main                                                 0     0      0    3176
   645                           ;!                               _buzz
   646                           ;! ---------------------------------------------------------------------------------
   647                           ;! (1) _buzz                                                 6     0      6    3176
   648                           ;!                                              2 COMRAM     6     0      6
   649                           ;!                              _Delay
   650                           ;!                        _init_buzzer
   651                           ;! ---------------------------------------------------------------------------------
   652                           ;! (2) _init_buzzer                                          0     0      0       0
   653                           ;! ---------------------------------------------------------------------------------
   654                           ;! (2) _Delay                                                2     0      2     296
   655                           ;!                                              0 COMRAM     2     0      2
   656                           ;! ---------------------------------------------------------------------------------
   657                           ;! Estimated maximum stack depth 2
   658                           ;! ---------------------------------------------------------------------------------
   659                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   660                           ;! ---------------------------------------------------------------------------------
   661                           ;! (3) _Hi_ISR                                               0     0      0       0
   662                           ;! ---------------------------------------------------------------------------------
   663                           ;! Estimated maximum stack depth 3
   664                           ;! ---------------------------------------------------------------------------------
   665                           ;!
   666                           ;! Call Graph Graphs:
   667                           ;!
   668                           ;! _main (ROOT)
   669                           ;!   _buzz
   670                           ;!     _Delay
   671                           ;!     _init_buzzer
   672                           ;!
   673                           ;! _Hi_ISR (ROOT)
   674                           ;!
   675                           
   676                           ;! Address spaces:
   677                           
   678                           ;!Name               Size   Autos  Total    Cost      Usage
   679                           ;!BIGRAM             5FF      0       0      17        0.0%
   680                           ;!EEDATA             100      0       0       0        0.0%
   681                           ;!BITBANK5           100      0       0      16        0.0%
   682                           ;!BANK5              100      0       0      14        0.0%
   683                           ;!BITBANK4           100      0       0      12        0.0%
   684                           ;!BANK4              100      0       0      13        0.0%
   685                           ;!BITBANK3           100      0       0      10        0.0%
   686                           ;!BANK3              100      0       0      11        0.0%
   687                           ;!BITBANK2           100      0       0       8        0.0%
   688                           ;!BANK2              100      0       0       9        0.0%
   689                           ;!BITBANK1           100      0       0       6        0.0%
   690                           ;!BANK1              100      0       0       7        0.0%
   691                           ;!BITBANK0            80      0       0       4        0.0%
   692                           ;!BANK0               80      0       0       5        0.0%
   693                           ;!BITCOMRAM           7E      0       0       0        0.0%
   694                           ;!COMRAM              7E      8       A       1        7.9%
   695                           ;!BITSFR               0      0       0     200        0.0%
   696                           ;!SFR                  0      0       0     200        0.0%
   697                           ;!STACK                0      0       0       2        0.0%
   698                           ;!NULL                 0      0       0       0        0.0%
   699                           ;!ABS                  0      0       A      15        0.0%
   700                           ;!DATA                 0      0       A       3        0.0%
   701                           ;!CODE                 0      0       0       0        0.0%
   702                           
   703                           	global	_main
   704                           
   705 ;; *************** function _main *****************
   706 ;; Defined at:
   707 ;;		line 59 in file "main.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;		None
   710 ;; Auto vars:     Size  Location     Type
   711 ;;		None
   712 ;; Return value:  Size  Location     Type
   713 ;;                  1    wreg      void 
   714 ;; Registers used:
   715 ;;		wreg, status,2, status,0, cstack
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   721 ;;      Params:         0       0       0       0       0       0       0
   722 ;;      Locals:         0       0       0       0       0       0       0
   723 ;;      Temps:          0       0       0       0       0       0       0
   724 ;;      Totals:         0       0       0       0       0       0       0
   725 ;;Total ram usage:        0 bytes
   726 ;; Hardware stack levels required when called:    3
   727 ;; This function calls:
   728 ;;		_buzz
   729 ;; This function is called by:
   730 ;;		Startup code after reset
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           psect	text0,class=CODE,space=0,reloc=2,group=0
   734                           	file	"main.c"
   735                           	line	59
   736                           global __ptext0
   737                           __ptext0:
   738  00067E                     psect	text0
   739                           	file	"main.c"
   740                           	line	59
   741                           	global	__size_of_main
   742                           	__size_of_main	equ	__end_of_main-_main
   743  0000                     	
   744                           _main:
   745  00067E                     ;incstack = 0
   746                           	opt	stack 28
   747                           	line	60
   748                           	
   749                           l1128:
   750  00067E                     	bsf	((c:4048)),c,7	;volatile
   751  00067E  8ED0               	line	61
   752                           	bsf	c:(32414/8),(32414)&7	;volatile
   753  000680  8CD3               	line	62
   754                           	bsf	c:(32413/8),(32413)&7	;volatile
   755  000682  8AD3               	line	63
   756                           	bcf	c:(32412/8),(32412)&7	;volatile
   757  000684  98D3               	line	65
   758                           	
   759                           l1130:
   760  000686                     	movlw	high(0)
   761  000686  0E00               	movwf	((c:buzz@red+1)),c
   762  000688  6E04               	movlw	low(0)
   763  00068A  0E00               	movwf	((c:buzz@red)),c
   764  00068C  6E03               	movlw	high(0)
   765  00068E  0E00               	movwf	((c:buzz@green+1)),c
   766  000690  6E06               	movlw	low(0)
   767  000692  0E00               	movwf	((c:buzz@green)),c
   768  000694  6E05               	movlw	high(0)
   769  000696  0E00               	movwf	((c:buzz@blue+1)),c
   770  000698  6E08               	movlw	low(0)
   771  00069A  0E00               	movwf	((c:buzz@blue)),c
   772  00069C  6E07               	call	_buzz	;wreg free
   773  00069E  EC09  F000         	line	66
   774                           	movlw	high(080h)
   775  0006A2  0E00               	movwf	((c:buzz@red+1)),c
   776  0006A4  6E04               	movlw	low(080h)
   777  0006A6  0E80               	movwf	((c:buzz@red)),c
   778  0006A8  6E03               	movlw	high(0)
   779  0006AA  0E00               	movwf	((c:buzz@green+1)),c
   780  0006AC  6E06               	movlw	low(0)
   781  0006AE  0E00               	movwf	((c:buzz@green)),c
   782  0006B0  6E05               	movlw	high(0)
   783  0006B2  0E00               	movwf	((c:buzz@blue+1)),c
   784  0006B4  6E08               	movlw	low(0)
   785  0006B6  0E00               	movwf	((c:buzz@blue)),c
   786  0006B8  6E07               	call	_buzz	;wreg free
   787  0006BA  EC09  F000         	line	67
   788                           	movlw	high(0)
   789  0006BE  0E00               	movwf	((c:buzz@red+1)),c
   790  0006C0  6E04               	movlw	low(0)
   791  0006C2  0E00               	movwf	((c:buzz@red)),c
   792  0006C4  6E03               	movlw	high(080h)
   793  0006C6  0E00               	movwf	((c:buzz@green+1)),c
   794  0006C8  6E06               	movlw	low(080h)
   795  0006CA  0E80               	movwf	((c:buzz@green)),c
   796  0006CC  6E05               	movlw	high(0)
   797  0006CE  0E00               	movwf	((c:buzz@blue+1)),c
   798  0006D0  6E08               	movlw	low(0)
   799  0006D2  0E00               	movwf	((c:buzz@blue)),c
   800  0006D4  6E07               	call	_buzz	;wreg free
   801  0006D6  EC09  F000         	line	68
   802                           	movlw	high(0)
   803  0006DA  0E00               	movwf	((c:buzz@red+1)),c
   804  0006DC  6E04               	movlw	low(0)
   805  0006DE  0E00               	movwf	((c:buzz@red)),c
   806  0006E0  6E03               	movlw	high(0)
   807  0006E2  0E00               	movwf	((c:buzz@green+1)),c
   808  0006E4  6E06               	movlw	low(0)
   809  0006E6  0E00               	movwf	((c:buzz@green)),c
   810  0006E8  6E05               	movlw	high(080h)
   811  0006EA  0E00               	movwf	((c:buzz@blue+1)),c
   812  0006EC  6E08               	movlw	low(080h)
   813  0006EE  0E80               	movwf	((c:buzz@blue)),c
   814  0006F0  6E07               	call	_buzz	;wreg free
   815  0006F2  EC09  F000         	line	69
   816                           	movlw	high(080h)
   817  0006F6  0E00               	movwf	((c:buzz@red+1)),c
   818  0006F8  6E04               	movlw	low(080h)
   819  0006FA  0E80               	movwf	((c:buzz@red)),c
   820  0006FC  6E03               	movlw	high(080h)
   821  0006FE  0E00               	movwf	((c:buzz@green+1)),c
   822  000700  6E06               	movlw	low(080h)
   823  000702  0E80               	movwf	((c:buzz@green)),c
   824  000704  6E05               	movlw	high(0)
   825  000706  0E00               	movwf	((c:buzz@blue+1)),c
   826  000708  6E08               	movlw	low(0)
   827  00070A  0E00               	movwf	((c:buzz@blue)),c
   828  00070C  6E07               	call	_buzz	;wreg free
   829  00070E  EC09  F000         	line	70
   830                           	movlw	high(080h)
   831  000712  0E00               	movwf	((c:buzz@red+1)),c
   832  000714  6E04               	movlw	low(080h)
   833  000716  0E80               	movwf	((c:buzz@red)),c
   834  000718  6E03               	movlw	high(0)
   835  00071A  0E00               	movwf	((c:buzz@green+1)),c
   836  00071C  6E06               	movlw	low(0)
   837  00071E  0E00               	movwf	((c:buzz@green)),c
   838  000720  6E05               	movlw	high(080h)
   839  000722  0E00               	movwf	((c:buzz@blue+1)),c
   840  000724  6E08               	movlw	low(080h)
   841  000726  0E80               	movwf	((c:buzz@blue)),c
   842  000728  6E07               	call	_buzz	;wreg free
   843  00072A  EC09  F000         	line	71
   844                           	movlw	high(0)
   845  00072E  0E00               	movwf	((c:buzz@red+1)),c
   846  000730  6E04               	movlw	low(0)
   847  000732  0E00               	movwf	((c:buzz@red)),c
   848  000734  6E03               	movlw	high(080h)
   849  000736  0E00               	movwf	((c:buzz@green+1)),c
   850  000738  6E06               	movlw	low(080h)
   851  00073A  0E80               	movwf	((c:buzz@green)),c
   852  00073C  6E05               	movlw	high(080h)
   853  00073E  0E00               	movwf	((c:buzz@blue+1)),c
   854  000740  6E08               	movlw	low(080h)
   855  000742  0E80               	movwf	((c:buzz@blue)),c
   856  000744  6E07               	call	_buzz	;wreg free
   857  000746  EC09  F000         	line	72
   858                           	movlw	high(080h)
   859  00074A  0E00               	movwf	((c:buzz@red+1)),c
   860  00074C  6E04               	movlw	low(080h)
   861  00074E  0E80               	movwf	((c:buzz@red)),c
   862  000750  6E03               	movlw	high(080h)
   863  000752  0E00               	movwf	((c:buzz@green+1)),c
   864  000754  6E06               	movlw	low(080h)
   865  000756  0E80               	movwf	((c:buzz@green)),c
   866  000758  6E05               	movlw	high(080h)
   867  00075A  0E00               	movwf	((c:buzz@blue+1)),c
   868  00075C  6E08               	movlw	low(080h)
   869  00075E  0E80               	movwf	((c:buzz@blue)),c
   870  000760  6E07               	call	_buzz	;wreg free
   871  000762  EC09  F000         	line	73
   872                           	
   873                           l97:
   874  000766                     	
   875                           l98:
   876  000766                     	goto	l97
   877  000766  EFB3  F003         	
   878                           l99:
   879  00076A                     	line	75
   880                           	
   881                           l100:
   882  00076A                     	global	start
   883                           	goto	start
   884  00076A  EF07  F000         	opt stack 0
   885                           GLOBAL	__end_of_main
   886                           	__end_of_main:
   887  00076E                     	signat	_main,89
   888                           	global	_buzz
   889                           
   890 ;; *************** function _buzz *****************
   891 ;; Defined at:
   892 ;;		line 20 in file "./buzzer.h"
   893 ;; Parameters:    Size  Location     Type
   894 ;;  red             2    2[COMRAM] int 
   895 ;;  green           2    4[COMRAM] int 
   896 ;;  blue            2    6[COMRAM] int 
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, status,2, status,0, cstack
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   908 ;;      Params:         6       0       0       0       0       0       0
   909 ;;      Locals:         0       0       0       0       0       0       0
   910 ;;      Temps:          0       0       0       0       0       0       0
   911 ;;      Totals:         6       0       0       0       0       0       0
   912 ;;Total ram usage:        6 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; Hardware stack levels required when called:    2
   915 ;; This function calls:
   916 ;;		_Delay
   917 ;;		_init_buzzer
   918 ;; This function is called by:
   919 ;;		_main
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           psect	text1,class=CODE,space=0,reloc=2,group=0
   923                           	file	"./buzzer.h"
   924                           	line	20
   925                           global __ptext1
   926                           __ptext1:
   927  000012                     psect	text1
   928                           	file	"./buzzer.h"
   929                           	line	20
   930                           	global	__size_of_buzz
   931                           	__size_of_buzz	equ	__end_of_buzz-_buzz
   932  0000                     	
   933                           _buzz:
   934  000012                     ;incstack = 0
   935                           	opt	stack 28
   936                           	line	21
   937                           	
   938                           l1008:
   939  000012                     ;./buzzer.h: 21:     init_buzzer();
   940                           	call	_init_buzzer	;wreg free
   941  000012  ECB7  F003         	line	23
   942                           	
   943                           l1010:
   944  000016                     ;./buzzer.h: 23:     if ((red >= 0 && red <=127) &&
   945                           	btfsc	((c:buzz@red+1)),c,7
   946  000016  BE04               	goto	u721
   947  000018  EF10  F000         	goto	u720
   948  00001C  EF12  F000         
   949                           u721:
   950  000020                     	goto	l1024
   951  000020  EF50  F000         u720:
   952  000024                     	
   953                           l1012:
   954  000024                     	btfsc	((c:buzz@red+1)),c,7
   955  000024  BE04               	goto	u730
   956  000026  EF20  F000         	movf	((c:buzz@red+1)),c,w
   957  00002A  5004               	bnz	u731
   958  00002C  E107               	movlw	128
   959  00002E  0E80               	subwf	 ((c:buzz@red)),c,w
   960  000030  5C03               	btfsc	status,0
   961  000032  B0D8               	goto	u731
   962  000034  EF1E  F000         	goto	u730
   963  000038  EF20  F000         
   964                           u731:
   965  00003C                     	goto	l1024
   966  00003C  EF50  F000         u730:
   967  000040                     	
   968                           l1014:
   969  000040                     	btfsc	((c:buzz@green+1)),c,7
   970  000040  BE06               	goto	u741
   971  000042  EF25  F000         	goto	u740
   972  000046  EF27  F000         
   973                           u741:
   974  00004A                     	goto	l1024
   975  00004A  EF50  F000         u740:
   976  00004E                     	
   977                           l1016:
   978  00004E                     	btfsc	((c:buzz@green+1)),c,7
   979  00004E  BE06               	goto	u750
   980  000050  EF35  F000         	movf	((c:buzz@green+1)),c,w
   981  000054  5006               	bnz	u751
   982  000056  E107               	movlw	128
   983  000058  0E80               	subwf	 ((c:buzz@green)),c,w
   984  00005A  5C05               	btfsc	status,0
   985  00005C  B0D8               	goto	u751
   986  00005E  EF33  F000         	goto	u750
   987  000062  EF35  F000         
   988                           u751:
   989  000066                     	goto	l1024
   990  000066  EF50  F000         u750:
   991  00006A                     	
   992                           l1018:
   993  00006A                     	btfsc	((c:buzz@blue+1)),c,7
   994  00006A  BE08               	goto	u761
   995  00006C  EF3A  F000         	goto	u760
   996  000070  EF3C  F000         
   997                           u761:
   998  000074                     	goto	l1024
   999  000074  EF50  F000         u760:
  1000  000078                     	
  1001                           l1020:
  1002  000078                     	btfsc	((c:buzz@blue+1)),c,7
  1003  000078  BE08               	goto	u770
  1004  00007A  EF4A  F000         	movf	((c:buzz@blue+1)),c,w
  1005  00007E  5008               	bnz	u771
  1006  000080  E107               	movlw	128
  1007  000082  0E80               	subwf	 ((c:buzz@blue)),c,w
  1008  000084  5C07               	btfsc	status,0
  1009  000086  B0D8               	goto	u771
  1010  000088  EF48  F000         	goto	u770
  1011  00008C  EF4A  F000         
  1012                           u771:
  1013  000090                     	goto	l1024
  1014  000090  EF50  F000         u770:
  1015  000094                     	line	26
  1016                           	
  1017                           l1022:
  1018  000094                     ;./buzzer.h: 25:         (blue >= 0 && blue <=127)){;./buzzer.h: 26:         half_cyc = 
                                 523;
  1019                           	movlw	high(020Bh)
  1020  000094  0E02               	movwf	((c:_half_cyc+1)),c
  1021  000096  6E0A               	movlw	low(020Bh)
  1022  000098  0E0B               	movwf	((c:_half_cyc)),c
  1023  00009A  6E09               	line	27
  1024                           ;./buzzer.h: 27:     }
  1025                           	goto	l1122
  1026  00009C  EF71  F002         	line	29
  1027                           ;./buzzer.h: 29:     else if ((red >= 128 && red <=255) &&
  1028                           	
  1029                           l43:
  1030  0000A0                     	
  1031                           l1024:
  1032  0000A0                     	btfsc	((c:buzz@red+1)),c,7
  1033  0000A0  BE04               	goto	u781
  1034  0000A2  EF5C  F000         	movf	((c:buzz@red+1)),c,w
  1035  0000A6  5004               	bnz	u780
  1036  0000A8  E109               	movlw	128
  1037  0000AA  0E80               	subwf	 ((c:buzz@red)),c,w
  1038  0000AC  5C03               	btfss	status,0
  1039  0000AE  A0D8               	goto	u781
  1040  0000B0  EF5C  F000         	goto	u780
  1041  0000B4  EF5E  F000         
  1042                           u781:
  1043  0000B8                     	goto	l1038
  1044  0000B8  EF99  F000         u780:
  1045  0000BC                     	
  1046                           l1026:
  1047  0000BC                     	btfsc	((c:buzz@red+1)),c,7
  1048  0000BC  BE04               	goto	u790
  1049  0000BE  EF69  F000         	decf	((c:buzz@red+1)),c,w
  1050  0000C2  0404               	btfsc	status,0
  1051  0000C4  B0D8               	goto	u791
  1052  0000C6  EF67  F000         	goto	u790
  1053  0000CA  EF69  F000         
  1054                           u791:
  1055  0000CE                     	goto	l1038
  1056  0000CE  EF99  F000         u790:
  1057  0000D2                     	
  1058                           l1028:
  1059  0000D2                     	btfsc	((c:buzz@green+1)),c,7
  1060  0000D2  BE06               	goto	u801
  1061  0000D4  EF6E  F000         	goto	u800
  1062  0000D8  EF70  F000         
  1063                           u801:
  1064  0000DC                     	goto	l1038
  1065  0000DC  EF99  F000         u800:
  1066  0000E0                     	
  1067                           l1030:
  1068  0000E0                     	btfsc	((c:buzz@green+1)),c,7
  1069  0000E0  BE06               	goto	u810
  1070  0000E2  EF7E  F000         	movf	((c:buzz@green+1)),c,w
  1071  0000E6  5006               	bnz	u811
  1072  0000E8  E107               	movlw	128
  1073  0000EA  0E80               	subwf	 ((c:buzz@green)),c,w
  1074  0000EC  5C05               	btfsc	status,0
  1075  0000EE  B0D8               	goto	u811
  1076  0000F0  EF7C  F000         	goto	u810
  1077  0000F4  EF7E  F000         
  1078                           u811:
  1079  0000F8                     	goto	l1038
  1080  0000F8  EF99  F000         u810:
  1081  0000FC                     	
  1082                           l1032:
  1083  0000FC                     	btfsc	((c:buzz@blue+1)),c,7
  1084  0000FC  BE08               	goto	u821
  1085  0000FE  EF83  F000         	goto	u820
  1086  000102  EF85  F000         
  1087                           u821:
  1088  000106                     	goto	l1038
  1089  000106  EF99  F000         u820:
  1090  00010A                     	
  1091                           l1034:
  1092  00010A                     	btfsc	((c:buzz@blue+1)),c,7
  1093  00010A  BE08               	goto	u830
  1094  00010C  EF93  F000         	movf	((c:buzz@blue+1)),c,w
  1095  000110  5008               	bnz	u831
  1096  000112  E107               	movlw	128
  1097  000114  0E80               	subwf	 ((c:buzz@blue)),c,w
  1098  000116  5C07               	btfsc	status,0
  1099  000118  B0D8               	goto	u831
  1100  00011A  EF91  F000         	goto	u830
  1101  00011E  EF93  F000         
  1102                           u831:
  1103  000122                     	goto	l1038
  1104  000122  EF99  F000         u830:
  1105  000126                     	line	32
  1106                           	
  1107                           l1036:
  1108  000126                     ;./buzzer.h: 31:             (blue >= 0 && blue <=127)){;./buzzer.h: 32:         half_cy
                                 c = 493;
  1109                           	movlw	high(01EDh)
  1110  000126  0E01               	movwf	((c:_half_cyc+1)),c
  1111  000128  6E0A               	movlw	low(01EDh)
  1112  00012A  0EED               	movwf	((c:_half_cyc)),c
  1113  00012C  6E09               	line	33
  1114                           ;./buzzer.h: 33:     }
  1115                           	goto	l1122
  1116  00012E  EF71  F002         	line	35
  1117                           ;./buzzer.h: 35:     else if ((red >= 0 && red <=127) &&
  1118                           	
  1119                           l45:
  1120  000132                     	
  1121                           l1038:
  1122  000132                     	btfsc	((c:buzz@red+1)),c,7
  1123  000132  BE04               	goto	u841
  1124  000134  EF9E  F000         	goto	u840
  1125  000138  EFA0  F000         
  1126                           u841:
  1127  00013C                     	goto	l1052
  1128  00013C  EFE2  F000         u840:
  1129  000140                     	
  1130                           l1040:
  1131  000140                     	btfsc	((c:buzz@red+1)),c,7
  1132  000140  BE04               	goto	u850
  1133  000142  EFAE  F000         	movf	((c:buzz@red+1)),c,w
  1134  000146  5004               	bnz	u851
  1135  000148  E107               	movlw	128
  1136  00014A  0E80               	subwf	 ((c:buzz@red)),c,w
  1137  00014C  5C03               	btfsc	status,0
  1138  00014E  B0D8               	goto	u851
  1139  000150  EFAC  F000         	goto	u850
  1140  000154  EFAE  F000         
  1141                           u851:
  1142  000158                     	goto	l1052
  1143  000158  EFE2  F000         u850:
  1144  00015C                     	
  1145                           l1042:
  1146  00015C                     	btfsc	((c:buzz@green+1)),c,7
  1147  00015C  BE06               	goto	u861
  1148  00015E  EFBA  F000         	movf	((c:buzz@green+1)),c,w
  1149  000162  5006               	bnz	u860
  1150  000164  E109               	movlw	128
  1151  000166  0E80               	subwf	 ((c:buzz@green)),c,w
  1152  000168  5C05               	btfss	status,0
  1153  00016A  A0D8               	goto	u861
  1154  00016C  EFBA  F000         	goto	u860
  1155  000170  EFBC  F000         
  1156                           u861:
  1157  000174                     	goto	l1052
  1158  000174  EFE2  F000         u860:
  1159  000178                     	
  1160                           l1044:
  1161  000178                     	btfsc	((c:buzz@green+1)),c,7
  1162  000178  BE06               	goto	u870
  1163  00017A  EFC7  F000         	decf	((c:buzz@green+1)),c,w
  1164  00017E  0406               	btfsc	status,0
  1165  000180  B0D8               	goto	u871
  1166  000182  EFC5  F000         	goto	u870
  1167  000186  EFC7  F000         
  1168                           u871:
  1169  00018A                     	goto	l1052
  1170  00018A  EFE2  F000         u870:
  1171  00018E                     	
  1172                           l1046:
  1173  00018E                     	btfsc	((c:buzz@blue+1)),c,7
  1174  00018E  BE08               	goto	u881
  1175  000190  EFCC  F000         	goto	u880
  1176  000194  EFCE  F000         
  1177                           u881:
  1178  000198                     	goto	l1052
  1179  000198  EFE2  F000         u880:
  1180  00019C                     	
  1181                           l1048:
  1182  00019C                     	btfsc	((c:buzz@blue+1)),c,7
  1183  00019C  BE08               	goto	u890
  1184  00019E  EFDC  F000         	movf	((c:buzz@blue+1)),c,w
  1185  0001A2  5008               	bnz	u891
  1186  0001A4  E107               	movlw	128
  1187  0001A6  0E80               	subwf	 ((c:buzz@blue)),c,w
  1188  0001A8  5C07               	btfsc	status,0
  1189  0001AA  B0D8               	goto	u891
  1190  0001AC  EFDA  F000         	goto	u890
  1191  0001B0  EFDC  F000         
  1192                           u891:
  1193  0001B4                     	goto	l1052
  1194  0001B4  EFE2  F000         u890:
  1195  0001B8                     	line	38
  1196                           	
  1197                           l1050:
  1198  0001B8                     ;./buzzer.h: 37:             (blue >= 0 && blue <=127)){;./buzzer.h: 38:         half_cy
                                 c = 440;
  1199                           	movlw	high(01B8h)
  1200  0001B8  0E01               	movwf	((c:_half_cyc+1)),c
  1201  0001BA  6E0A               	movlw	low(01B8h)
  1202  0001BC  0EB8               	movwf	((c:_half_cyc)),c
  1203  0001BE  6E09               	line	39
  1204                           ;./buzzer.h: 39:     }
  1205                           	goto	l1122
  1206  0001C0  EF71  F002         	line	41
  1207                           ;./buzzer.h: 41:     else if ((red >= 0 && red <=127) &&
  1208                           	
  1209                           l47:
  1210  0001C4                     	
  1211                           l1052:
  1212  0001C4                     	btfsc	((c:buzz@red+1)),c,7
  1213  0001C4  BE04               	goto	u901
  1214  0001C6  EFE7  F000         	goto	u900
  1215  0001CA  EFE9  F000         
  1216                           u901:
  1217  0001CE                     	goto	l1066
  1218  0001CE  EF2B  F001         u900:
  1219  0001D2                     	
  1220                           l1054:
  1221  0001D2                     	btfsc	((c:buzz@red+1)),c,7
  1222  0001D2  BE04               	goto	u910
  1223  0001D4  EFF7  F000         	movf	((c:buzz@red+1)),c,w
  1224  0001D8  5004               	bnz	u911
  1225  0001DA  E107               	movlw	128
  1226  0001DC  0E80               	subwf	 ((c:buzz@red)),c,w
  1227  0001DE  5C03               	btfsc	status,0
  1228  0001E0  B0D8               	goto	u911
  1229  0001E2  EFF5  F000         	goto	u910
  1230  0001E6  EFF7  F000         
  1231                           u911:
  1232  0001EA                     	goto	l1066
  1233  0001EA  EF2B  F001         u910:
  1234  0001EE                     	
  1235                           l1056:
  1236  0001EE                     	btfsc	((c:buzz@green+1)),c,7
  1237  0001EE  BE06               	goto	u921
  1238  0001F0  EFFC  F000         	goto	u920
  1239  0001F4  EFFE  F000         
  1240                           u921:
  1241  0001F8                     	goto	l1066
  1242  0001F8  EF2B  F001         u920:
  1243  0001FC                     	
  1244                           l1058:
  1245  0001FC                     	btfsc	((c:buzz@green+1)),c,7
  1246  0001FC  BE06               	goto	u930
  1247  0001FE  EF0C  F001         	movf	((c:buzz@green+1)),c,w
  1248  000202  5006               	bnz	u931
  1249  000204  E107               	movlw	128
  1250  000206  0E80               	subwf	 ((c:buzz@green)),c,w
  1251  000208  5C05               	btfsc	status,0
  1252  00020A  B0D8               	goto	u931
  1253  00020C  EF0A  F001         	goto	u930
  1254  000210  EF0C  F001         
  1255                           u931:
  1256  000214                     	goto	l1066
  1257  000214  EF2B  F001         u930:
  1258  000218                     	
  1259                           l1060:
  1260  000218                     	btfsc	((c:buzz@blue+1)),c,7
  1261  000218  BE08               	goto	u941
  1262  00021A  EF18  F001         	movf	((c:buzz@blue+1)),c,w
  1263  00021E  5008               	bnz	u940
  1264  000220  E109               	movlw	128
  1265  000222  0E80               	subwf	 ((c:buzz@blue)),c,w
  1266  000224  5C07               	btfss	status,0
  1267  000226  A0D8               	goto	u941
  1268  000228  EF18  F001         	goto	u940
  1269  00022C  EF1A  F001         
  1270                           u941:
  1271  000230                     	goto	l1066
  1272  000230  EF2B  F001         u940:
  1273  000234                     	
  1274                           l1062:
  1275  000234                     	btfsc	((c:buzz@blue+1)),c,7
  1276  000234  BE08               	goto	u950
  1277  000236  EF25  F001         	decf	((c:buzz@blue+1)),c,w
  1278  00023A  0408               	btfsc	status,0
  1279  00023C  B0D8               	goto	u951
  1280  00023E  EF23  F001         	goto	u950
  1281  000242  EF25  F001         
  1282                           u951:
  1283  000246                     	goto	l1066
  1284  000246  EF2B  F001         u950:
  1285  00024A                     	line	44
  1286                           	
  1287                           l1064:
  1288  00024A                     ;./buzzer.h: 43:             (blue >= 128 && blue <=255)){;./buzzer.h: 44:         half_
                                 cyc = 392;
  1289                           	movlw	high(0188h)
  1290  00024A  0E01               	movwf	((c:_half_cyc+1)),c
  1291  00024C  6E0A               	movlw	low(0188h)
  1292  00024E  0E88               	movwf	((c:_half_cyc)),c
  1293  000250  6E09               	line	45
  1294                           ;./buzzer.h: 45:     }
  1295                           	goto	l1122
  1296  000252  EF71  F002         	line	47
  1297                           ;./buzzer.h: 47:     else if ((red >= 128 && red <=255) &&
  1298                           	
  1299                           l49:
  1300  000256                     	
  1301                           l1066:
  1302  000256                     	btfsc	((c:buzz@red+1)),c,7
  1303  000256  BE04               	goto	u961
  1304  000258  EF37  F001         	movf	((c:buzz@red+1)),c,w
  1305  00025C  5004               	bnz	u960
  1306  00025E  E109               	movlw	128
  1307  000260  0E80               	subwf	 ((c:buzz@red)),c,w
  1308  000262  5C03               	btfss	status,0
  1309  000264  A0D8               	goto	u961
  1310  000266  EF37  F001         	goto	u960
  1311  00026A  EF39  F001         
  1312                           u961:
  1313  00026E                     	goto	l1080
  1314  00026E  EF78  F001         u960:
  1315  000272                     	
  1316                           l1068:
  1317  000272                     	btfsc	((c:buzz@red+1)),c,7
  1318  000272  BE04               	goto	u970
  1319  000274  EF44  F001         	decf	((c:buzz@red+1)),c,w
  1320  000278  0404               	btfsc	status,0
  1321  00027A  B0D8               	goto	u971
  1322  00027C  EF42  F001         	goto	u970
  1323  000280  EF44  F001         
  1324                           u971:
  1325  000284                     	goto	l1080
  1326  000284  EF78  F001         u970:
  1327  000288                     	
  1328                           l1070:
  1329  000288                     	btfsc	((c:buzz@green+1)),c,7
  1330  000288  BE06               	goto	u981
  1331  00028A  EF50  F001         	movf	((c:buzz@green+1)),c,w
  1332  00028E  5006               	bnz	u980
  1333  000290  E109               	movlw	128
  1334  000292  0E80               	subwf	 ((c:buzz@green)),c,w
  1335  000294  5C05               	btfss	status,0
  1336  000296  A0D8               	goto	u981
  1337  000298  EF50  F001         	goto	u980
  1338  00029C  EF52  F001         
  1339                           u981:
  1340  0002A0                     	goto	l1080
  1341  0002A0  EF78  F001         u980:
  1342  0002A4                     	
  1343                           l1072:
  1344  0002A4                     	btfsc	((c:buzz@green+1)),c,7
  1345  0002A4  BE06               	goto	u990
  1346  0002A6  EF5D  F001         	decf	((c:buzz@green+1)),c,w
  1347  0002AA  0406               	btfsc	status,0
  1348  0002AC  B0D8               	goto	u991
  1349  0002AE  EF5B  F001         	goto	u990
  1350  0002B2  EF5D  F001         
  1351                           u991:
  1352  0002B6                     	goto	l1080
  1353  0002B6  EF78  F001         u990:
  1354  0002BA                     	
  1355                           l1074:
  1356  0002BA                     	btfsc	((c:buzz@blue+1)),c,7
  1357  0002BA  BE08               	goto	u1001
  1358  0002BC  EF62  F001         	goto	u1000
  1359  0002C0  EF64  F001         
  1360                           u1001:
  1361  0002C4                     	goto	l1080
  1362  0002C4  EF78  F001         u1000:
  1363  0002C8                     	
  1364                           l1076:
  1365  0002C8                     	btfsc	((c:buzz@blue+1)),c,7
  1366  0002C8  BE08               	goto	u1010
  1367  0002CA  EF72  F001         	movf	((c:buzz@blue+1)),c,w
  1368  0002CE  5008               	bnz	u1011
  1369  0002D0  E107               	movlw	128
  1370  0002D2  0E80               	subwf	 ((c:buzz@blue)),c,w
  1371  0002D4  5C07               	btfsc	status,0
  1372  0002D6  B0D8               	goto	u1011
  1373  0002D8  EF70  F001         	goto	u1010
  1374  0002DC  EF72  F001         
  1375                           u1011:
  1376  0002E0                     	goto	l1080
  1377  0002E0  EF78  F001         u1010:
  1378  0002E4                     	line	50
  1379                           	
  1380                           l1078:
  1381  0002E4                     ;./buzzer.h: 49:             (blue >= 0 && blue <=127)){;./buzzer.h: 50:         half_cy
                                 c = 349;
  1382                           	movlw	high(015Dh)
  1383  0002E4  0E01               	movwf	((c:_half_cyc+1)),c
  1384  0002E6  6E0A               	movlw	low(015Dh)
  1385  0002E8  0E5D               	movwf	((c:_half_cyc)),c
  1386  0002EA  6E09               	line	51
  1387                           ;./buzzer.h: 51:     }
  1388                           	goto	l1122
  1389  0002EC  EF71  F002         	line	53
  1390                           ;./buzzer.h: 53:     else if ((red >= 128 && red <=255) &&
  1391                           	
  1392                           l51:
  1393  0002F0                     	
  1394                           l1080:
  1395  0002F0                     	btfsc	((c:buzz@red+1)),c,7
  1396  0002F0  BE04               	goto	u1021
  1397  0002F2  EF84  F001         	movf	((c:buzz@red+1)),c,w
  1398  0002F6  5004               	bnz	u1020
  1399  0002F8  E109               	movlw	128
  1400  0002FA  0E80               	subwf	 ((c:buzz@red)),c,w
  1401  0002FC  5C03               	btfss	status,0
  1402  0002FE  A0D8               	goto	u1021
  1403  000300  EF84  F001         	goto	u1020
  1404  000304  EF86  F001         
  1405                           u1021:
  1406  000308                     	goto	l1094
  1407  000308  EFC5  F001         u1020:
  1408  00030C                     	
  1409                           l1082:
  1410  00030C                     	btfsc	((c:buzz@red+1)),c,7
  1411  00030C  BE04               	goto	u1030
  1412  00030E  EF91  F001         	decf	((c:buzz@red+1)),c,w
  1413  000312  0404               	btfsc	status,0
  1414  000314  B0D8               	goto	u1031
  1415  000316  EF8F  F001         	goto	u1030
  1416  00031A  EF91  F001         
  1417                           u1031:
  1418  00031E                     	goto	l1094
  1419  00031E  EFC5  F001         u1030:
  1420  000322                     	
  1421                           l1084:
  1422  000322                     	btfsc	((c:buzz@green+1)),c,7
  1423  000322  BE06               	goto	u1041
  1424  000324  EF96  F001         	goto	u1040
  1425  000328  EF98  F001         
  1426                           u1041:
  1427  00032C                     	goto	l1094
  1428  00032C  EFC5  F001         u1040:
  1429  000330                     	
  1430                           l1086:
  1431  000330                     	btfsc	((c:buzz@green+1)),c,7
  1432  000330  BE06               	goto	u1050
  1433  000332  EFA6  F001         	movf	((c:buzz@green+1)),c,w
  1434  000336  5006               	bnz	u1051
  1435  000338  E107               	movlw	128
  1436  00033A  0E80               	subwf	 ((c:buzz@green)),c,w
  1437  00033C  5C05               	btfsc	status,0
  1438  00033E  B0D8               	goto	u1051
  1439  000340  EFA4  F001         	goto	u1050
  1440  000344  EFA6  F001         
  1441                           u1051:
  1442  000348                     	goto	l1094
  1443  000348  EFC5  F001         u1050:
  1444  00034C                     	
  1445                           l1088:
  1446  00034C                     	btfsc	((c:buzz@blue+1)),c,7
  1447  00034C  BE08               	goto	u1061
  1448  00034E  EFB2  F001         	movf	((c:buzz@blue+1)),c,w
  1449  000352  5008               	bnz	u1060
  1450  000354  E109               	movlw	128
  1451  000356  0E80               	subwf	 ((c:buzz@blue)),c,w
  1452  000358  5C07               	btfss	status,0
  1453  00035A  A0D8               	goto	u1061
  1454  00035C  EFB2  F001         	goto	u1060
  1455  000360  EFB4  F001         
  1456                           u1061:
  1457  000364                     	goto	l1094
  1458  000364  EFC5  F001         u1060:
  1459  000368                     	
  1460                           l1090:
  1461  000368                     	btfsc	((c:buzz@blue+1)),c,7
  1462  000368  BE08               	goto	u1070
  1463  00036A  EFBF  F001         	decf	((c:buzz@blue+1)),c,w
  1464  00036E  0408               	btfsc	status,0
  1465  000370  B0D8               	goto	u1071
  1466  000372  EFBD  F001         	goto	u1070
  1467  000376  EFBF  F001         
  1468                           u1071:
  1469  00037A                     	goto	l1094
  1470  00037A  EFC5  F001         u1070:
  1471  00037E                     	line	56
  1472                           	
  1473                           l1092:
  1474  00037E                     ;./buzzer.h: 55:             (blue >= 128 && blue <=255)){;./buzzer.h: 56:         half_
                                 cyc = 329;
  1475                           	movlw	high(0149h)
  1476  00037E  0E01               	movwf	((c:_half_cyc+1)),c
  1477  000380  6E0A               	movlw	low(0149h)
  1478  000382  0E49               	movwf	((c:_half_cyc)),c
  1479  000384  6E09               	line	57
  1480                           ;./buzzer.h: 57:     }
  1481                           	goto	l1122
  1482  000386  EF71  F002         	line	59
  1483                           ;./buzzer.h: 59:     else if ((red >= 0 && red <=127) &&
  1484                           	
  1485                           l53:
  1486  00038A                     	
  1487                           l1094:
  1488  00038A                     	btfsc	((c:buzz@red+1)),c,7
  1489  00038A  BE04               	goto	u1081
  1490  00038C  EFCA  F001         	goto	u1080
  1491  000390  EFCC  F001         
  1492                           u1081:
  1493  000394                     	goto	l1108
  1494  000394  EF12  F002         u1080:
  1495  000398                     	
  1496                           l1096:
  1497  000398                     	btfsc	((c:buzz@red+1)),c,7
  1498  000398  BE04               	goto	u1090
  1499  00039A  EFDA  F001         	movf	((c:buzz@red+1)),c,w
  1500  00039E  5004               	bnz	u1091
  1501  0003A0  E107               	movlw	128
  1502  0003A2  0E80               	subwf	 ((c:buzz@red)),c,w
  1503  0003A4  5C03               	btfsc	status,0
  1504  0003A6  B0D8               	goto	u1091
  1505  0003A8  EFD8  F001         	goto	u1090
  1506  0003AC  EFDA  F001         
  1507                           u1091:
  1508  0003B0                     	goto	l1108
  1509  0003B0  EF12  F002         u1090:
  1510  0003B4                     	
  1511                           l1098:
  1512  0003B4                     	btfsc	((c:buzz@green+1)),c,7
  1513  0003B4  BE06               	goto	u1101
  1514  0003B6  EFE6  F001         	movf	((c:buzz@green+1)),c,w
  1515  0003BA  5006               	bnz	u1100
  1516  0003BC  E109               	movlw	128
  1517  0003BE  0E80               	subwf	 ((c:buzz@green)),c,w
  1518  0003C0  5C05               	btfss	status,0
  1519  0003C2  A0D8               	goto	u1101
  1520  0003C4  EFE6  F001         	goto	u1100
  1521  0003C8  EFE8  F001         
  1522                           u1101:
  1523  0003CC                     	goto	l1108
  1524  0003CC  EF12  F002         u1100:
  1525  0003D0                     	
  1526                           l1100:
  1527  0003D0                     	btfsc	((c:buzz@green+1)),c,7
  1528  0003D0  BE06               	goto	u1110
  1529  0003D2  EFF3  F001         	decf	((c:buzz@green+1)),c,w
  1530  0003D6  0406               	btfsc	status,0
  1531  0003D8  B0D8               	goto	u1111
  1532  0003DA  EFF1  F001         	goto	u1110
  1533  0003DE  EFF3  F001         
  1534                           u1111:
  1535  0003E2                     	goto	l1108
  1536  0003E2  EF12  F002         u1110:
  1537  0003E6                     	
  1538                           l1102:
  1539  0003E6                     	btfsc	((c:buzz@blue+1)),c,7
  1540  0003E6  BE08               	goto	u1121
  1541  0003E8  EFFF  F001         	movf	((c:buzz@blue+1)),c,w
  1542  0003EC  5008               	bnz	u1120
  1543  0003EE  E109               	movlw	128
  1544  0003F0  0E80               	subwf	 ((c:buzz@blue)),c,w
  1545  0003F2  5C07               	btfss	status,0
  1546  0003F4  A0D8               	goto	u1121
  1547  0003F6  EFFF  F001         	goto	u1120
  1548  0003FA  EF01  F002         
  1549                           u1121:
  1550  0003FE                     	goto	l1108
  1551  0003FE  EF12  F002         u1120:
  1552  000402                     	
  1553                           l1104:
  1554  000402                     	btfsc	((c:buzz@blue+1)),c,7
  1555  000402  BE08               	goto	u1130
  1556  000404  EF0C  F002         	decf	((c:buzz@blue+1)),c,w
  1557  000408  0408               	btfsc	status,0
  1558  00040A  B0D8               	goto	u1131
  1559  00040C  EF0A  F002         	goto	u1130
  1560  000410  EF0C  F002         
  1561                           u1131:
  1562  000414                     	goto	l1108
  1563  000414  EF12  F002         u1130:
  1564  000418                     	line	62
  1565                           	
  1566                           l1106:
  1567  000418                     ;./buzzer.h: 61:             (blue >= 128 && blue <=255)){;./buzzer.h: 62:         half_
                                 cyc = 293;
  1568                           	movlw	high(0125h)
  1569  000418  0E01               	movwf	((c:_half_cyc+1)),c
  1570  00041A  6E0A               	movlw	low(0125h)
  1571  00041C  0E25               	movwf	((c:_half_cyc)),c
  1572  00041E  6E09               	line	63
  1573                           ;./buzzer.h: 63:     }
  1574                           	goto	l1122
  1575  000420  EF71  F002         	line	65
  1576                           ;./buzzer.h: 65:     else if ((red >= 128 && red <=255) &&
  1577                           	
  1578                           l55:
  1579  000424                     	
  1580                           l1108:
  1581  000424                     	btfsc	((c:buzz@red+1)),c,7
  1582  000424  BE04               	goto	u1141
  1583  000426  EF1E  F002         	movf	((c:buzz@red+1)),c,w
  1584  00042A  5004               	bnz	u1140
  1585  00042C  E109               	movlw	128
  1586  00042E  0E80               	subwf	 ((c:buzz@red)),c,w
  1587  000430  5C03               	btfss	status,0
  1588  000432  A0D8               	goto	u1141
  1589  000434  EF1E  F002         	goto	u1140
  1590  000438  EF20  F002         
  1591                           u1141:
  1592  00043C                     	goto	l1122
  1593  00043C  EF71  F002         u1140:
  1594  000440                     	
  1595                           l1110:
  1596  000440                     	btfsc	((c:buzz@red+1)),c,7
  1597  000440  BE04               	goto	u1150
  1598  000442  EF2B  F002         	decf	((c:buzz@red+1)),c,w
  1599  000446  0404               	btfsc	status,0
  1600  000448  B0D8               	goto	u1151
  1601  00044A  EF29  F002         	goto	u1150
  1602  00044E  EF2B  F002         
  1603                           u1151:
  1604  000452                     	goto	l1122
  1605  000452  EF71  F002         u1150:
  1606  000456                     	
  1607                           l1112:
  1608  000456                     	btfsc	((c:buzz@green+1)),c,7
  1609  000456  BE06               	goto	u1161
  1610  000458  EF37  F002         	movf	((c:buzz@green+1)),c,w
  1611  00045C  5006               	bnz	u1160
  1612  00045E  E109               	movlw	128
  1613  000460  0E80               	subwf	 ((c:buzz@green)),c,w
  1614  000462  5C05               	btfss	status,0
  1615  000464  A0D8               	goto	u1161
  1616  000466  EF37  F002         	goto	u1160
  1617  00046A  EF39  F002         
  1618                           u1161:
  1619  00046E                     	goto	l1122
  1620  00046E  EF71  F002         u1160:
  1621  000472                     	
  1622                           l1114:
  1623  000472                     	btfsc	((c:buzz@green+1)),c,7
  1624  000472  BE06               	goto	u1170
  1625  000474  EF44  F002         	decf	((c:buzz@green+1)),c,w
  1626  000478  0406               	btfsc	status,0
  1627  00047A  B0D8               	goto	u1171
  1628  00047C  EF42  F002         	goto	u1170
  1629  000480  EF44  F002         
  1630                           u1171:
  1631  000484                     	goto	l1122
  1632  000484  EF71  F002         u1170:
  1633  000488                     	
  1634                           l1116:
  1635  000488                     	btfsc	((c:buzz@blue+1)),c,7
  1636  000488  BE08               	goto	u1181
  1637  00048A  EF50  F002         	movf	((c:buzz@blue+1)),c,w
  1638  00048E  5008               	bnz	u1180
  1639  000490  E109               	movlw	128
  1640  000492  0E80               	subwf	 ((c:buzz@blue)),c,w
  1641  000494  5C07               	btfss	status,0
  1642  000496  A0D8               	goto	u1181
  1643  000498  EF50  F002         	goto	u1180
  1644  00049C  EF52  F002         
  1645                           u1181:
  1646  0004A0                     	goto	l1122
  1647  0004A0  EF71  F002         u1180:
  1648  0004A4                     	
  1649                           l1118:
  1650  0004A4                     	btfsc	((c:buzz@blue+1)),c,7
  1651  0004A4  BE08               	goto	u1190
  1652  0004A6  EF5D  F002         	decf	((c:buzz@blue+1)),c,w
  1653  0004AA  0408               	btfsc	status,0
  1654  0004AC  B0D8               	goto	u1191
  1655  0004AE  EF5B  F002         	goto	u1190
  1656  0004B2  EF5D  F002         
  1657                           u1191:
  1658  0004B6                     	goto	l1122
  1659  0004B6  EF71  F002         u1190:
  1660  0004BA                     	line	68
  1661                           	
  1662                           l1120:
  1663  0004BA                     ;./buzzer.h: 67:             (blue >= 128 && blue <=255)){;./buzzer.h: 68:         half_
                                 cyc = 264;
  1664                           	movlw	high(0108h)
  1665  0004BA  0E01               	movwf	((c:_half_cyc+1)),c
  1666  0004BC  6E0A               	movlw	low(0108h)
  1667  0004BE  0E08               	movwf	((c:_half_cyc)),c
  1668  0004C0  6E09               	goto	l1122
  1669  0004C2  EF71  F002         	line	69
  1670                           ;./buzzer.h: 69:     }
  1671                           	
  1672                           l57:
  1673  0004C6                     	goto	l1122
  1674  0004C6  EF71  F002         	
  1675                           l56:
  1676  0004CA                     	goto	l1122
  1677  0004CA  EF71  F002         	
  1678                           l54:
  1679  0004CE                     	goto	l1122
  1680  0004CE  EF71  F002         	
  1681                           l52:
  1682  0004D2                     	goto	l1122
  1683  0004D2  EF71  F002         	
  1684                           l50:
  1685  0004D6                     	goto	l1122
  1686  0004D6  EF71  F002         	
  1687                           l48:
  1688  0004DA                     	goto	l1122
  1689  0004DA  EF71  F002         	
  1690                           l46:
  1691  0004DE                     	goto	l1122
  1692  0004DE  EF71  F002         	
  1693                           l44:
  1694  0004E2                     	line	70
  1695                           	
  1696                           l1122:
  1697  0004E2                     ;./buzzer.h: 70:     CCPR2 = TMR1 + half_cyc;
  1698                           	movf	((c:4046)),c,w	;volatile
  1699  0004E2  50CE               	addwf	((c:_half_cyc)),c,w
  1700  0004E4  2409               	movwf	((c:4027)),c	;volatile
  1701  0004E6  6EBB               	movf	((c:4046+1)),c,w	;volatile
  1702  0004E8  50CF               	addwfc	((c:_half_cyc+1)),c,w
  1703  0004EA  200A               	movwf	1+((c:4027)),c	;volatile
  1704  0004EC  6EBC               	line	71
  1705                           	
  1706                           l1124:
  1707  0004EE                     ;./buzzer.h: 71:     Delay(5);
  1708                           	movlw	high(05h)
  1709  0004EE  0E00               	movwf	((c:Delay@xc+1)),c
  1710  0004F0  6E02               	movlw	low(05h)
  1711  0004F2  0E05               	movwf	((c:Delay@xc)),c
  1712  0004F4  6E01               	call	_Delay	;wreg free
  1713  0004F6  EC7F  F002         	line	73
  1714                           	
  1715                           l1126:
  1716  0004FA                     ;./buzzer.h: 73:     TRISCbits.TRISC1 = 1;
  1717                           	bsf	((c:3988)),c,1	;volatile
  1718  0004FA  8294               	line	74
  1719                           	
  1720                           l58:
  1721  0004FC                     	return	;funcret
  1722  0004FC  0012               	opt stack 0
  1723                           GLOBAL	__end_of_buzz
  1724                           	__end_of_buzz:
  1725  0004FE                     	signat	_buzz,12409
  1726                           	global	_init_buzzer
  1727                           
  1728 ;; *************** function _init_buzzer *****************
  1729 ;; Defined at:
  1730 ;;		line 92 in file "./buzzer.h"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;		None
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;		None
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  1    wreg      void 
  1737 ;; Registers used:
  1738 ;;		wreg, status,2, status,0
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1744 ;;      Params:         0       0       0       0       0       0       0
  1745 ;;      Locals:         0       0       0       0       0       0       0
  1746 ;;      Temps:          0       0       0       0       0       0       0
  1747 ;;      Totals:         0       0       0       0       0       0       0
  1748 ;;Total ram usage:        0 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; Hardware stack levels required when called:    1
  1751 ;; This function calls:
  1752 ;;		Nothing
  1753 ;; This function is called by:
  1754 ;;		_buzz
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           psect	text2,class=CODE,space=0,reloc=2,group=0
  1758                           	line	92
  1759                           global __ptext2
  1760                           __ptext2:
  1761  00076E                     psect	text2
  1762                           	file	"./buzzer.h"
  1763                           	line	92
  1764                           	global	__size_of_init_buzzer
  1765                           	__size_of_init_buzzer	equ	__end_of_init_buzzer-_init_buzzer
  1766  0000                     	
  1767                           _init_buzzer:
  1768  00076E                     ;incstack = 0
  1769                           	opt	stack 28
  1770                           	line	93
  1771                           	
  1772                           l776:
  1773  00076E                     ;./buzzer.h: 93:     half_cyc = 0;
  1774                           	movlw	high(0)
  1775  00076E  0E00               	movwf	((c:_half_cyc+1)),c
  1776  000770  6E0A               	movlw	low(0)
  1777  000772  0E00               	movwf	((c:_half_cyc)),c
  1778  000774  6E09               	line	94
  1779                           ;./buzzer.h: 94:     CCPR2 = 0;
  1780                           	movlw	high(0)
  1781  000776  0E00               	movwf	((c:4027+1)),c	;volatile
  1782  000778  6EBC               	movlw	low(0)
  1783  00077A  0E00               	movwf	((c:4027)),c	;volatile
  1784  00077C  6EBB               	line	95
  1785                           	
  1786                           l778:
  1787  00077E                     ;./buzzer.h: 95:     TRISCbits.TRISC1 = 0;
  1788                           	bcf	((c:3988)),c,1	;volatile
  1789  00077E  9294               	line	96
  1790                           ;./buzzer.h: 96:     T3CON = 0x81;
  1791                           	movlw	low(081h)
  1792  000780  0E81               	movwf	((c:4017)),c	;volatile
  1793  000782  6EB1               	line	97
  1794                           ;./buzzer.h: 97:     T1CON = 0x81;
  1795                           	movlw	low(081h)
  1796  000784  0E81               	movwf	((c:4045)),c	;volatile
  1797  000786  6ECD               	line	98
  1798                           ;./buzzer.h: 98:     CCP2CON = 0x02;
  1799                           	movlw	low(02h)
  1800  000788  0E02               	movwf	((c:4026)),c	;volatile
  1801  00078A  6EBA               	line	99
  1802                           	
  1803                           l780:
  1804  00078C                     ;./buzzer.h: 99:     IPR2bits.CCP2IP = 1;
  1805                           	bsf	((c:4002)),c,0	;volatile
  1806  00078C  80A2               	line	100
  1807                           	
  1808                           l782:
  1809  00078E                     ;./buzzer.h: 100:     PIR2bits.CCP2IF = 0;
  1810                           	bcf	((c:4001)),c,0	;volatile
  1811  00078E  90A1               	line	101
  1812                           	
  1813                           l784:
  1814  000790                     ;./buzzer.h: 101:     PIE2bits.CCP2IE = 1;
  1815                           	bsf	((c:4000)),c,0	;volatile
  1816  000790  80A0               	line	102
  1817                           	
  1818                           l786:
  1819  000792                     ;./buzzer.h: 102:     INTCON |= 0xC0;
  1820                           	movlw	(0C0h)&0ffh
  1821  000792  0EC0               	iorwf	((c:4082)),c	;volatile
  1822  000794  12F2               	line	103
  1823                           	
  1824                           l86:
  1825  000796                     	return	;funcret
  1826  000796  0012               	opt stack 0
  1827                           GLOBAL	__end_of_init_buzzer
  1828                           	__end_of_init_buzzer:
  1829  000798                     	signat	_init_buzzer,89
  1830                           	global	_Delay
  1831                           
  1832 ;; *************** function _Delay *****************
  1833 ;; Defined at:
  1834 ;;		line 76 in file "./buzzer.h"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;  xc              2    0[COMRAM] int 
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;		None
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      void 
  1841 ;; Registers used:
  1842 ;;		wreg, status,2, status,0
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1848 ;;      Params:         2       0       0       0       0       0       0
  1849 ;;      Locals:         0       0       0       0       0       0       0
  1850 ;;      Temps:          0       0       0       0       0       0       0
  1851 ;;      Totals:         2       0       0       0       0       0       0
  1852 ;;Total ram usage:        2 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; Hardware stack levels required when called:    1
  1855 ;; This function calls:
  1856 ;;		Nothing
  1857 ;; This function is called by:
  1858 ;;		_buzz
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           psect	text3,class=CODE,space=0,reloc=2,group=0
  1862                           	line	76
  1863                           global __ptext3
  1864                           __ptext3:
  1865  0004FE                     psect	text3
  1866                           	file	"./buzzer.h"
  1867                           	line	76
  1868                           	global	__size_of_Delay
  1869                           	__size_of_Delay	equ	__end_of_Delay-_Delay
  1870  0000                     	
  1871                           _Delay:
  1872  0004FE                     ;incstack = 0
  1873                           	opt	stack 28
  1874                           	line	77
  1875                           	
  1876                           l964:
  1877  0004FE                     ;./buzzer.h: 77:     T0CON = 0x84;
  1878                           	movlw	low(084h)
  1879  0004FE  0E84               	movwf	((c:4053)),c	;volatile
  1880  000500  6ED5               	line	78
  1881                           	
  1882                           l966:
  1883  000502                     ;./buzzer.h: 78:     if (xc == 1) TMR0 = 0xFFFF - 1 * 3125;
  1884                           		decf	((c:Delay@xc)),c,w
  1885  000502  0401               iorwf	((c:Delay@xc+1)),c,w
  1886  000504  1002               	btfss	status,2
  1887  000506  A4D8               	goto	u611
  1888  000508  EF88  F002         	goto	u610
  1889  00050C  EF8A  F002         
  1890                           u611:
  1891  000510                     	goto	l970
  1892  000510  EF90  F002         u610:
  1893  000514                     	
  1894                           l968:
  1895  000514                     	movlw	high(0F3CAh)
  1896  000514  0EF3               	movwf	((c:4054+1)),c	;volatile
  1897  000516  6ED7               	movlw	low(0F3CAh)
  1898  000518  0ECA               	movwf	((c:4054)),c	;volatile
  1899  00051A  6ED6               	goto	l1006
  1900  00051C  EF32  F003         	line	79
  1901                           ;./buzzer.h: 79:     else if (xc == 2) TMR0 = 0xFFFF - 2 * 3125;
  1902                           	
  1903                           l61:
  1904  000520                     	
  1905                           l970:
  1906  000520                     		movlw	2
  1907  000520  0E02               	xorwf	((c:Delay@xc)),c,w
  1908  000522  1801               iorwf	((c:Delay@xc+1)),c,w
  1909  000524  1002               	btfss	status,2
  1910  000526  A4D8               	goto	u621
  1911  000528  EF98  F002         	goto	u620
  1912  00052C  EF9A  F002         
  1913                           u621:
  1914  000530                     	goto	l974
  1915  000530  EFA0  F002         u620:
  1916  000534                     	
  1917                           l972:
  1918  000534                     	movlw	high(0E795h)
  1919  000534  0EE7               	movwf	((c:4054+1)),c	;volatile
  1920  000536  6ED7               	movlw	low(0E795h)
  1921  000538  0E95               	movwf	((c:4054)),c	;volatile
  1922  00053A  6ED6               	goto	l1006
  1923  00053C  EF32  F003         	line	80
  1924                           ;./buzzer.h: 80:     else if (xc == 3) TMR0 = 0xFFFF - 3 * 3125;
  1925                           	
  1926                           l63:
  1927  000540                     	
  1928                           l974:
  1929  000540                     		movlw	3
  1930  000540  0E03               	xorwf	((c:Delay@xc)),c,w
  1931  000542  1801               iorwf	((c:Delay@xc+1)),c,w
  1932  000544  1002               	btfss	status,2
  1933  000546  A4D8               	goto	u631
  1934  000548  EFA8  F002         	goto	u630
  1935  00054C  EFAA  F002         
  1936                           u631:
  1937  000550                     	goto	l978
  1938  000550  EFB0  F002         u630:
  1939  000554                     	
  1940                           l976:
  1941  000554                     	movlw	high(0DB60h)
  1942  000554  0EDB               	movwf	((c:4054+1)),c	;volatile
  1943  000556  6ED7               	movlw	low(0DB60h)
  1944  000558  0E60               	movwf	((c:4054)),c	;volatile
  1945  00055A  6ED6               	goto	l1006
  1946  00055C  EF32  F003         	line	81
  1947                           ;./buzzer.h: 81:     else if (xc == 4) TMR0 = 0xFFFF - 4 * 3125;
  1948                           	
  1949                           l65:
  1950  000560                     	
  1951                           l978:
  1952  000560                     		movlw	4
  1953  000560  0E04               	xorwf	((c:Delay@xc)),c,w
  1954  000562  1801               iorwf	((c:Delay@xc+1)),c,w
  1955  000564  1002               	btfss	status,2
  1956  000566  A4D8               	goto	u641
  1957  000568  EFB8  F002         	goto	u640
  1958  00056C  EFBA  F002         
  1959                           u641:
  1960  000570                     	goto	l982
  1961  000570  EFC0  F002         u640:
  1962  000574                     	
  1963                           l980:
  1964  000574                     	movlw	high(0CF2Bh)
  1965  000574  0ECF               	movwf	((c:4054+1)),c	;volatile
  1966  000576  6ED7               	movlw	low(0CF2Bh)
  1967  000578  0E2B               	movwf	((c:4054)),c	;volatile
  1968  00057A  6ED6               	goto	l1006
  1969  00057C  EF32  F003         	line	82
  1970                           ;./buzzer.h: 82:     else if (xc == 5) TMR0 = 0xFFFF - 5 * 3125;
  1971                           	
  1972                           l67:
  1973  000580                     	
  1974                           l982:
  1975  000580                     		movlw	5
  1976  000580  0E05               	xorwf	((c:Delay@xc)),c,w
  1977  000582  1801               iorwf	((c:Delay@xc+1)),c,w
  1978  000584  1002               	btfss	status,2
  1979  000586  A4D8               	goto	u651
  1980  000588  EFC8  F002         	goto	u650
  1981  00058C  EFCA  F002         
  1982                           u651:
  1983  000590                     	goto	l986
  1984  000590  EFD0  F002         u650:
  1985  000594                     	
  1986                           l984:
  1987  000594                     	movlw	high(0C2F6h)
  1988  000594  0EC2               	movwf	((c:4054+1)),c	;volatile
  1989  000596  6ED7               	movlw	low(0C2F6h)
  1990  000598  0EF6               	movwf	((c:4054)),c	;volatile
  1991  00059A  6ED6               	goto	l1006
  1992  00059C  EF32  F003         	line	83
  1993                           ;./buzzer.h: 83:     else if (xc == 6) TMR0 = 0xFFFF - 6 * 3125;
  1994                           	
  1995                           l69:
  1996  0005A0                     	
  1997                           l986:
  1998  0005A0                     		movlw	6
  1999  0005A0  0E06               	xorwf	((c:Delay@xc)),c,w
  2000  0005A2  1801               iorwf	((c:Delay@xc+1)),c,w
  2001  0005A4  1002               	btfss	status,2
  2002  0005A6  A4D8               	goto	u661
  2003  0005A8  EFD8  F002         	goto	u660
  2004  0005AC  EFDA  F002         
  2005                           u661:
  2006  0005B0                     	goto	l990
  2007  0005B0  EFE0  F002         u660:
  2008  0005B4                     	
  2009                           l988:
  2010  0005B4                     	movlw	high(0B6C1h)
  2011  0005B4  0EB6               	movwf	((c:4054+1)),c	;volatile
  2012  0005B6  6ED7               	movlw	low(0B6C1h)
  2013  0005B8  0EC1               	movwf	((c:4054)),c	;volatile
  2014  0005BA  6ED6               	goto	l1006
  2015  0005BC  EF32  F003         	line	84
  2016                           ;./buzzer.h: 84:     else if (xc == 7) TMR0 = 0xFFFF - 7 * 3125;
  2017                           	
  2018                           l71:
  2019  0005C0                     	
  2020                           l990:
  2021  0005C0                     		movlw	7
  2022  0005C0  0E07               	xorwf	((c:Delay@xc)),c,w
  2023  0005C2  1801               iorwf	((c:Delay@xc+1)),c,w
  2024  0005C4  1002               	btfss	status,2
  2025  0005C6  A4D8               	goto	u671
  2026  0005C8  EFE8  F002         	goto	u670
  2027  0005CC  EFEA  F002         
  2028                           u671:
  2029  0005D0                     	goto	l994
  2030  0005D0  EFF0  F002         u670:
  2031  0005D4                     	
  2032                           l992:
  2033  0005D4                     	movlw	high(0AA8Ch)
  2034  0005D4  0EAA               	movwf	((c:4054+1)),c	;volatile
  2035  0005D6  6ED7               	movlw	low(0AA8Ch)
  2036  0005D8  0E8C               	movwf	((c:4054)),c	;volatile
  2037  0005DA  6ED6               	goto	l1006
  2038  0005DC  EF32  F003         	line	85
  2039                           ;./buzzer.h: 85:     else if (xc == 8) TMR0 = 0xFFFF - 8 * 3125;
  2040                           	
  2041                           l73:
  2042  0005E0                     	
  2043                           l994:
  2044  0005E0                     		movlw	8
  2045  0005E0  0E08               	xorwf	((c:Delay@xc)),c,w
  2046  0005E2  1801               iorwf	((c:Delay@xc+1)),c,w
  2047  0005E4  1002               	btfss	status,2
  2048  0005E6  A4D8               	goto	u681
  2049  0005E8  EFF8  F002         	goto	u680
  2050  0005EC  EFFA  F002         
  2051                           u681:
  2052  0005F0                     	goto	l998
  2053  0005F0  EF00  F003         u680:
  2054  0005F4                     	
  2055                           l996:
  2056  0005F4                     	movlw	high(09E57h)
  2057  0005F4  0E9E               	movwf	((c:4054+1)),c	;volatile
  2058  0005F6  6ED7               	movlw	low(09E57h)
  2059  0005F8  0E57               	movwf	((c:4054)),c	;volatile
  2060  0005FA  6ED6               	goto	l1006
  2061  0005FC  EF32  F003         	line	86
  2062                           ;./buzzer.h: 86:     else if (xc == 9) TMR0 = 0xFFFF - 9 * 3125;
  2063                           	
  2064                           l75:
  2065  000600                     	
  2066                           l998:
  2067  000600                     		movlw	9
  2068  000600  0E09               	xorwf	((c:Delay@xc)),c,w
  2069  000602  1801               iorwf	((c:Delay@xc+1)),c,w
  2070  000604  1002               	btfss	status,2
  2071  000606  A4D8               	goto	u691
  2072  000608  EF08  F003         	goto	u690
  2073  00060C  EF0A  F003         
  2074                           u691:
  2075  000610                     	goto	l1002
  2076  000610  EF10  F003         u690:
  2077  000614                     	
  2078                           l1000:
  2079  000614                     	movlw	high(09222h)
  2080  000614  0E92               	movwf	((c:4054+1)),c	;volatile
  2081  000616  6ED7               	movlw	low(09222h)
  2082  000618  0E22               	movwf	((c:4054)),c	;volatile
  2083  00061A  6ED6               	goto	l1006
  2084  00061C  EF32  F003         	line	87
  2085                           ;./buzzer.h: 87:     else if (xc == 10) TMR0 = 0xFFFF - 10 * 3125;
  2086                           	
  2087                           l77:
  2088  000620                     	
  2089                           l1002:
  2090  000620                     		movlw	10
  2091  000620  0E0A               	xorwf	((c:Delay@xc)),c,w
  2092  000622  1801               iorwf	((c:Delay@xc+1)),c,w
  2093  000624  1002               	btfss	status,2
  2094  000626  A4D8               	goto	u701
  2095  000628  EF18  F003         	goto	u700
  2096  00062C  EF1A  F003         
  2097                           u701:
  2098  000630                     	goto	l1006
  2099  000630  EF32  F003         u700:
  2100  000634                     	
  2101                           l1004:
  2102  000634                     	movlw	high(085EDh)
  2103  000634  0E85               	movwf	((c:4054+1)),c	;volatile
  2104  000636  6ED7               	movlw	low(085EDh)
  2105  000638  0EED               	movwf	((c:4054)),c	;volatile
  2106  00063A  6ED6               	goto	l1006
  2107  00063C  EF32  F003         	
  2108                           l79:
  2109  000640                     	goto	l1006
  2110  000640  EF32  F003         	
  2111                           l78:
  2112  000644                     	goto	l1006
  2113  000644  EF32  F003         	
  2114                           l76:
  2115  000648                     	goto	l1006
  2116  000648  EF32  F003         	
  2117                           l74:
  2118  00064C                     	goto	l1006
  2119  00064C  EF32  F003         	
  2120                           l72:
  2121  000650                     	goto	l1006
  2122  000650  EF32  F003         	
  2123                           l70:
  2124  000654                     	goto	l1006
  2125  000654  EF32  F003         	
  2126                           l68:
  2127  000658                     	goto	l1006
  2128  000658  EF32  F003         	
  2129                           l66:
  2130  00065C                     	goto	l1006
  2131  00065C  EF32  F003         	
  2132                           l64:
  2133  000660                     	goto	l1006
  2134  000660  EF32  F003         	
  2135                           l62:
  2136  000664                     	line	88
  2137                           	
  2138                           l1006:
  2139  000664                     ;./buzzer.h: 88:     INTCONbits.TMR0IF = 0;
  2140                           	bcf	((c:4082)),c,2	;volatile
  2141  000664  94F2               	line	89
  2142                           ;./buzzer.h: 89:     while (!INTCONbits.TMR0IF);
  2143                           	goto	l80
  2144  000666  EF35  F003         	
  2145                           l81:
  2146  00066A                     	
  2147                           l80:
  2148  00066A                     	btfss	((c:4082)),c,2	;volatile
  2149  00066A  A4F2               	goto	u711
  2150  00066C  EF3A  F003         	goto	u710
  2151  000670  EF3C  F003         u711:
  2152  000674                     	goto	l80
  2153  000674  EF35  F003         u710:
  2154  000678                     	goto	l83
  2155  000678  EF3E  F003         	
  2156                           l82:
  2157  00067C                     	line	90
  2158                           	
  2159                           l83:
  2160  00067C                     	return	;funcret
  2161  00067C  0012               	opt stack 0
  2162                           GLOBAL	__end_of_Delay
  2163                           	__end_of_Delay:
  2164  00067E                     	signat	_Delay,4217
  2165                           	global	_Hi_ISR
  2166                           
  2167 ;; *************** function _Hi_ISR *****************
  2168 ;; Defined at:
  2169 ;;		line 105 in file "./buzzer.h"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;		None
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;		None
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2, status,0
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2183 ;;      Params:         0       0       0       0       0       0       0
  2184 ;;      Locals:         0       0       0       0       0       0       0
  2185 ;;      Temps:          0       0       0       0       0       0       0
  2186 ;;      Totals:         0       0       0       0       0       0       0
  2187 ;;Total ram usage:        0 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; This function calls:
  2190 ;;		Nothing
  2191 ;; This function is called by:
  2192 ;;		Interrupt level 2
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           psect	intcode,class=CODE,space=0,reloc=2
  2196                           global __pintcode
  2197                           __pintcode:
  2198  000008                     psect	intcode
  2199                           	file	"./buzzer.h"
  2200                           	line	105
  2201                           	global	__size_of_Hi_ISR
  2202                           	__size_of_Hi_ISR	equ	__end_of_Hi_ISR-_Hi_ISR
  2203  0000                     	
  2204                           _Hi_ISR:
  2205  000008                     ;incstack = 0
  2206                           	opt	stack 28
  2207                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  2208  000008  820B               	global	int_func
  2209                           	call	int_func,f	;refresh shadow registers
  2210  00000A  EDCC  F003         psect	intcode_body,class=CODE,space=0,reloc=2
  2211                           global __pintcode_body
  2212                           __pintcode_body:
  2213  000798                     int_func:
  2214  000798                     
  2215                           	pop	; remove dummy address from shadow register refresh
  2216  000798  0006               	line	107
  2217                           	
  2218                           i2l952:
  2219  00079A                     ;./buzzer.h: 107:     if(PIR2bits.CCP2IF == 1) {
  2220                           	btfss	((c:4001)),c,0	;volatile
  2221  00079A  A0A1               	goto	i2u60_41
  2222  00079C  EFD2  F003         	goto	i2u60_40
  2223  0007A0  EFD4  F003         i2u60_41:
  2224  0007A4                     	goto	i2l92
  2225  0007A4  EFDD  F003         i2u60_40:
  2226  0007A8                     	line	108
  2227                           	
  2228                           i2l954:
  2229  0007A8                     ;./buzzer.h: 108:         PIR2bits.CCP2IF = 0;
  2230                           	bcf	((c:4001)),c,0	;volatile
  2231  0007A8  90A1               	line	109
  2232                           	
  2233                           i2l956:
  2234  0007AA                     ;./buzzer.h: 109:         CCPR2 += half_cyc;
  2235                           	movf	((c:_half_cyc)),c,w	;volatile
  2236  0007AA  5009               	addwf	((c:4027)),c	;volatile
  2237  0007AC  26BB               	movf	((c:_half_cyc+1)),c,w	;volatile
  2238  0007AE  500A               	addwfc	((c:4027+1)),c	;volatile
  2239  0007B0  22BC               
  2240                           	goto	i2l92
  2241  0007B2  EFDD  F003         	line	110
  2242                           ;./buzzer.h: 110:     }
  2243                           	
  2244                           i2l91:
  2245  0007B6                     	goto	i2l92
  2246  0007B6  EFDD  F003         	line	111
  2247                           	
  2248                           i2l958:
  2249  0007BA                     	line	112
  2250                           ;./buzzer.h: 111:     return ;
  2251                           	
  2252                           i2l92:
  2253  0007BA                     	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  2254  0007BA  920B               	retfie f
  2255  0007BC  0011               	opt stack 0
  2256                           GLOBAL	__end_of_Hi_ISR
  2257                           	__end_of_Hi_ISR:
  2258  0007BE                     	signat	_Hi_ISR,89
  2259                           	GLOBAL	__activetblptr
  2260                           __activetblptr	EQU	0
  2261  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  2262                           	PSECT	rparam,class=COMRAM,space=1,noexec
  2263                           	GLOBAL	__Lrparam
  2264                           	FNCONF	rparam,??,?
  2265                           	GLOBAL	___rparam_used
  2266                           	___rparam_used EQU 1
  2267  0000                     	GLOBAL	___param_bank
  2268                           	___param_bank EQU 0
  2269  0000                     GLOBAL	__Lparam, __Hparam
  2270                           GLOBAL	__Lrparam, __Hrparam
  2271                           __Lparam	EQU	__Lrparam
  2272  0000                     __Hparam	EQU	__Hrparam
  2273  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  2274                           	global	btemp
  2275                           btemp:
  2276  00000B                     	ds	1
  2277  00000B                     	global	int$flags
  2278                           	int$flags	set btemp
  2279  0000                     	global	wtemp8
  2280                           	wtemp8 set btemp+1
  2281  0000                     	global	ttemp5
  2282                           	ttemp5 set btemp+1
  2283  0000                     	global	ttemp6
  2284                           	ttemp6 set btemp+4
  2285  0000                     	global	ttemp7
  2286                           	ttemp7 set btemp+8
  2287  0000                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      8      10
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_buzz
    _buzz->_Delay

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3176
                               _buzz
 ---------------------------------------------------------------------------------
 (1) _buzz                                                 6     0      6    3176
                                              2 COMRAM     6     0      6
                              _Delay
                        _init_buzzer
 ---------------------------------------------------------------------------------
 (2) _init_buzzer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Delay                                                2     0      2     296
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Hi_ISR                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _buzz
     _Delay
     _init_buzzer

 _Hi_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      8       A       1        7.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       A      15        0.0%
DATA                 0      0       A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Dec 27 23:21:15 2018

                     l50 04D6                       l51 02F0                       l43 00A0  
                     l44 04E2                       l52 04D2                       l61 0520  
                     l53 038A                       l45 0132                       l62 0664  
                     l70 0654                       l46 04DE                       l54 04CE  
                     l71 05C0                       l63 0540                       l55 0424  
                     l47 01C4                       l80 066A                       l64 0660  
                     l72 0650                       l48 04DA                       l56 04CA  
                     l81 066A                       l73 05E0                       l65 0560  
                     l57 04C6                       l49 0256                       l82 067C  
                     l66 065C                       l74 064C                       l58 04FC  
                     l83 067C                       l75 0600                       l67 0580  
                     l68 0658                       l76 0648                       l77 0620  
                     l69 05A0                       l78 0644                       l86 0796  
                     l79 0640                       l97 0766                       l98 0766  
                     l99 076A              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l100 076A                      l780 078C                      l782 078E  
                    l784 0790                      l776 076E                      l970 0520  
                    l786 0792                      l778 077E                      l980 0574  
                    l972 0534                      l964 04FE                      l990 05C0  
                    l982 0580                      l974 0540                      l966 0502  
                    l992 05D4                      l984 0594                      l976 0554  
                    l968 0514                      l994 05E0                      l986 05A0  
                    l978 0560                      l996 05F4                      l988 05B4  
                    l998 0600             __CFG_CPB$OFF 000000                      u610 0514  
           __CFG_CPD$OFF 000000                      u611 0510                      u700 0634  
                    u620 0534                      u701 0630                      u621 0530  
                    u710 0678                      u630 0554                      u711 0674  
                    u631 0550                      u640 0574                      u800 00E0  
                    u720 0024                      u641 0570                      u801 00DC  
                    u721 0020                      u650 0594                      u810 00FC  
                    u730 0040                      u651 0590                      u811 00F8  
                    u731 003C                      u660 05B4                      u900 01D2  
                    u820 010A                      u740 004E                      u661 05B0  
                    u901 01CE                      u821 0106                      u741 004A  
                    u670 05D4                      u910 01EE                      u830 0126  
                    u750 006A                      u671 05D0                      u911 01EA  
                    u831 0122                      u751 0066                      u680 05F4  
                    u920 01FC                      u840 0140                      u760 0078  
                    u681 05F0                      u921 01F8                      u841 013C  
                    u761 0074                      u690 0614                      u930 0218  
                    u850 015C                      u770 0094                      u691 0610  
                    u931 0214                      u851 0158                      u771 0090  
                    u940 0234                      u860 0178                      u780 00BC  
                    u941 0230                      u861 0174                      u781 00B8  
                    u950 024A                      u870 018E                      u790 00D2  
                    u951 0246                      u871 018A                      u791 00CE  
                    u960 0272                      u880 019C                      u961 026E  
                    u881 0198                      u970 0288                      u890 01B8  
                    u971 0284                      u891 01B4                      u980 02A4  
                    u981 02A0                      u990 02BA                      u991 02B6  
           __CFG_IESO$ON 000000             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   l1000 0614                     l1002 0620                     l1010 0016  
                   l1004 0634                     l1100 03D0                     l1020 0078  
                   l1012 0024                     l1006 0664                     l1110 0440  
                   l1102 03E6                     l1030 00E0                     l1022 0094  
                   l1014 0040                     l1120 04BA                     l1112 0456  
                   l1104 0402                     l1040 0140                     l1032 00FC  
                   l1016 004E                     l1024 00A0                     l1008 0012  
                   l1114 0472                     l1106 0418                     l1050 01B8  
                   l1042 015C                     l1034 010A                     l1026 00BC  
                   l1122 04E2                     l1018 006A                     l1130 0686  
                   l1124 04EE                     l1116 0488                     l1108 0424  
                   l1060 0218                     l1044 0178                     l1052 01C4  
                   l1036 0126                     l1028 00D2                     l1126 04FA  
                   l1118 04A4                     l1070 0288                     l1062 0234  
                   l1054 01D2                     l1046 018E                     l1038 0132  
                   l1072 02A4                     l1080 02F0                     l1064 024A  
                   l1056 01EE                     l1048 019C                     l1128 067E  
                   l1090 0368                     l1082 030C                     l1074 02BA  
                   l1058 01FC                     l1066 0256                     l1092 037E  
                   l1084 0322                     l1076 02C8                     l1068 0272  
                   l1086 0330                     l1094 038A                     l1078 02E4  
                   l1096 0398                     l1088 034C                     l1098 03B4  
                   u1000 02C8                     u1001 02C4                     u1010 02E4  
                   u1011 02E0                     u1100 03D0                     u1020 030C  
                   u1101 03CC                     u1021 0308                     u1110 03E6  
                   u1030 0322                     u1111 03E2                     u1031 031E  
                   u1120 0402                     u1040 0330                     u1121 03FE  
                   u1041 032C                     u1130 0418                     u1050 034C  
                   u1131 0414                     u1051 0348                     u1140 0440  
                   u1060 0368                     u1141 043C                     u1061 0364  
                   u1150 0456                     u1070 037E                     u1151 0452  
                   u1071 037A                     u1160 0472                     u1080 0398  
                   u1161 046E                     u1081 0394                     u1170 0488  
                   u1090 03B4                     u1171 0484                     u1091 03B0  
                   u1180 04A4                     u1181 04A0                     u1190 04BA  
                   u1191 04B6                     i2l91 07B6                     i2l92 07BA  
                   _TMR0 000FD6                     _TMR1 000FCE             __CFG_WDTPS$1 000000  
                   _main 067E                     _buzz 0012                     btemp 000B  
                   start 000E            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ?_main 0001                    ?_buzz 0003                    _CCPR2 000FBB  
                  _T0CON 000FD5                    _T1CON 000FCD                    _T3CON 000FB1  
                  _IRCF0 007E9C                    _IRCF1 007E9D                    _IRCF2 007E9E  
                  i2l952 079A                    i2l954 07A8                    i2l956 07AA  
                  i2l958 07BA             ?_init_buzzer 0001                    _Delay 04FE  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    ttemp5 000C  
                  ttemp6 000F                    ttemp7 0013                    status 000FD8  
                  wtemp8 000C           __CFG_PBADEN$ON 000000          __initialization 07BE  
           __end_of_main 076E             __end_of_buzz 04FE                   ??_main 0009  
                 ??_buzz 0009            __activetblptr 000000                   ?_Delay 0001  
                 _INTCON 000FF2                   _Hi_ISR 0008           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000               __accesstop 0080  __end_of__initialization 07C2  
          ___rparam_used 000001            __end_of_Delay 067E           __pcstackCOMRAM 0001  
                ??_Delay 0003     __size_of_init_buzzer 002A                  ?_Hi_ISR 0001  
                _CCP2CON 000FBA                  Delay@xc 0001                  i2u60_40 07A8  
                i2u60_41 07A4          __size_of_Hi_ISR 07B6                  __Hparam 0000  
                __Lparam 0000                  __pcinit 07BE                  __ramtop 0600  
                __ptext0 067E                  __ptext1 0012                  __ptext2 076E  
                __ptext3 04FE           __pintcode_body 0798     end_of_initialization 07C2  
                buzz@red 0003                  int_func 0798                _TRISCbits 000F94  
         __end_of_Hi_ISR 07BE      start_initialization 07BE         __CFG_OSC$INTIO67 000000  
               ??_Hi_ISR 0001         __CFG_LPT1OSC$OFF 000000            ??_init_buzzer 0001  
            __pbssCOMRAM 0009        __CFG_CCP2MX$PORTC 000000                __pintcode 0008  
         __size_of_Delay 0180      __end_of_init_buzzer 0798                 _IPR2bits 000FA2  
               _PIE2bits 000FA0                 _PIR2bits 000FA1                 _RCONbits 000FD0  
               __Hrparam 0000                 __Lrparam 0000                buzz@green 0005  
     __CFG_BOREN$SBORDIS 000000              _init_buzzer 076E                 _half_cyc 0009  
          __size_of_main 00F0            __size_of_buzz 04EC                 int$flags 000B  
             _INTCONbits 000FF2                 buzz@blue 0007                 intlevel2 0000  
